"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[737],{9477:function(e,t,i){i.r(t),i.d(t,{ACESFilmicToneMapping:function(){return ee},AddEquation:function(){return S},AddOperation:function(){return Y},AdditiveAnimationBlendMode:function(){return tg},AdditiveBlending:function(){return v},AlphaFormat:function(){return eC},AlwaysDepth:function(){return U},AlwaysStencilFunc:function(){return t2},AmbientLight:function(){return uY},AmbientLightProbe:function(){return hc},AnimationClip:function(){return u0},AnimationLoader:function(){return uz},AnimationMixer:function(){return h3},AnimationObjectGroup:function(){return hB},AnimationUtils:function(){return ux},ArcCurve:function(){return oj},ArrayCamera:function(){return aU},ArrowHelper:function(){return cw},Audio:function(){return hb},AudioAnalyser:function(){return hA},AudioContext:function(){return hl},AudioListener:function(){return h_},AudioLoader:function(){return hu},AxesHelper:function(){return cM},BackSide:function(){return m},BasicDepthPacking:function(){return t_},BasicShadowMap:function(){return h},Bone:function(){return o8},BooleanKeyframeTrack:function(){return uS},Box2:function(){return hX},Box3:function(){return iG},Box3Helper:function(){return c8},BoxBufferGeometry:function(){return cR},BoxGeometry:function(){return rM},BoxHelper:function(){return cv},BufferAttribute:function(){return n6},BufferGeometry:function(){return ra},BufferGeometryLoader:function(){return ht},ByteType:function(){return e_},Cache:function(){return uL},Camera:function(){return r0},CameraHelper:function(){return cg},CanvasTexture:function(){return o6},CapsuleBufferGeometry:function(){return cP},CapsuleGeometry:function(){return ld},CatmullRomCurve3:function(){return oK},CineonToneMapping:function(){return Q},CircleBufferGeometry:function(){return cD},CircleGeometry:function(){return lp},ClampToEdgeWrapping:function(){return eu},Clock:function(){return hg},Color:function(){return iE},ColorKeyframeTrack:function(){return uw},ColorManagement:function(){return iy},CompressedTexture:function(){return oW},CompressedTextureLoader:function(){return uO},ConeBufferGeometry:function(){return cI},ConeGeometry:function(){return lm},CubeCamera:function(){return rL},CubeReflectionMapping:function(){return en},CubeRefractionMapping:function(){return er},CubeTexture:function(){return rR},CubeTextureLoader:function(){return uU},CubeUVReflectionMapping:function(){return eo},CubicBezierCurve:function(){return lt},CubicBezierCurve3:function(){return li},CubicInterpolant:function(){return u8},CullFaceBack:function(){return o},CullFaceFront:function(){return l},CullFaceFrontBack:function(){return u},CullFaceNone:function(){return a},Curve:function(){return o7},CurvePath:function(){return lu},CustomBlending:function(){return b},CustomToneMapping:function(){return et},CylinderBufferGeometry:function(){return cN},CylinderGeometry:function(){return lf},Cylindrical:function(){return hj},Data3DTexture:function(){return iF},DataArrayTexture:function(){return iI},DataTexture:function(){return oy},DataTexture2DArray:function(){return cC},DataTexture3D:function(){return cL},DataTextureLoader:function(){return u2},DataUtils:function(){return cA},DecrementStencilOp:function(){return tL},DecrementWrapStencilOp:function(){return tP},DefaultLoadingManager:function(){return uP},DepthFormat:function(){return eI},DepthStencilFormat:function(){return eN},DepthTexture:function(){return ak},DirectionalLight:function(){return uX},DirectionalLightHelper:function(){return cp},DiscreteInterpolant:function(){return u_},DodecahedronBufferGeometry:function(){return cF},DodecahedronGeometry:function(){return l$},DoubleSide:function(){return g},DstAlphaFactor:function(){return I},DstColorFactor:function(){return F},DynamicCopyUsage:function(){return t6},DynamicDrawUsage:function(){return tG},DynamicReadUsage:function(){return tH},EdgesGeometry:function(){return l_},EllipseCurve:function(){return o5},EqualDepth:function(){return V},EqualStencilFunc:function(){return tF},EquirectangularReflectionMapping:function(){return es},EquirectangularRefractionMapping:function(){return ea},Euler:function(){return n8},EventDispatcher:function(){return tX},ExtrudeBufferGeometry:function(){return cz},ExtrudeGeometry:function(){return l6},FileLoader:function(){return uF},Float16BufferAttribute:function(){return nJ},Float32BufferAttribute:function(){return nK},Float64BufferAttribute:function(){return n9},FloatType:function(){return eT},Fog:function(){return a5},FogExp2:function(){return a7},FramebufferTexture:function(){return o4},FrontSide:function(){return f},Frustum:function(){return rB},GLBufferAttribute:function(){return h4},GLSL1:function(){return t5},GLSL3:function(){return tj},GreaterDepth:function(){return W},GreaterEqualDepth:function(){return H},GreaterEqualStencilFunc:function(){return tU},GreaterStencilFunc:function(){return tO},GridHelper:function(){return cl},Group:function(){return a2},HalfFloatType:function(){return eE},HemisphereLight:function(){return uk},HemisphereLightHelper:function(){return co},HemisphereLightProbe:function(){return hh},IcosahedronBufferGeometry:function(){return cO},IcosahedronGeometry:function(){return l5},ImageBitmapLoader:function(){return ha},ImageLoader:function(){return uB},ImageUtils:function(){return i1},ImmediateRenderObject:function(){return c1},IncrementStencilOp:function(){return tC},IncrementWrapStencilOp:function(){return tR},InstancedBufferAttribute:function(){return ow},InstancedBufferGeometry:function(){return he},InstancedInterleavedBuffer:function(){return hH},InstancedMesh:function(){return o1},Int16BufferAttribute:function(){return nq},Int32BufferAttribute:function(){return nY},Int8BufferAttribute:function(){return n7},IntType:function(){return ew},InterleavedBuffer:function(){return aq},InterleavedBufferAttribute:function(){return aY},Interpolant:function(){return uv},InterpolateDiscrete:function(){return tu},InterpolateLinear:function(){return th},InterpolateSmooth:function(){return tc},InvertStencilOp:function(){return tD},KeepStencilOp:function(){return t1},KeyframeTrack:function(){return ub},LOD:function(){return op},LatheBufferGeometry:function(){return cB},LatheGeometry:function(){return lc},Layers:function(){return ny},LessDepth:function(){return G},LessEqualDepth:function(){return k},LessEqualStencilFunc:function(){return tz},LessStencilFunc:function(){return tN},Light:function(){return uG},LightProbe:function(){return uK},Line:function(){return oI},Line3:function(){return hJ},LineBasicMaterial:function(){return o0},LineCurve:function(){return ln},LineCurve3:function(){return lr},LineDashedMaterial:function(){return uc},LineLoop:function(){return oO},LineSegments:function(){return oz},LinearEncoding:function(){return t8},LinearFilter:function(){return eg},LinearInterpolant:function(){return uy},LinearMipMapLinearFilter:function(){return e8},LinearMipMapNearestFilter:function(){return ex},LinearMipmapLinearFilter:function(){return ev},LinearMipmapNearestFilter:function(){return e$},LinearSRGBColorSpace:function(){return tE},LinearToneMapping:function(){return J},Loader:function(){return uD},LoaderUtils:function(){return uQ},LoadingManager:function(){return uR},LoopOnce:function(){return ta},LoopPingPong:function(){return tl},LoopRepeat:function(){return to},LuminanceAlphaFormat:function(){return eD},LuminanceFormat:function(){return eP},MOUSE:function(){return r},Material:function(){return nV},MaterialLoader:function(){return u9},MathUtils:function(){return ih},Matrix3:function(){return id},Matrix4:function(){return nh},MaxEquation:function(){return E},Mesh:function(){return rS},MeshBasicMaterial:function(){return nH},MeshDepthMaterial:function(){return aI},MeshDistanceMaterial:function(){return aN},MeshLambertMaterial:function(){return uu},MeshMatcapMaterial:function(){return uh},MeshNormalMaterial:function(){return ul},MeshPhongMaterial:function(){return ua},MeshPhysicalMaterial:function(){return us},MeshStandardMaterial:function(){return ur},MeshToonMaterial:function(){return uo},MinEquation:function(){return T},MirroredRepeatWrapping:function(){return eh},MixOperation:function(){return X},MultiplyBlending:function(){return _},MultiplyOperation:function(){return q},NearestFilter:function(){return ec},NearestMipMapLinearFilter:function(){return em},NearestMipMapNearestFilter:function(){return ep},NearestMipmapLinearFilter:function(){return ef},NearestMipmapNearestFilter:function(){return ed},NeverDepth:function(){return B},NeverStencilFunc:function(){return tI},NoBlending:function(){return $},NoColorSpace:function(){return tM},NoToneMapping:function(){return Z},NormalAnimationBlendMode:function(){return tm},NormalBlending:function(){return x},NotEqualDepth:function(){return j},NotEqualStencilFunc:function(){return tB},NumberKeyframeTrack:function(){return uM},Object3D:function(){return nP},ObjectLoader:function(){return hi},ObjectSpaceNormalMap:function(){return tw},OctahedronBufferGeometry:function(){return cU},OctahedronGeometry:function(){return lj},OneFactor:function(){return C},OneMinusDstAlphaFactor:function(){return N},OneMinusDstColorFactor:function(){return z},OneMinusSrcAlphaFactor:function(){return D},OneMinusSrcColorFactor:function(){return R},OrthographicCamera:function(){return rj},PCFShadowMap:function(){return c},PCFSoftShadowMap:function(){return d},PMREMGenerator:function(){return rQ},Path:function(){return lh},PerspectiveCamera:function(){return rC},Plane:function(){return rF},PlaneBufferGeometry:function(){return c2},PlaneGeometry:function(){return r3},PlaneHelper:function(){return cy},PointLight:function(){return uq},PointLightHelper:function(){return cn},Points:function(){return ok},PointsMaterial:function(){return oB},PolarGridHelper:function(){return cu},PolyhedronBufferGeometry:function(){return c3},PolyhedronGeometry:function(){return lg},PositionalAudio:function(){return hE},PropertyBinding:function(){return hO},PropertyMixer:function(){return h1},QuadraticBezierCurve:function(){return ls},QuadraticBezierCurve3:function(){return la},Quaternion:function(){return iB},QuaternionKeyframeTrack:function(){return uE},QuaternionLinearInterpolant:function(){return uT},REVISION:function(){return n},RGBADepthPacking:function(){return tb},RGBAFormat:function(){return eR},RGBAIntegerFormat:function(){return eU},RGBA_ASTC_10x10_Format:function(){return ti},RGBA_ASTC_10x5_Format:function(){return eQ},RGBA_ASTC_10x6_Format:function(){return te},RGBA_ASTC_10x8_Format:function(){return tt},RGBA_ASTC_12x10_Format:function(){return tn},RGBA_ASTC_12x12_Format:function(){return tr},RGBA_ASTC_4x4_Format:function(){return ej},RGBA_ASTC_5x4_Format:function(){return eq},RGBA_ASTC_5x5_Format:function(){return eX},RGBA_ASTC_6x5_Format:function(){return eY},RGBA_ASTC_6x6_Format:function(){return eZ},RGBA_ASTC_8x5_Format:function(){return eJ},RGBA_ASTC_8x6_Format:function(){return eK},RGBA_ASTC_8x8_Format:function(){return e9},RGBA_BPTC_Format:function(){return ts},RGBA_ETC2_EAC_Format:function(){return e5},RGBA_PVRTC_2BPPV1_Format:function(){return eW},RGBA_PVRTC_4BPPV1_Format:function(){return e4},RGBA_S3TC_DXT1_Format:function(){return e3},RGBA_S3TC_DXT3_Format:function(){return eG},RGBA_S3TC_DXT5_Format:function(){return ek},RGBFormat:function(){return eL},RGB_ETC1_Format:function(){return e6},RGB_ETC2_Format:function(){return e7},RGB_PVRTC_2BPPV1_Format:function(){return eH},RGB_PVRTC_4BPPV1_Format:function(){return eV},RGB_S3TC_DXT1_Format:function(){return e2},RGFormat:function(){return eO},RGIntegerFormat:function(){return eB},RawShaderMaterial:function(){return un},Ray:function(){return nu},Raycaster:function(){return hW},RectAreaLight:function(){return uZ},RedFormat:function(){return eF},RedIntegerFormat:function(){return ez},ReinhardToneMapping:function(){return K},RepeatWrapping:function(){return el},ReplaceStencilOp:function(){return t0},ReverseSubtractEquation:function(){return M},RingBufferGeometry:function(){return cG},RingGeometry:function(){return lq},SRGBColorSpace:function(){return tT},Scene:function(){return aj},ShaderChunk:function(){return rG},ShaderLib:function(){return rV},ShaderMaterial:function(){return r1},ShadowMaterial:function(){return ui},Shape:function(){return lb},ShapeBufferGeometry:function(){return ck},ShapeGeometry:function(){return lX},ShapePath:function(){return cT},ShapeUtils:function(){return lH},ShortType:function(){return eb},Skeleton:function(){return oS},SkeletonHelper:function(){return ci},SkinnedMesh:function(){return ov},Source:function(){return i0},Sphere:function(){return nt},SphereBufferGeometry:function(){return cV},SphereGeometry:function(){return lY},Spherical:function(){return h5},SphericalHarmonics3:function(){return uJ},SplineCurve:function(){return lo},SpotLight:function(){return u6},SpotLightHelper:function(){return h9},Sprite:function(){return ou},SpriteMaterial:function(){return aZ},SrcAlphaFactor:function(){return P},SrcAlphaSaturateFactor:function(){return O},SrcColorFactor:function(){return L},StaticCopyUsage:function(){return tW},StaticDrawUsage:function(){return t3},StaticReadUsage:function(){return tV},StereoCamera:function(){return hm},StreamCopyUsage:function(){return t7},StreamDrawUsage:function(){return tk},StreamReadUsage:function(){return t4},StringKeyframeTrack:function(){return uA},SubtractEquation:function(){return w},SubtractiveBlending:function(){return y},TOUCH:function(){return s},TangentSpaceNormalMap:function(){return tS},TetrahedronBufferGeometry:function(){return cH},TetrahedronGeometry:function(){return lZ},Texture:function(){return iR},TextureLoader:function(){return u3},TorusBufferGeometry:function(){return c4},TorusGeometry:function(){return lJ},TorusKnotBufferGeometry:function(){return cW},TorusKnotGeometry:function(){return lK},Triangle:function(){return nG},TriangleFanDrawMode:function(){return tv},TriangleStripDrawMode:function(){return tx},TrianglesDrawMode:function(){return t$},TubeBufferGeometry:function(){return c6},TubeGeometry:function(){return l9},UVMapping:function(){return ei},Uint16BufferAttribute:function(){return nX},Uint32BufferAttribute:function(){return nZ},Uint8BufferAttribute:function(){return n5},Uint8ClampedBufferAttribute:function(){return nj},Uniform:function(){return hG},UniformsGroup:function(){return hV},UniformsLib:function(){return rk},UniformsUtils:function(){return rA},UnsignedByteType:function(){return ey},UnsignedInt248Type:function(){return e0},UnsignedIntType:function(){return eM},UnsignedShort4444Type:function(){return eA},UnsignedShort5551Type:function(){return e1},UnsignedShortType:function(){return eS},VSMShadowMap:function(){return p},Vector2:function(){return ic},Vector3:function(){return iU},Vector4:function(){return iP},VectorKeyframeTrack:function(){return u1},VideoTexture:function(){return oH},WebGL1Renderer:function(){return a6},WebGL3DRenderTarget:function(){return iz},WebGLArrayRenderTarget:function(){return iN},WebGLCubeRenderTarget:function(){return rP},WebGLMultipleRenderTargets:function(){return iO},WebGLMultisampleRenderTarget:function(){return c0},WebGLRenderTarget:function(){return iD},WebGLRenderer:function(){return aW},WebGLUtils:function(){return aB},WireframeGeometry:function(){return lQ},WrapAroundEnding:function(){return tf},ZeroCurvatureEnding:function(){return td},ZeroFactor:function(){return A},ZeroSlopeEnding:function(){return tp},ZeroStencilOp:function(){return tA},_SRGBAFormat:function(){return tq},sRGBEncoding:function(){return ty}});/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */ let n="144",r={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},s={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},a=0,o=1,l=2,u=3,h=0,c=1,d=2,p=3,f=0,m=1,g=2,$=0,x=1,v=2,y=3,_=4,b=5,S=100,w=101,M=102,T=103,E=104,A=200,C=201,L=202,R=203,P=204,D=205,I=206,N=207,F=208,z=209,O=210,B=0,U=1,G=2,k=3,V=4,H=5,W=6,j=7,q=0,X=1,Y=2,Z=0,J=1,K=2,Q=3,ee=4,et=5,ei=300,en=301,er=302,es=303,ea=304,eo=306,el=1e3,eu=1001,eh=1002,ec=1003,ed=1004,ep=1004,ef=1005,em=1005,eg=1006,e$=1007,ex=1007,ev=1008,e8=1008,ey=1009,e_=1010,eb=1011,eS=1012,ew=1013,eM=1014,eT=1015,eE=1016,eA=1017,e1=1018,e0=1020,eC=1021,eL=1022,eR=1023,eP=1024,eD=1025,eI=1026,eN=1027,eF=1028,ez=1029,eO=1030,eB=1031,eU=1033,e2=33776,e3=33777,eG=33778,ek=33779,eV=35840,eH=35841,e4=35842,eW=35843,e6=36196,e7=37492,e5=37496,ej=37808,eq=37809,eX=37810,eY=37811,eZ=37812,eJ=37813,eK=37814,e9=37815,eQ=37816,te=37817,tt=37818,ti=37819,tn=37820,tr=37821,ts=36492,ta=2200,to=2201,tl=2202,tu=2300,th=2301,tc=2302,td=2400,tp=2401,tf=2402,tm=2500,tg=2501,t$=0,tx=1,tv=2,t8=3e3,ty=3001,t_=3200,tb=3201,tS=0,tw=1,tM="",tT="srgb",tE="srgb-linear",tA=0,t1=7680,t0=7681,tC=7682,tL=7683,tR=34055,tP=34056,tD=5386,tI=512,tN=513,tF=514,tz=515,tO=516,tB=517,tU=518,t2=519,t3=35044,tG=35048,tk=35040,tV=35045,tH=35049,t4=35041,tW=35046,t6=35050,t7=35042,t5="100",tj="300 es",tq=1035;class tX{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});let i=this._listeners;void 0===i[e]&&(i[e]=[]),-1===i[e].indexOf(t)&&i[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;let i=this._listeners;return void 0!==i[e]&&-1!==i[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;let i=this._listeners,n=i[e];if(void 0!==n){let r=n.indexOf(t);-1!==r&&n.splice(r,1)}}dispatchEvent(e){if(void 0===this._listeners)return;let t=this._listeners,i=t[e.type];if(void 0!==i){e.target=this;let n=i.slice(0);for(let r=0,s=n.length;r<s;r++)n[r].call(this,e);e.target=null}}}let tY=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],tZ=1234567,tJ=Math.PI/180,tK=180/Math.PI;function t9(){let e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,i=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=tY[255&e]+tY[e>>8&255]+tY[e>>16&255]+tY[e>>24&255]+"-"+tY[255&t]+tY[t>>8&255]+"-"+tY[t>>16&15|64]+tY[t>>24&255]+"-"+tY[63&i|128]+tY[i>>8&255]+"-"+tY[i>>16&255]+tY[i>>24&255]+tY[255&n]+tY[n>>8&255]+tY[n>>16&255]+tY[n>>24&255];return r.toLowerCase()}function tQ(e,t,i){return Math.max(t,Math.min(i,e))}function ie(e,t){return(e%t+t)%t}function it(e,t,i){return(1-i)*e+i*t}function ii(e){return e*tJ}function ir(e){return e*tK}function is(e){return(e&e-1)==0&&0!==e}function ia(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function io(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}function il(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw Error("Invalid component type.")}}function iu(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw Error("Invalid component type.")}}var ih=Object.freeze({__proto__:null,DEG2RAD:tJ,RAD2DEG:tK,generateUUID:t9,clamp:tQ,euclideanModulo:ie,mapLinear:function(e,t,i,n,r){return n+(e-t)*(r-n)/(i-t)},inverseLerp:function(e,t,i){return e!==t?(i-e)/(t-e):0},lerp:it,damp:function(e,t,i,n){return it(e,t,1-Math.exp(-i*n))},pingpong:function(e,t=1){return t-Math.abs(ie(e,2*t)-t)},smoothstep:function(e,t,i){return e<=t?0:e>=i?1:(e=(e-t)/(i-t))*e*(3-2*e)},smootherstep:function(e,t,i){return e<=t?0:e>=i?1:(e=(e-t)/(i-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){void 0!==e&&(tZ=e);let t=tZ+=1831565813;return t=Math.imul(t^t>>>15,1|t),(((t^=t+Math.imul(t^t>>>7,61|t))^t>>>14)>>>0)/4294967296},degToRad:ii,radToDeg:ir,isPowerOfTwo:is,ceilPowerOfTwo:ia,floorPowerOfTwo:io,setQuaternionFromProperEuler:function(e,t,i,n,r){let s=Math.cos,a=Math.sin,o=s(i/2),l=a(i/2),u=s((t+n)/2),h=a((t+n)/2),c=s((t-n)/2),d=a((t-n)/2),p=s((n-t)/2),f=a((n-t)/2);switch(r){case"XYX":e.set(o*h,l*c,l*d,o*u);break;case"YZY":e.set(l*d,o*h,l*c,o*u);break;case"ZXZ":e.set(l*c,l*d,o*h,o*u);break;case"XZX":e.set(o*h,l*f,l*p,o*u);break;case"YXY":e.set(l*p,o*h,l*f,o*u);break;case"ZYZ":e.set(l*f,l*p,o*h,o*u);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}},normalize:iu,denormalize:il});class ic{constructor(e=0,t=0){ic.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){let t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){let e=Math.atan2(-this.y,-this.x)+Math.PI;return e}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){let i=Math.cos(t),n=Math.sin(t),r=this.x-e.x,s=this.y-e.y;return this.x=r*i-s*n+e.x,this.y=r*n+s*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class id{constructor(){id.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,i,n,r,s,a,o,l){let u=this.elements;return u[0]=e,u[1]=n,u[2]=a,u[3]=t,u[4]=r,u[5]=o,u[6]=i,u[7]=s,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){let t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){let t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let i=e.elements,n=t.elements,r=this.elements,s=i[0],a=i[3],o=i[6],l=i[1],u=i[4],h=i[7],c=i[2],d=i[5],p=i[8],f=n[0],m=n[3],g=n[6],$=n[1],x=n[4],v=n[7],y=n[2],_=n[5],b=n[8];return r[0]=s*f+a*$+o*y,r[3]=s*m+a*x+o*_,r[6]=s*g+a*v+o*b,r[1]=l*f+u*$+h*y,r[4]=l*m+u*x+h*_,r[7]=l*g+u*v+h*b,r[2]=c*f+d*$+p*y,r[5]=c*m+d*x+p*_,r[8]=c*g+d*v+p*b,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){let e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],s=e[4],a=e[5],o=e[6],l=e[7],u=e[8];return t*s*u-t*a*l-i*r*u+i*a*o+n*r*l-n*s*o}invert(){let e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],s=e[4],a=e[5],o=e[6],l=e[7],u=e[8],h=u*s-a*l,c=a*o-u*r,d=l*r-s*o,p=t*h+i*c+n*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);let f=1/p;return e[0]=h*f,e[1]=(n*l-u*i)*f,e[2]=(a*i-n*s)*f,e[3]=c*f,e[4]=(u*t-n*o)*f,e[5]=(n*r-a*t)*f,e[6]=d*f,e[7]=(i*o-l*t)*f,e[8]=(s*t-i*r)*f,this}transpose(){let e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){let t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,n,r,s,a){let o=Math.cos(r),l=Math.sin(r);return this.set(i*o,i*l,-i*(o*s+l*a)+s+e,-n*l,n*o,-n*(-l*s+o*a)+a+t,0,0,1),this}scale(e,t){let i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=t,i[4]*=t,i[7]*=t,this}rotate(e){let t=Math.cos(e),i=Math.sin(e),n=this.elements,r=n[0],s=n[3],a=n[6],o=n[1],l=n[4],u=n[7];return n[0]=t*r+i*o,n[3]=t*s+i*l,n[6]=t*a+i*u,n[1]=-i*r+t*o,n[4]=-i*s+t*l,n[7]=-i*a+t*u,this}translate(e,t){let i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=t*i[2],i[4]+=t*i[5],i[7]+=t*i[8],this}equals(e){let t=this.elements,i=e.elements;for(let n=0;n<9;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){let i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}function ip(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}let im={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function ig(e,t){return new im[e](t)}function i$(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}function ix(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function iv(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}let i8={[tT]:{[tE]:ix},[tE]:{[tT]:iv}},iy={legacyMode:!0,get workingColorSpace(){return tE},set workingColorSpace(colorSpace){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(e,t,i){if(this.legacyMode||t===i||!t||!i)return e;if(i8[t]&&void 0!==i8[t][i]){let n=i8[t][i];return e.r=n(e.r),e.g=n(e.g),e.b=n(e.b),e}throw Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(e,t){return this.convert(e,this.workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this.workingColorSpace)}},i_={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ib={r:0,g:0,b:0},iS={h:0,s:0,l:0},iw={h:0,s:0,l:0};function iM(e,t,i){return(i<0&&(i+=1),i>1&&(i-=1),i<1/6)?e+(t-e)*6*i:i<.5?t:i<2/3?e+(t-e)*6*(2/3-i):e}function iT(e,t){return t.r=e.r,t.g=e.g,t.b=e.b,t}class iE{constructor(e,t,i){if(this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===t&&void 0===i)return this.set(e);return this.setRGB(e,t,i)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=tT){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,iy.toWorkingColorSpace(this,t),this}setRGB(e,t,i,n=tE){return this.r=e,this.g=t,this.b=i,iy.toWorkingColorSpace(this,n),this}setHSL(e,t,i,n=tE){if(e=ie(e,1),t=tQ(t,0,1),i=tQ(i,0,1),0===t)this.r=this.g=this.b=i;else{let r=i<=.5?i*(1+t):i+t-i*t,s=2*i-r;this.r=iM(s,r,e+1/3),this.g=iM(s,r,e),this.b=iM(s,r,e-1/3)}return iy.toWorkingColorSpace(this,n),this}setStyle(e,t=tT){function i(t){void 0!==t&&1>parseFloat(t)&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let r,s=n[1],a=n[2];switch(s){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,iy.toWorkingColorSpace(this,t),i(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,iy.toWorkingColorSpace(this,t),i(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){let o=parseFloat(r[1])/360,l=parseFloat(r[2])/100,u=parseFloat(r[3])/100;return i(r[4]),this.setHSL(o,l,u,t)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){let h=n[1],c=h.length;if(3===c)return this.r=parseInt(h.charAt(0)+h.charAt(0),16)/255,this.g=parseInt(h.charAt(1)+h.charAt(1),16)/255,this.b=parseInt(h.charAt(2)+h.charAt(2),16)/255,iy.toWorkingColorSpace(this,t),this;if(6===c)return this.r=parseInt(h.charAt(0)+h.charAt(1),16)/255,this.g=parseInt(h.charAt(2)+h.charAt(3),16)/255,this.b=parseInt(h.charAt(4)+h.charAt(5),16)/255,iy.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=tT){let i=i_[e.toLowerCase()];return void 0!==i?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=ix(e.r),this.g=ix(e.g),this.b=ix(e.b),this}copyLinearToSRGB(e){return this.r=iv(e.r),this.g=iv(e.g),this.b=iv(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=tT){return iy.fromWorkingColorSpace(iT(this,ib),e),tQ(255*ib.r,0,255)<<16^tQ(255*ib.g,0,255)<<8^tQ(255*ib.b,0,255)<<0}getHexString(e=tT){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=tE){iy.fromWorkingColorSpace(iT(this,ib),t);let i=ib.r,n=ib.g,r=ib.b,s=Math.max(i,n,r),a=Math.min(i,n,r),o,l,u=(a+s)/2;if(a===s)o=0,l=0;else{let h=s-a;switch(l=u<=.5?h/(s+a):h/(2-s-a),s){case i:o=(n-r)/h+(n<r?6:0);break;case n:o=(r-i)/h+2;break;case r:o=(i-n)/h+4}o/=6}return e.h=o,e.s=l,e.l=u,e}getRGB(e,t=tE){return iy.fromWorkingColorSpace(iT(this,ib),t),e.r=ib.r,e.g=ib.g,e.b=ib.b,e}getStyle(e=tT){return(iy.fromWorkingColorSpace(iT(this,ib),e),e!==tT)?`color(${e} ${ib.r} ${ib.g} ${ib.b})`:`rgb(${255*ib.r|0},${255*ib.g|0},${255*ib.b|0})`}offsetHSL(e,t,i){return this.getHSL(iS),iS.h+=e,iS.s+=t,iS.l+=i,this.setHSL(iS.h,iS.s,iS.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(iS),e.getHSL(iw);let i=it(iS.h,iw.h,t),n=it(iS.s,iw.s,t),r=it(iS.l,iw.l,t);return this.setHSL(i,n,r),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}iE.NAMES=i_;let iA;class i1{static getDataURL(e){if(/^data:/i.test(e.src)||"undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===iA&&(iA=i$("canvas")),iA.width=e.width,iA.height=e.height;let i=iA.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=iA}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){let t=i$("canvas");t.width=e.width,t.height=e.height;let i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);let n=i.getImageData(0,0,e.width,e.height),r=n.data;for(let s=0;s<r.length;s++)r[s]=255*ix(r[s]/255);return i.putImageData(n,0,0),t}if(!e.data)return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e;{let a=e.data.slice(0);for(let o=0;o<a.length;o++)a instanceof Uint8Array||a instanceof Uint8ClampedArray?a[o]=Math.floor(255*ix(a[o]/255)):a[o]=ix(a[o]);return{data:a,width:e.width,height:e.height}}}}class i0{constructor(e=null){this.isSource=!0,this.uuid=t9(),this.data=e,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];let i={uuid:this.uuid,url:""},n=this.data;if(null!==n){let r;if(Array.isArray(n)){r=[];for(let s=0,a=n.length;s<a;s++)n[s].isDataTexture?r.push(iC(n[s].image)):r.push(iC(n[s]))}else r=iC(n);i.url=r}return t||(e.images[this.uuid]=i),i}}function iC(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?i1.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let iL=0;class iR extends tX{constructor(e=iR.DEFAULT_IMAGE,t=iR.DEFAULT_MAPPING,i=eu,n=eu,r=eg,s=ev,a=eR,o=ey,l=1,u=t8){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:iL++}),this.uuid=t9(),this.name="",this.source=new i0(e),this.mipmaps=[],this.mapping=t,this.wrapS=i,this.wrapT=n,this.magFilter=r,this.minFilter=s,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new ic(0,0),this.repeat=new ic(1,1),this.center=new ic(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new id,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];let i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==ei)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case el:e.x=e.x-Math.floor(e.x);break;case eu:e.x=e.x<0?0:1;break;case eh:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case el:e.y=e.y-Math.floor(e.y);break;case eu:e.y=e.y<0?0:1;break;case eh:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}}iR.DEFAULT_IMAGE=null,iR.DEFAULT_MAPPING=ei;class iP{constructor(e=0,t=0,i=0,n=1){iP.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){let t=this.x,i=this.y,n=this.z,r=this.w,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*n+s[12]*r,this.y=s[1]*t+s[5]*i+s[9]*n+s[13]*r,this.z=s[2]*t+s[6]*i+s[10]*n+s[14]*r,this.w=s[3]*t+s[7]*i+s[11]*n+s[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);let t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,n,r,s=e.elements,a=s[0],o=s[4],l=s[8],u=s[1],h=s[5],c=s[9],d=s[2],p=s[6],f=s[10];if(.01>Math.abs(o-u)&&.01>Math.abs(l-d)&&.01>Math.abs(c-p)){if(.1>Math.abs(o+u)&&.1>Math.abs(l+d)&&.1>Math.abs(c+p)&&.1>Math.abs(a+h+f-3))return this.set(1,0,0,0),this;t=Math.PI;let m=(a+1)/2,g=(h+1)/2,$=(f+1)/2,x=(o+u)/4,v=(l+d)/4,y=(c+p)/4;return m>g&&m>$?m<.01?(i=0,n=.707106781,r=.707106781):(n=x/(i=Math.sqrt(m)),r=v/i):g>$?g<.01?(i=.707106781,n=0,r=.707106781):(i=x/(n=Math.sqrt(g)),r=y/n):$<.01?(i=.707106781,n=.707106781,r=0):(i=v/(r=Math.sqrt($)),n=y/r),this.set(i,n,r,t),this}let _=Math.sqrt((p-c)*(p-c)+(l-d)*(l-d)+(u-o)*(u-o));return .001>Math.abs(_)&&(_=1),this.x=(p-c)/_,this.y=(l-d)/_,this.z=(u-o)/_,this.w=Math.acos((a+h+f-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class iD extends tX{constructor(e,t,i={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new iP(0,0,e,t),this.scissorTest=!1,this.viewport=new iP(0,0,e,t),this.texture=new iR({width:e,height:t,depth:1},i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==i.generateMipmaps&&i.generateMipmaps,this.texture.internalFormat=void 0!==i.internalFormat?i.internalFormat:null,this.texture.minFilter=void 0!==i.minFilter?i.minFilter:eg,this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0!==i.stencilBuffer&&i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null,this.samples=void 0!==i.samples?i.samples:0}setSize(e,t,i=1){(this.width!==e||this.height!==t||this.depth!==i)&&(this.width=e,this.height=t,this.depth=i,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;let t=Object.assign({},e.texture.image);return this.texture.source=new i0(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class iI extends iR{constructor(e=null,t=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=ec,this.minFilter=ec,this.wrapR=eu,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class iN extends iD{constructor(e,t,i){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=i,this.texture=new iI(null,e,t,i),this.texture.isRenderTargetTexture=!0}}class iF extends iR{constructor(e=null,t=1,i=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=ec,this.minFilter=ec,this.wrapR=eu,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class iz extends iD{constructor(e,t,i){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=i,this.texture=new iF(null,e,t,i),this.texture.isRenderTargetTexture=!0}}class iO extends iD{constructor(e,t,i,n={}){super(e,t,n),this.isWebGLMultipleRenderTargets=!0;let r=this.texture;this.texture=[];for(let s=0;s<i;s++)this.texture[s]=r.clone(),this.texture[s].isRenderTargetTexture=!0}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let n=0,r=this.texture.length;n<r;n++)this.texture[n].image.width=e,this.texture[n].image.height=t,this.texture[n].image.depth=i;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,i=e.texture.length;t<i;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class iB{constructor(e=0,t=0,i=0,n=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=n}static slerpFlat(e,t,i,n,r,s,a){let o=i[n+0],l=i[n+1],u=i[n+2],h=i[n+3],c=r[s+0],d=r[s+1],p=r[s+2],f=r[s+3];if(0===a){e[t+0]=o,e[t+1]=l,e[t+2]=u,e[t+3]=h;return}if(1===a){e[t+0]=c,e[t+1]=d,e[t+2]=p,e[t+3]=f;return}if(h!==f||o!==c||l!==d||u!==p){let m=1-a,g=o*c+l*d+u*p+h*f,$=g>=0?1:-1,x=1-g*g;if(x>Number.EPSILON){let v=Math.sqrt(x),y=Math.atan2(v,g*$);m=Math.sin(m*y)/v,a=Math.sin(a*y)/v}let _=a*$;if(o=o*m+c*_,l=l*m+d*_,u=u*m+p*_,h=h*m+f*_,m===1-a){let b=1/Math.sqrt(o*o+l*l+u*u+h*h);o*=b,l*=b,u*=b,h*=b}}e[t]=o,e[t+1]=l,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,i,n,r,s){let a=i[n],o=i[n+1],l=i[n+2],u=i[n+3],h=r[s],c=r[s+1],d=r[s+2],p=r[s+3];return e[t]=a*p+u*h+o*d-l*c,e[t+1]=o*p+u*c+l*h-a*d,e[t+2]=l*p+u*d+a*c-o*h,e[t+3]=u*p-a*h-o*c-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){let i=e._x,n=e._y,r=e._z,s=e._order,a=Math.cos,o=Math.sin,l=a(i/2),u=a(n/2),h=a(r/2),c=o(i/2),d=o(n/2),p=o(r/2);switch(s){case"XYZ":this._x=c*u*h+l*d*p,this._y=l*d*h-c*u*p,this._z=l*u*p+c*d*h,this._w=l*u*h-c*d*p;break;case"YXZ":this._x=c*u*h+l*d*p,this._y=l*d*h-c*u*p,this._z=l*u*p-c*d*h,this._w=l*u*h+c*d*p;break;case"ZXY":this._x=c*u*h-l*d*p,this._y=l*d*h+c*u*p,this._z=l*u*p+c*d*h,this._w=l*u*h-c*d*p;break;case"ZYX":this._x=c*u*h-l*d*p,this._y=l*d*h+c*u*p,this._z=l*u*p-c*d*h,this._w=l*u*h+c*d*p;break;case"YZX":this._x=c*u*h+l*d*p,this._y=l*d*h+c*u*p,this._z=l*u*p-c*d*h,this._w=l*u*h-c*d*p;break;case"XZY":this._x=c*u*h-l*d*p,this._y=l*d*h-c*u*p,this._z=l*u*p+c*d*h,this._w=l*u*h+c*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){let i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){let t=e.elements,i=t[0],n=t[4],r=t[8],s=t[1],a=t[5],o=t[9],l=t[2],u=t[6],h=t[10],c=i+a+h;if(c>0){let d=.5/Math.sqrt(c+1);this._w=.25/d,this._x=(u-o)*d,this._y=(r-l)*d,this._z=(s-n)*d}else if(i>a&&i>h){let p=2*Math.sqrt(1+i-a-h);this._w=(u-o)/p,this._x=.25*p,this._y=(n+s)/p,this._z=(r+l)/p}else if(a>h){let f=2*Math.sqrt(1+a-i-h);this._w=(r-l)/f,this._x=(n+s)/f,this._y=.25*f,this._z=(o+u)/f}else{let m=2*Math.sqrt(1+h-i-a);this._w=(s-n)/m,this._x=(r+l)/m,this._y=(o+u)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(tQ(this.dot(e),-1,1)))}rotateTowards(e,t){let i=this.angleTo(e);return 0===i||this.slerp(e,Math.min(1,t/i)),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){let i=e._x,n=e._y,r=e._z,s=e._w,a=t._x,o=t._y,l=t._z,u=t._w;return this._x=i*u+s*a+n*l-r*o,this._y=n*u+s*o+r*a-i*l,this._z=r*u+s*l+i*o-n*a,this._w=s*u-i*a-n*o-r*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);let i=this._x,n=this._y,r=this._z,s=this._w,a=s*e._w+i*e._x+n*e._y+r*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=s,this._x=i,this._y=n,this._z=r,this;let o=1-a*a;if(o<=Number.EPSILON){let l=1-t;return this._w=l*s+t*this._w,this._x=l*i+t*this._x,this._y=l*n+t*this._y,this._z=l*r+t*this._z,this.normalize(),this._onChangeCallback(),this}let u=Math.sqrt(o),h=Math.atan2(u,a),c=Math.sin((1-t)*h)/u,d=Math.sin(t*h)/u;return this._w=s*c+this._w*d,this._x=i*c+this._x*d,this._y=n*c+this._y*d,this._z=r*c+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){let e=Math.random(),t=Math.sqrt(1-e),i=Math.sqrt(e),n=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(n),i*Math.sin(r),i*Math.cos(r),t*Math.sin(n))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class iU{constructor(e=0,t=0,i=0){iU.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return void 0===i&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(i3.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(i3.setFromAxisAngle(e,t))}applyMatrix3(e){let t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6]*n,this.y=r[1]*t+r[4]*i+r[7]*n,this.z=r[2]*t+r[5]*i+r[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){let t=this.x,i=this.y,n=this.z,r=e.elements,s=1/(r[3]*t+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*t+r[4]*i+r[8]*n+r[12])*s,this.y=(r[1]*t+r[5]*i+r[9]*n+r[13])*s,this.z=(r[2]*t+r[6]*i+r[10]*n+r[14])*s,this}applyQuaternion(e){let t=this.x,i=this.y,n=this.z,r=e.x,s=e.y,a=e.z,o=e.w,l=o*t+s*n-a*i,u=o*i+a*t-r*n,h=o*n+r*i-s*t,c=-r*t-s*i-a*n;return this.x=l*o+-(c*r)+-(u*a)- -(h*s),this.y=u*o+-(c*s)+-(h*r)- -(l*a),this.z=h*o+-(c*a)+-(l*s)- -(u*r),this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){let t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[4]*i+r[8]*n,this.y=r[1]*t+r[5]*i+r[9]*n,this.z=r[2]*t+r[6]*i+r[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){let i=e.x,n=e.y,r=e.z,s=t.x,a=t.y,o=t.z;return this.x=n*o-r*a,this.y=r*s-i*o,this.z=i*a-n*s,this}projectOnVector(e){let t=e.lengthSq();if(0===t)return this.set(0,0,0);let i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return i2.copy(this).projectOnVector(e),this.sub(i2)}reflect(e){return this.sub(i2.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;let i=this.dot(e)/t;return Math.acos(tQ(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){let n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){let t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){let t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(t),this.y=i*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}let i2=new iU,i3=new iB;class iG{constructor(e=new iU(Infinity,Infinity,Infinity),t=new iU(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=Infinity,i=Infinity,n=Infinity,r=-1/0,s=-1/0,a=-1/0;for(let o=0,l=e.length;o<l;o+=3){let u=e[o],h=e[o+1],c=e[o+2];u<t&&(t=u),h<i&&(i=h),c<n&&(n=c),u>r&&(r=u),h>s&&(s=h),c>a&&(a=c)}return this.min.set(t,i,n),this.max.set(r,s,a),this}setFromBufferAttribute(e){let t=Infinity,i=Infinity,n=Infinity,r=-1/0,s=-1/0,a=-1/0;for(let o=0,l=e.count;o<l;o++){let u=e.getX(o),h=e.getY(o),c=e.getZ(o);u<t&&(t=u),h<i&&(i=h),c<n&&(n=c),u>r&&(r=u),h>s&&(s=h),c>a&&(a=c)}return this.min.set(t,i,n),this.max.set(r,s,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let i=iV.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=Infinity,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);let i=e.geometry;if(void 0!==i){if(t&&void 0!=i.attributes&&void 0!==i.attributes.position){let n=i.attributes.position;for(let r=0,s=n.count;r<s;r++)iV.fromBufferAttribute(n,r).applyMatrix4(e.matrixWorld),this.expandByPoint(iV)}else null===i.boundingBox&&i.computeBoundingBox(),iH.copy(i.boundingBox),iH.applyMatrix4(e.matrixWorld),this.union(iH)}let a=e.children;for(let o=0,l=a.length;o<l;o++)this.expandByObject(a[o],t);return this}containsPoint(e){return!(e.x<this.min.x)&&!(e.x>this.max.x)&&!(e.y<this.min.y)&&!(e.y>this.max.y)&&!(e.z<this.min.z)&&!(e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x)&&!(e.min.x>this.max.x)&&!(e.max.y<this.min.y)&&!(e.min.y>this.max.y)&&!(e.max.z<this.min.z)&&!(e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,iV),iV.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(iq),iX.subVectors(this.max,iq),i4.subVectors(e.a,iq),iW.subVectors(e.b,iq),i6.subVectors(e.c,iq),i7.subVectors(iW,i4),i5.subVectors(i6,iW),ij.subVectors(i4,i6);let t=[0,-i7.z,i7.y,0,-i5.z,i5.y,0,-ij.z,ij.y,i7.z,0,-i7.x,i5.z,0,-i5.x,ij.z,0,-ij.x,-i7.y,i7.x,0,-i5.y,i5.x,0,-ij.y,ij.x,0];return!!(iJ(t,i4,iW,i6,iX)&&iJ(t=[1,0,0,0,1,0,0,0,1],i4,iW,i6,iX))&&(iY.crossVectors(i7,i5),iJ(t=[iY.x,iY.y,iY.z],i4,iW,i6,iX))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){let t=iV.copy(e).clamp(this.min,this.max);return t.sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize(iV).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(ik[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),ik[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),ik[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),ik[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),ik[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),ik[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),ik[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),ik[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(ik)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}let ik=[new iU,new iU,new iU,new iU,new iU,new iU,new iU,new iU],iV=new iU,iH=new iG,i4=new iU,iW=new iU,i6=new iU,i7=new iU,i5=new iU,ij=new iU,iq=new iU,iX=new iU,iY=new iU,iZ=new iU;function iJ(e,t,i,n,r){for(let s=0,a=e.length-3;s<=a;s+=3){iZ.fromArray(e,s);let o=r.x*Math.abs(iZ.x)+r.y*Math.abs(iZ.y)+r.z*Math.abs(iZ.z),l=t.dot(iZ),u=i.dot(iZ),h=n.dot(iZ);if(Math.max(-Math.max(l,u,h),Math.min(l,u,h))>o)return!1}return!0}let iK=new iG,i9=new iU,iQ=new iU,ne=new iU;class nt{constructor(e=new iU,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){let i=this.center;void 0!==t?i.copy(t):iK.setFromPoints(e).getCenter(i);let n=0;for(let r=0,s=e.length;r<s;r++)n=Math.max(n,i.distanceToSquared(e[r]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){let t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){let i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){ne.subVectors(e,this.center);let t=ne.lengthSq();if(t>this.radius*this.radius){let i=Math.sqrt(t),n=(i-this.radius)*.5;this.center.add(ne.multiplyScalar(n/i)),this.radius+=n}return this}union(e){return!0===this.center.equals(e.center)?iQ.set(0,0,1).multiplyScalar(e.radius):iQ.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(i9.copy(e.center).add(iQ)),this.expandByPoint(i9.copy(e.center).sub(iQ)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}let ni=new iU,nn=new iU,nr=new iU,ns=new iU,na=new iU,no=new iU,nl=new iU;class nu{constructor(e=new iU,t=new iU(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,ni)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);let i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){let t=ni.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(ni.copy(this.direction).multiplyScalar(t).add(this.origin),ni.distanceToSquared(e))}distanceSqToSegment(e,t,i,n){nn.copy(e).add(t).multiplyScalar(.5),nr.copy(t).sub(e).normalize(),ns.copy(this.origin).sub(nn);let r=.5*e.distanceTo(t),s=-this.direction.dot(nr),a=ns.dot(this.direction),o=-ns.dot(nr),l=ns.lengthSq(),u=Math.abs(1-s*s),h,c,d,p;if(u>0){if(h=s*o-a,c=s*a-o,p=r*u,h>=0){if(c>=-p){if(c<=p){let f=1/u;h*=f,c*=f,d=h*(h+s*c+2*a)+c*(s*h+c+2*o)+l}else d=-(h=Math.max(0,-(s*(c=r)+a)))*h+c*(c+2*o)+l}else d=-(h=Math.max(0,-(s*(c=-r)+a)))*h+c*(c+2*o)+l}else c<=-p?(c=(h=Math.max(0,-(-s*r+a)))>0?-r:Math.min(Math.max(-r,-o),r),d=-h*h+c*(c+2*o)+l):c<=p?(h=0,d=(c=Math.min(Math.max(-r,-o),r))*(c+2*o)+l):(c=(h=Math.max(0,-(s*r+a)))>0?r:Math.min(Math.max(-r,-o),r),d=-h*h+c*(c+2*o)+l)}else c=s>0?-r:r,d=-(h=Math.max(0,-(s*c+a)))*h+c*(c+2*o)+l;return i&&i.copy(this.direction).multiplyScalar(h).add(this.origin),n&&n.copy(nr).multiplyScalar(c).add(nn),d}intersectSphere(e,t){ni.subVectors(e.center,this.origin);let i=ni.dot(this.direction),n=ni.dot(ni)-i*i,r=e.radius*e.radius;if(n>r)return null;let s=Math.sqrt(r-n),a=i-s,o=i+s;return a<0&&o<0?null:a<0?this.at(o,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){let t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;let i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){let i=this.distanceToPlane(e);return null===i?null:this.at(i,t)}intersectsPlane(e){let t=e.distanceToPoint(this.origin);if(0===t)return!0;let i=e.normal.dot(this.direction);return i*t<0}intersectBox(e,t){let i,n,r,s,a,o,l=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,c=this.origin;return(l>=0?(i=(e.min.x-c.x)*l,n=(e.max.x-c.x)*l):(i=(e.max.x-c.x)*l,n=(e.min.x-c.x)*l),u>=0?(r=(e.min.y-c.y)*u,s=(e.max.y-c.y)*u):(r=(e.max.y-c.y)*u,s=(e.min.y-c.y)*u),i>s||r>n)?null:((r>i||i!=i)&&(i=r),(s<n||n!=n)&&(n=s),h>=0?(a=(e.min.z-c.z)*h,o=(e.max.z-c.z)*h):(a=(e.max.z-c.z)*h,o=(e.min.z-c.z)*h),i>o||a>n)?null:((a>i||i!=i)&&(i=a),(o<n||n!=n)&&(n=o),n<0)?null:this.at(i>=0?i:n,t)}intersectsBox(e){return null!==this.intersectBox(e,ni)}intersectTriangle(e,t,i,n,r){na.subVectors(t,e),no.subVectors(i,e),nl.crossVectors(na,no);let s=this.direction.dot(nl),a;if(s>0){if(n)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}ns.subVectors(this.origin,e);let o=a*this.direction.dot(no.crossVectors(ns,no));if(o<0)return null;let l=a*this.direction.dot(na.cross(ns));if(l<0||o+l>s)return null;let u=-a*ns.dot(nl);return u<0?null:this.at(u/s,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class nh{constructor(){nh.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,i,n,r,s,a,o,l,u,h,c,d,p,f,m){let g=this.elements;return g[0]=e,g[4]=t,g[8]=i,g[12]=n,g[1]=r,g[5]=s,g[9]=a,g[13]=o,g[2]=l,g[6]=u,g[10]=h,g[14]=c,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new nh().fromArray(this.elements)}copy(e){let t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){let t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){let t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){let t=this.elements,i=e.elements,n=1/nc.setFromMatrixColumn(e,0).length(),r=1/nc.setFromMatrixColumn(e,1).length(),s=1/nc.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*r,t[5]=i[5]*r,t[6]=i[6]*r,t[7]=0,t[8]=i[8]*s,t[9]=i[9]*s,t[10]=i[10]*s,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){let t=this.elements,i=e.x,n=e.y,r=e.z,s=Math.cos(i),a=Math.sin(i),o=Math.cos(n),l=Math.sin(n),u=Math.cos(r),h=Math.sin(r);if("XYZ"===e.order){let c=s*u,d=s*h,p=a*u,f=a*h;t[0]=o*u,t[4]=-o*h,t[8]=l,t[1]=d+p*l,t[5]=c-f*l,t[9]=-a*o,t[2]=f-c*l,t[6]=p+d*l,t[10]=s*o}else if("YXZ"===e.order){let m=o*u,g=o*h,$=l*u,x=l*h;t[0]=m+x*a,t[4]=$*a-g,t[8]=s*l,t[1]=s*h,t[5]=s*u,t[9]=-a,t[2]=g*a-$,t[6]=x+m*a,t[10]=s*o}else if("ZXY"===e.order){let v=o*u,y=o*h,_=l*u,b=l*h;t[0]=v-b*a,t[4]=-s*h,t[8]=_+y*a,t[1]=y+_*a,t[5]=s*u,t[9]=b-v*a,t[2]=-s*l,t[6]=a,t[10]=s*o}else if("ZYX"===e.order){let S=s*u,w=s*h,M=a*u,T=a*h;t[0]=o*u,t[4]=M*l-w,t[8]=S*l+T,t[1]=o*h,t[5]=T*l+S,t[9]=w*l-M,t[2]=-l,t[6]=a*o,t[10]=s*o}else if("YZX"===e.order){let E=s*o,A=s*l,C=a*o,L=a*l;t[0]=o*u,t[4]=L-E*h,t[8]=C*h+A,t[1]=h,t[5]=s*u,t[9]=-a*u,t[2]=-l*u,t[6]=A*h+C,t[10]=E-L*h}else if("XZY"===e.order){let R=s*o,P=s*l,D=a*o,I=a*l;t[0]=o*u,t[4]=-h,t[8]=l*u,t[1]=R*h+I,t[5]=s*u,t[9]=P*h-D,t[2]=D*h-P,t[6]=a*u,t[10]=I*h+R}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(np,e,nf)}lookAt(e,t,i){let n=this.elements;return n$.subVectors(e,t),0===n$.lengthSq()&&(n$.z=1),n$.normalize(),nm.crossVectors(i,n$),0===nm.lengthSq()&&(1===Math.abs(i.z)?n$.x+=1e-4:n$.z+=1e-4,n$.normalize(),nm.crossVectors(i,n$)),nm.normalize(),ng.crossVectors(n$,nm),n[0]=nm.x,n[4]=ng.x,n[8]=n$.x,n[1]=nm.y,n[5]=ng.y,n[9]=n$.y,n[2]=nm.z,n[6]=ng.z,n[10]=n$.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let i=e.elements,n=t.elements,r=this.elements,s=i[0],a=i[4],o=i[8],l=i[12],u=i[1],h=i[5],c=i[9],d=i[13],p=i[2],f=i[6],m=i[10],g=i[14],$=i[3],x=i[7],v=i[11],y=i[15],_=n[0],b=n[4],S=n[8],w=n[12],M=n[1],T=n[5],E=n[9],A=n[13],C=n[2],L=n[6],R=n[10],P=n[14],D=n[3],I=n[7],N=n[11],F=n[15];return r[0]=s*_+a*M+o*C+l*D,r[4]=s*b+a*T+o*L+l*I,r[8]=s*S+a*E+o*R+l*N,r[12]=s*w+a*A+o*P+l*F,r[1]=u*_+h*M+c*C+d*D,r[5]=u*b+h*T+c*L+d*I,r[9]=u*S+h*E+c*R+d*N,r[13]=u*w+h*A+c*P+d*F,r[2]=p*_+f*M+m*C+g*D,r[6]=p*b+f*T+m*L+g*I,r[10]=p*S+f*E+m*R+g*N,r[14]=p*w+f*A+m*P+g*F,r[3]=$*_+x*M+v*C+y*D,r[7]=$*b+x*T+v*L+y*I,r[11]=$*S+x*E+v*R+y*N,r[15]=$*w+x*A+v*P+y*F,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){let e=this.elements,t=e[0],i=e[4],n=e[8],r=e[12],s=e[1],a=e[5],o=e[9],l=e[13],u=e[2],h=e[6],c=e[10],d=e[14],p=e[3],f=e[7],m=e[11],g=e[15];return p*(+r*o*h-n*l*h-r*a*c+i*l*c+n*a*d-i*o*d)+f*(+t*o*d-t*l*c+r*s*c-n*s*d+n*l*u-r*o*u)+m*(+t*l*h-t*a*d-r*s*h+i*s*d+r*a*u-i*l*u)+g*(-n*a*u-t*o*h+t*a*c+n*s*h-i*s*c+i*o*u)}transpose(){let e=this.elements,t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){let n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this}invert(){let e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],s=e[4],a=e[5],o=e[6],l=e[7],u=e[8],h=e[9],c=e[10],d=e[11],p=e[12],f=e[13],m=e[14],g=e[15],$=h*m*l-f*c*l+f*o*d-a*m*d-h*o*g+a*c*g,x=p*c*l-u*m*l-p*o*d+s*m*d+u*o*g-s*c*g,v=u*f*l-p*h*l+p*a*d-s*f*d-u*a*g+s*h*g,y=p*h*o-u*f*o-p*a*c+s*f*c+u*a*m-s*h*m,_=t*$+i*x+n*v+r*y;if(0===_)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let b=1/_;return e[0]=$*b,e[1]=(f*c*r-h*m*r-f*n*d+i*m*d+h*n*g-i*c*g)*b,e[2]=(a*m*r-f*o*r+f*n*l-i*m*l-a*n*g+i*o*g)*b,e[3]=(h*o*r-a*c*r-h*n*l+i*c*l+a*n*d-i*o*d)*b,e[4]=x*b,e[5]=(u*m*r-p*c*r+p*n*d-t*m*d-u*n*g+t*c*g)*b,e[6]=(p*o*r-s*m*r-p*n*l+t*m*l+s*n*g-t*o*g)*b,e[7]=(s*c*r-u*o*r+u*n*l-t*c*l-s*n*d+t*o*d)*b,e[8]=v*b,e[9]=(p*h*r-u*f*r-p*i*d+t*f*d+u*i*g-t*h*g)*b,e[10]=(s*f*r-p*a*r+p*i*l-t*f*l-s*i*g+t*a*g)*b,e[11]=(u*a*r-s*h*r-u*i*l+t*h*l+s*i*d-t*a*d)*b,e[12]=y*b,e[13]=(u*f*n-p*h*n+p*i*c-t*f*c-u*i*m+t*h*m)*b,e[14]=(p*a*n-s*f*n-p*i*o+t*f*o+s*i*m-t*a*m)*b,e[15]=(s*h*n-u*a*n+u*i*o-t*h*o-s*i*c+t*a*c)*b,this}scale(e){let t=this.elements,i=e.x,n=e.y,r=e.z;return t[0]*=i,t[4]*=n,t[8]*=r,t[1]*=i,t[5]*=n,t[9]*=r,t[2]*=i,t[6]*=n,t[10]*=r,t[3]*=i,t[7]*=n,t[11]*=r,this}getMaxScaleOnAxis(){let e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,n))}makeTranslation(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){let t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){let i=Math.cos(t),n=Math.sin(t),r=1-i,s=e.x,a=e.y,o=e.z,l=r*s,u=r*a;return this.set(l*s+i,l*a-n*o,l*o+n*a,0,l*a+n*o,u*a+i,u*o-n*s,0,l*o-n*a,u*o+n*s,r*o*o+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,n,r,s){return this.set(1,i,r,0,e,1,s,0,t,n,1,0,0,0,0,1),this}compose(e,t,i){let n=this.elements,r=t._x,s=t._y,a=t._z,o=t._w,l=r+r,u=s+s,h=a+a,c=r*l,d=r*u,p=r*h,f=s*u,m=s*h,g=a*h,$=o*l,x=o*u,v=o*h,y=i.x,_=i.y,b=i.z;return n[0]=(1-(f+g))*y,n[1]=(d+v)*y,n[2]=(p-x)*y,n[3]=0,n[4]=(d-v)*_,n[5]=(1-(c+g))*_,n[6]=(m+$)*_,n[7]=0,n[8]=(p+x)*b,n[9]=(m-$)*b,n[10]=(1-(c+f))*b,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,i){let n=this.elements,r=nc.set(n[0],n[1],n[2]).length(),s=nc.set(n[4],n[5],n[6]).length(),a=nc.set(n[8],n[9],n[10]).length(),o=this.determinant();o<0&&(r=-r),e.x=n[12],e.y=n[13],e.z=n[14],nd.copy(this);let l=1/r,u=1/s,h=1/a;return nd.elements[0]*=l,nd.elements[1]*=l,nd.elements[2]*=l,nd.elements[4]*=u,nd.elements[5]*=u,nd.elements[6]*=u,nd.elements[8]*=h,nd.elements[9]*=h,nd.elements[10]*=h,t.setFromRotationMatrix(nd),i.x=r,i.y=s,i.z=a,this}makePerspective(e,t,i,n,r,s){let a=this.elements;return a[0]=2*r/(t-e),a[4]=0,a[8]=(t+e)/(t-e),a[12]=0,a[1]=0,a[5]=2*r/(i-n),a[9]=(i+n)/(i-n),a[13]=0,a[2]=0,a[6]=0,a[10]=-(s+r)/(s-r),a[14]=-2*s*r/(s-r),a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,i,n,r,s){let a=this.elements,o=1/(t-e),l=1/(i-n),u=1/(s-r);return a[0]=2*o,a[4]=0,a[8]=0,a[12]=-((t+e)*o),a[1]=0,a[5]=2*l,a[9]=0,a[13]=-((i+n)*l),a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-((s+r)*u),a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){let t=this.elements,i=e.elements;for(let n=0;n<16;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){let i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}let nc=new iU,nd=new nh,np=new iU(0,0,0),nf=new iU(1,1,1),nm=new iU,ng=new iU,n$=new iU,nx=new nh,nv=new iB;class n8{constructor(e=0,t=0,i=0,n=n8.DefaultOrder){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,n=this._order){return this._x=e,this._y=t,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){let n=e.elements,r=n[0],s=n[4],a=n[8],o=n[1],l=n[5],u=n[9],h=n[2],c=n[6],d=n[10];switch(t){case"XYZ":this._y=Math.asin(tQ(a,-1,1)),.9999999>Math.abs(a)?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-s,r)):(this._x=Math.atan2(c,l),this._z=0);break;case"YXZ":this._x=Math.asin(-tQ(u,-1,1)),.9999999>Math.abs(u)?(this._y=Math.atan2(a,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(tQ(c,-1,1)),.9999999>Math.abs(c)?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-tQ(h,-1,1)),.9999999>Math.abs(h)?(this._x=Math.atan2(c,d),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(tQ(o,-1,1)),.9999999>Math.abs(o)?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-tQ(s,-1,1)),.9999999>Math.abs(s)?(this._x=Math.atan2(c,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===i&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return nx.makeRotationFromQuaternion(e),this.setFromRotationMatrix(nx,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return nv.setFromEuler(this),this.setFromQuaternion(nv,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}n8.DefaultOrder="XYZ",n8.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class ny{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!=0}isEnabled(e){return(this.mask&(1<<e|0))!=0}}let n_=0,nb=new iU,nS=new iB,nw=new nh,nM=new iU,nT=new iU,nE=new iU,nA=new iB,n1=new iU(1,0,0),n0=new iU(0,1,0),nC=new iU(0,0,1),nL={type:"added"},nR={type:"removed"};class nP extends tX{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:n_++}),this.uuid=t9(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=nP.DefaultUp.clone();let e=new iU,t=new n8,i=new iB,n=new iU(1,1,1);t._onChange(function(){i.setFromEuler(t,!1)}),i._onChange(function(){t.setFromQuaternion(i,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new nh},normalMatrix:{value:new id}}),this.matrix=new nh,this.matrixWorld=new nh,this.matrixAutoUpdate=nP.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=nP.DefaultMatrixWorldAutoUpdate,this.layers=new ny,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return nS.setFromAxisAngle(e,t),this.quaternion.multiply(nS),this}rotateOnWorldAxis(e,t){return nS.setFromAxisAngle(e,t),this.quaternion.premultiply(nS),this}rotateX(e){return this.rotateOnAxis(n1,e)}rotateY(e){return this.rotateOnAxis(n0,e)}rotateZ(e){return this.rotateOnAxis(nC,e)}translateOnAxis(e,t){return nb.copy(e).applyQuaternion(this.quaternion),this.position.add(nb.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(n1,e)}translateY(e){return this.translateOnAxis(n0,e)}translateZ(e){return this.translateOnAxis(nC,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(nw.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?nM.copy(e):nM.set(e,t,i);let n=this.parent;this.updateWorldMatrix(!0,!1),nT.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?nw.lookAt(nT,nM,this.up):nw.lookAt(nM,nT,this.up),this.quaternion.setFromRotationMatrix(nw),n&&(nw.extractRotation(n.matrixWorld),nS.setFromRotationMatrix(nw),this.quaternion.premultiply(nS.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(nL)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}let i=this.children.indexOf(e);return -1!==i&&(e.parent=null,this.children.splice(i,1),e.dispatchEvent(nR)),this}removeFromParent(){let e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){let t=this.children[e];t.parent=null,t.dispatchEvent(nR)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),nw.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),nw.multiply(e.parent.matrixWorld)),e.applyMatrix4(nw),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,n=this.children.length;i<n;i++){let r=this.children[i],s=r.getObjectByProperty(e,t);if(void 0!==s)return s}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(nT,e,nE),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(nT,nA,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);let t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);let t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverseVisible(e)}traverseAncestors(e){let t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);let t=this.children;for(let i=0,n=t.length;i<n;i++){let r=t[i];(!0===r.matrixWorldAutoUpdate||!0===e)&&r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){let i=this.parent;if(!0===e&&null!==i&&!0===i.matrixWorldAutoUpdate&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){let n=this.children;for(let r=0,s=n.length;r<s;r++){let a=n[r];!0===a.matrixWorldAutoUpdate&&a.updateWorldMatrix(!1,!0)}}}toJSON(e){let t=void 0===e||"string"==typeof e,i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});let n={};function r(t,i){return void 0===t[i.uuid]&&(t[i.uuid]=i.toJSON(e)),i.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(n.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=r(e.geometries,this.geometry);let s=this.geometry.parameters;if(void 0!==s&&void 0!==s.shapes){let a=s.shapes;if(Array.isArray(a))for(let o=0,l=a.length;o<l;o++){let u=a[o];r(e.shapes,u)}else r(e.shapes,a)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),void 0!==this.material){if(Array.isArray(this.material)){let h=[];for(let c=0,d=this.material.length;c<d;c++)h.push(r(e.materials,this.material[c]));n.material=h}else n.material=r(e.materials,this.material)}if(this.children.length>0){n.children=[];for(let p=0;p<this.children.length;p++)n.children.push(this.children[p].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let f=0;f<this.animations.length;f++){let m=this.animations[f];n.animations.push(r(e.animations,m))}}if(t){let g=w(e.geometries),$=w(e.materials),x=w(e.textures),v=w(e.images),y=w(e.shapes),_=w(e.skeletons),b=w(e.animations),S=w(e.nodes);g.length>0&&(i.geometries=g),$.length>0&&(i.materials=$),x.length>0&&(i.textures=x),v.length>0&&(i.images=v),y.length>0&&(i.shapes=y),_.length>0&&(i.skeletons=_),b.length>0&&(i.animations=b),S.length>0&&(i.nodes=S)}return i.object=n,i;function w(e){let t=[];for(let i in e){let n=e[i];delete n.metadata,t.push(n)}return t}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let i=0;i<e.children.length;i++){let n=e.children[i];this.add(n.clone())}return this}}nP.DefaultUp=new iU(0,1,0),nP.DefaultMatrixAutoUpdate=!0,nP.DefaultMatrixWorldAutoUpdate=!0;let nD=new iU,nI=new iU,nN=new iU,nF=new iU,nz=new iU,nO=new iU,nB=new iU,nU=new iU,n2=new iU,n3=new iU;class nG{constructor(e=new iU,t=new iU,i=new iU){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,n){n.subVectors(i,t),nD.subVectors(e,t),n.cross(nD);let r=n.lengthSq();return r>0?n.multiplyScalar(1/Math.sqrt(r)):n.set(0,0,0)}static getBarycoord(e,t,i,n,r){nD.subVectors(n,t),nI.subVectors(i,t),nN.subVectors(e,t);let s=nD.dot(nD),a=nD.dot(nI),o=nD.dot(nN),l=nI.dot(nI),u=nI.dot(nN),h=s*l-a*a;if(0===h)return r.set(-2,-1,-1);let c=1/h,d=(l*o-a*u)*c,p=(s*u-a*o)*c;return r.set(1-d-p,p,d)}static containsPoint(e,t,i,n){return this.getBarycoord(e,t,i,n,nF),nF.x>=0&&nF.y>=0&&nF.x+nF.y<=1}static getUV(e,t,i,n,r,s,a,o){return this.getBarycoord(e,t,i,n,nF),o.set(0,0),o.addScaledVector(r,nF.x),o.addScaledVector(s,nF.y),o.addScaledVector(a,nF.z),o}static isFrontFacing(e,t,i,n){return nD.subVectors(i,t),nI.subVectors(e,t),0>nD.cross(nI).dot(n)}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,i,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return nD.subVectors(this.c,this.b),nI.subVectors(this.a,this.b),.5*nD.cross(nI).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return nG.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return nG.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,i,n,r){return nG.getUV(e,this.a,this.b,this.c,t,i,n,r)}containsPoint(e){return nG.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return nG.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){let i=this.a,n=this.b,r=this.c,s,a;nz.subVectors(n,i),nO.subVectors(r,i),nU.subVectors(e,i);let o=nz.dot(nU),l=nO.dot(nU);if(o<=0&&l<=0)return t.copy(i);n2.subVectors(e,n);let u=nz.dot(n2),h=nO.dot(n2);if(u>=0&&h<=u)return t.copy(n);let c=o*h-u*l;if(c<=0&&o>=0&&u<=0)return s=o/(o-u),t.copy(i).addScaledVector(nz,s);n3.subVectors(e,r);let d=nz.dot(n3),p=nO.dot(n3);if(p>=0&&d<=p)return t.copy(r);let f=d*l-o*p;if(f<=0&&l>=0&&p<=0)return a=l/(l-p),t.copy(i).addScaledVector(nO,a);let m=u*p-d*h;if(m<=0&&h-u>=0&&d-p>=0)return nB.subVectors(r,n),a=(h-u)/(h-u+(d-p)),t.copy(n).addScaledVector(nB,a);let g=1/(m+f+c);return s=f*g,a=c*g,t.copy(i).addScaledVector(nz,s).addScaledVector(nO,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let nk=0;class nV extends tX{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:nk++}),this.uuid=t9(),this.name="",this.type="Material",this.blending=x,this.side=f,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=P,this.blendDst=D,this.blendEquation=S,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=k,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=t2,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=t1,this.stencilZFail=t1,this.stencilZPass=t1,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(let t in e){let i=e[t];if(void 0===i){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}let n=this[t];if(void 0===n){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i}}toJSON(e){let t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});let i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function n(e){let t=[];for(let i in e){let n=e[i];delete n.metadata,t.push(n)}return t}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),void 0!==this.sheen&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(i.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(i.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(i.combine=this.combine)),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(i.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(i.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(i.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==x&&(i.blending=this.blending),this.side!==f&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(i.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(i.flatShading=this.flatShading),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),!1===this.fog&&(i.fog=!1),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),t){let r=n(e.textures),s=n(e.images);r.length>0&&(i.textures=r),s.length>0&&(i.images=s)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;let t=e.clippingPlanes,i=null;if(null!==t){let n=t.length;i=Array(n);for(let r=0;r!==n;++r)i[r]=t[r].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}class nH extends nV{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new iE(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=q,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}let n4=new iU,nW=new ic;class n6{constructor(e,t,i){if(Array.isArray(e))throw TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===i,this.usage=t3,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,r=this.itemSize;n<r;n++)this.array[e+n]=t.array[i+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,i=this.count;t<i;t++)nW.fromBufferAttribute(this,t),nW.applyMatrix3(e),this.setXY(t,nW.x,nW.y);else if(3===this.itemSize)for(let n=0,r=this.count;n<r;n++)n4.fromBufferAttribute(this,n),n4.applyMatrix3(e),this.setXYZ(n,n4.x,n4.y,n4.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)n4.fromBufferAttribute(this,t),n4.applyMatrix4(e),this.setXYZ(t,n4.x,n4.y,n4.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)n4.fromBufferAttribute(this,t),n4.applyNormalMatrix(e),this.setXYZ(t,n4.x,n4.y,n4.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)n4.fromBufferAttribute(this,t),n4.transformDirection(e),this.setXYZ(t,n4.x,n4.y,n4.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=il(t,this.array)),t}setX(e,t){return this.normalized&&(t=iu(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=il(t,this.array)),t}setY(e,t){return this.normalized&&(t=iu(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=il(t,this.array)),t}setZ(e,t){return this.normalized&&(t=iu(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=il(t,this.array)),t}setW(e,t){return this.normalized&&(t=iu(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=iu(t,this.array),i=iu(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=iu(t,this.array),i=iu(i,this.array),n=iu(n,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this}setXYZW(e,t,i,n,r){return e*=this.itemSize,this.normalized&&(t=iu(t,this.array),i=iu(i,this.array),n=iu(n,this.array),r=iu(r,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==t3&&(e.usage=this.usage),(0!==this.updateRange.offset||-1!==this.updateRange.count)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class n7 extends n6{constructor(e,t,i){super(new Int8Array(e),t,i)}}class n5 extends n6{constructor(e,t,i){super(new Uint8Array(e),t,i)}}class nj extends n6{constructor(e,t,i){super(new Uint8ClampedArray(e),t,i)}}class nq extends n6{constructor(e,t,i){super(new Int16Array(e),t,i)}}class nX extends n6{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class nY extends n6{constructor(e,t,i){super(new Int32Array(e),t,i)}}class nZ extends n6{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class nJ extends n6{constructor(e,t,i){super(new Uint16Array(e),t,i),this.isFloat16BufferAttribute=!0}}class nK extends n6{constructor(e,t,i){super(new Float32Array(e),t,i)}}class n9 extends n6{constructor(e,t,i){super(new Float64Array(e),t,i)}}let nQ=0,re=new nh,rt=new nP,ri=new iU,rn=new iG,rr=new iG,rs=new iU;class ra extends tX{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:nQ++}),this.uuid=t9(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(ip(e)?nZ:nX)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){let t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);let i=this.attributes.normal;if(void 0!==i){let n=new id().getNormalMatrix(e);i.applyNormalMatrix(n),i.needsUpdate=!0}let r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(e),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return re.makeRotationFromQuaternion(e),this.applyMatrix4(re),this}rotateX(e){return re.makeRotationX(e),this.applyMatrix4(re),this}rotateY(e){return re.makeRotationY(e),this.applyMatrix4(re),this}rotateZ(e){return re.makeRotationZ(e),this.applyMatrix4(re),this}translate(e,t,i){return re.makeTranslation(e,t,i),this.applyMatrix4(re),this}scale(e,t,i){return re.makeScale(e,t,i),this.applyMatrix4(re),this}lookAt(e){return rt.lookAt(e),rt.updateMatrix(),this.applyMatrix4(rt.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ri).negate(),this.translate(ri.x,ri.y,ri.z),this}setFromPoints(e){let t=[];for(let i=0,n=e.length;i<n;i++){let r=e[i];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new nK(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new iG);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new iU(-1/0,-1/0,-1/0),new iU(Infinity,Infinity,Infinity));return}if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,n=t.length;i<n;i++){let r=t[i];rn.setFromBufferAttribute(r),this.morphTargetsRelative?(rs.addVectors(this.boundingBox.min,rn.min),this.boundingBox.expandByPoint(rs),rs.addVectors(this.boundingBox.max,rn.max),this.boundingBox.expandByPoint(rs)):(this.boundingBox.expandByPoint(rn.min),this.boundingBox.expandByPoint(rn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new nt);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new iU,1/0);return}if(e){let i=this.boundingSphere.center;if(rn.setFromBufferAttribute(e),t)for(let n=0,r=t.length;n<r;n++){let s=t[n];rr.setFromBufferAttribute(s),this.morphTargetsRelative?(rs.addVectors(rn.min,rr.min),rn.expandByPoint(rs),rs.addVectors(rn.max,rr.max),rn.expandByPoint(rs)):(rn.expandByPoint(rr.min),rn.expandByPoint(rr.max))}rn.getCenter(i);let a=0;for(let o=0,l=e.count;o<l;o++)rs.fromBufferAttribute(e,o),a=Math.max(a,i.distanceToSquared(rs));if(t)for(let u=0,h=t.length;u<h;u++){let c=t[u],d=this.morphTargetsRelative;for(let p=0,f=c.count;p<f;p++)rs.fromBufferAttribute(c,p),d&&(ri.fromBufferAttribute(e,p),rs.add(ri)),a=Math.max(a,i.distanceToSquared(rs))}this.boundingSphere.radius=Math.sqrt(a),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let i=e.array,n=t.position.array,r=t.normal.array,s=t.uv.array,a=n.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new n6(new Float32Array(4*a),4));let o=this.getAttribute("tangent").array,l=[],u=[];for(let h=0;h<a;h++)l[h]=new iU,u[h]=new iU;let c=new iU,d=new iU,p=new iU,f=new ic,m=new ic,g=new ic,$=new iU,x=new iU;function v(e,t,i){c.fromArray(n,3*e),d.fromArray(n,3*t),p.fromArray(n,3*i),f.fromArray(s,2*e),m.fromArray(s,2*t),g.fromArray(s,2*i),d.sub(c),p.sub(c),m.sub(f),g.sub(f);let r=1/(m.x*g.y-g.x*m.y);isFinite(r)&&($.copy(d).multiplyScalar(g.y).addScaledVector(p,-m.y).multiplyScalar(r),x.copy(p).multiplyScalar(m.x).addScaledVector(d,-g.x).multiplyScalar(r),l[e].add($),l[t].add($),l[i].add($),u[e].add(x),u[t].add(x),u[i].add(x))}let y=this.groups;0===y.length&&(y=[{start:0,count:i.length}]);for(let _=0,b=y.length;_<b;++_){let S=y[_],w=S.start,M=S.count;for(let T=w,E=w+M;T<E;T+=3)v(i[T+0],i[T+1],i[T+2])}let A=new iU,C=new iU,L=new iU,R=new iU;function P(e){L.fromArray(r,3*e),R.copy(L);let t=l[e];A.copy(t),A.sub(L.multiplyScalar(L.dot(t))).normalize(),C.crossVectors(R,t);let i=C.dot(u[e]);o[4*e]=A.x,o[4*e+1]=A.y,o[4*e+2]=A.z,o[4*e+3]=i<0?-1:1}for(let D=0,I=y.length;D<I;++D){let N=y[D],F=N.start,z=N.count;for(let O=F,B=F+z;O<B;O+=3)P(i[O+0]),P(i[O+1]),P(i[O+2])}}computeVertexNormals(){let e=this.index,t=this.getAttribute("position");if(void 0!==t){let i=this.getAttribute("normal");if(void 0===i)i=new n6(new Float32Array(3*t.count),3),this.setAttribute("normal",i);else for(let n=0,r=i.count;n<r;n++)i.setXYZ(n,0,0,0);let s=new iU,a=new iU,o=new iU,l=new iU,u=new iU,h=new iU,c=new iU,d=new iU;if(e)for(let p=0,f=e.count;p<f;p+=3){let m=e.getX(p+0),g=e.getX(p+1),$=e.getX(p+2);s.fromBufferAttribute(t,m),a.fromBufferAttribute(t,g),o.fromBufferAttribute(t,$),c.subVectors(o,a),d.subVectors(s,a),c.cross(d),l.fromBufferAttribute(i,m),u.fromBufferAttribute(i,g),h.fromBufferAttribute(i,$),l.add(c),u.add(c),h.add(c),i.setXYZ(m,l.x,l.y,l.z),i.setXYZ(g,u.x,u.y,u.z),i.setXYZ($,h.x,h.y,h.z)}else for(let x=0,v=t.count;x<v;x+=3)s.fromBufferAttribute(t,x+0),a.fromBufferAttribute(t,x+1),o.fromBufferAttribute(t,x+2),c.subVectors(o,a),d.subVectors(s,a),c.cross(d),i.setXYZ(x+0,c.x,c.y,c.z),i.setXYZ(x+1,c.x,c.y,c.z),i.setXYZ(x+2,c.x,c.y,c.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){let e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)rs.fromBufferAttribute(e,t),rs.normalize(),e.setXYZ(t,rs.x,rs.y,rs.z)}toNonIndexed(){function e(e,t){let i=e.array,n=e.itemSize,r=e.normalized,s=new i.constructor(t.length*n),a=0,o=0;for(let l=0,u=t.length;l<u;l++){a=e.isInterleavedBufferAttribute?t[l]*e.data.stride+e.offset:t[l]*n;for(let h=0;h<n;h++)s[o++]=i[a++]}return new n6(s,n,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let t=new ra,i=this.index.array,n=this.attributes;for(let r in n){let s=n[r],a=e(s,i);t.setAttribute(r,a)}let o=this.morphAttributes;for(let l in o){let u=[],h=o[l];for(let c=0,d=h.length;c<d;c++){let p=h[c],f=e(p,i);u.push(f)}t.morphAttributes[l]=u}t.morphTargetsRelative=this.morphTargetsRelative;let m=this.groups;for(let g=0,$=m.length;g<$;g++){let x=m[g];t.addGroup(x.start,x.count,x.materialIndex)}return t}toJSON(){let e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){let t=this.parameters;for(let i in t)void 0!==t[i]&&(e[i]=t[i]);return e}e.data={attributes:{}};let n=this.index;null!==n&&(e.data.index={type:n.array.constructor.name,array:Array.prototype.slice.call(n.array)});let r=this.attributes;for(let s in r){let a=r[s];e.data.attributes[s]=a.toJSON(e.data)}let o={},l=!1;for(let u in this.morphAttributes){let h=this.morphAttributes[u],c=[];for(let d=0,p=h.length;d<p;d++){let f=h[d];c.push(f.toJSON(e.data))}c.length>0&&(o[u]=c,l=!0)}l&&(e.data.morphAttributes=o,e.data.morphTargetsRelative=this.morphTargetsRelative);let m=this.groups;m.length>0&&(e.data.groups=JSON.parse(JSON.stringify(m)));let g=this.boundingSphere;return null!==g&&(e.data.boundingSphere={center:g.center.toArray(),radius:g.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let t={};this.name=e.name;let i=e.index;null!==i&&this.setIndex(i.clone(t));let n=e.attributes;for(let r in n){let s=n[r];this.setAttribute(r,s.clone(t))}let a=e.morphAttributes;for(let o in a){let l=[],u=a[o];for(let h=0,c=u.length;h<c;h++)l.push(u[h].clone(t));this.morphAttributes[o]=l}this.morphTargetsRelative=e.morphTargetsRelative;let d=e.groups;for(let p=0,f=d.length;p<f;p++){let m=d[p];this.addGroup(m.start,m.count,m.materialIndex)}let g=e.boundingBox;null!==g&&(this.boundingBox=g.clone());let $=e.boundingSphere;return null!==$&&(this.boundingSphere=$.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}let ro=new nh,rl=new nu,ru=new nt,rh=new iU,rc=new iU,rd=new iU,rp=new iU,rf=new iU,rm=new iU,rg=new iU,r$=new iU,rx=new iU,rv=new ic,r8=new ic,ry=new ic,r_=new iU,rb=new iU;class rS extends nP{constructor(e=new ra,t=new nH){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){let e=this.geometry,t=e.morphAttributes,i=Object.keys(t);if(i.length>0){let n=t[i[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=n.length;r<s;r++){let a=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}raycast(e,t){let i=this.geometry,n=this.material,r=this.matrixWorld;if(void 0===n||(null===i.boundingSphere&&i.computeBoundingSphere(),ru.copy(i.boundingSphere),ru.applyMatrix4(r),!1===e.ray.intersectsSphere(ru))||(ro.copy(r).invert(),rl.copy(e.ray).applyMatrix4(ro),null!==i.boundingBox&&!1===rl.intersectsBox(i.boundingBox)))return;let s,a=i.index,o=i.attributes.position,l=i.morphAttributes.position,u=i.morphTargetsRelative,h=i.attributes.uv,c=i.attributes.uv2,d=i.groups,p=i.drawRange;if(null!==a){if(Array.isArray(n))for(let f=0,m=d.length;f<m;f++){let g=d[f],$=n[g.materialIndex],x=Math.max(g.start,p.start),v=Math.min(a.count,Math.min(g.start+g.count,p.start+p.count));for(let y=x,_=v;y<_;y+=3){let b=a.getX(y),S=a.getX(y+1),w=a.getX(y+2);(s=rw(this,$,e,rl,o,l,u,h,c,b,S,w))&&(s.faceIndex=Math.floor(y/3),s.face.materialIndex=g.materialIndex,t.push(s))}}else{let M=Math.max(0,p.start),T=Math.min(a.count,p.start+p.count);for(let E=M,A=T;E<A;E+=3){let C=a.getX(E),L=a.getX(E+1),R=a.getX(E+2);(s=rw(this,n,e,rl,o,l,u,h,c,C,L,R))&&(s.faceIndex=Math.floor(E/3),t.push(s))}}}else if(void 0!==o){if(Array.isArray(n))for(let P=0,D=d.length;P<D;P++){let I=d[P],N=n[I.materialIndex],F=Math.max(I.start,p.start),z=Math.min(o.count,Math.min(I.start+I.count,p.start+p.count));for(let O=F,B=z;O<B;O+=3){let U=O,G=O+1,k=O+2;(s=rw(this,N,e,rl,o,l,u,h,c,U,G,k))&&(s.faceIndex=Math.floor(O/3),s.face.materialIndex=I.materialIndex,t.push(s))}}else{let V=Math.max(0,p.start),H=Math.min(o.count,p.start+p.count);for(let W=V,j=H;W<j;W+=3){let q=W,X=W+1,Y=W+2;(s=rw(this,n,e,rl,o,l,u,h,c,q,X,Y))&&(s.faceIndex=Math.floor(W/3),t.push(s))}}}}}function rw(e,t,i,n,r,s,a,o,l,u,h,c){rh.fromBufferAttribute(r,u),rc.fromBufferAttribute(r,h),rd.fromBufferAttribute(r,c);let d=e.morphTargetInfluences;if(s&&d){rg.set(0,0,0),r$.set(0,0,0),rx.set(0,0,0);for(let p=0,f=s.length;p<f;p++){let $=d[p],x=s[p];0!==$&&(rp.fromBufferAttribute(x,u),rf.fromBufferAttribute(x,h),rm.fromBufferAttribute(x,c),a?(rg.addScaledVector(rp,$),r$.addScaledVector(rf,$),rx.addScaledVector(rm,$)):(rg.addScaledVector(rp.sub(rh),$),r$.addScaledVector(rf.sub(rc),$),rx.addScaledVector(rm.sub(rd),$)))}rh.add(rg),rc.add(r$),rd.add(rx)}e.isSkinnedMesh&&(e.boneTransform(u,rh),e.boneTransform(h,rc),e.boneTransform(c,rd));let v=function(e,t,i,n,r,s,a,o){let l;if(null===(t.side===m?n.intersectTriangle(a,s,r,!0,o):n.intersectTriangle(r,s,a,t.side!==g,o)))return null;rb.copy(o),rb.applyMatrix4(e.matrixWorld);let u=i.ray.origin.distanceTo(rb);return u<i.near||u>i.far?null:{distance:u,point:rb.clone(),object:e}}(e,t,i,n,rh,rc,rd,r_);if(v){o&&(rv.fromBufferAttribute(o,u),r8.fromBufferAttribute(o,h),ry.fromBufferAttribute(o,c),v.uv=nG.getUV(r_,rh,rc,rd,rv,r8,ry,new ic)),l&&(rv.fromBufferAttribute(l,u),r8.fromBufferAttribute(l,h),ry.fromBufferAttribute(l,c),v.uv2=nG.getUV(r_,rh,rc,rd,rv,r8,ry,new ic));let y={a:u,b:h,c:c,normal:new iU,materialIndex:0};nG.getNormal(rh,rc,rd,y.normal),v.face=y}return v}class rM extends ra{constructor(e=1,t=1,i=1,n=1,r=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:r,depthSegments:s};let a=this;n=Math.floor(n),r=Math.floor(r),s=Math.floor(s);let o=[],l=[],u=[],h=[],c=0,d=0;function p(e,t,i,n,r,s,p,f,m,g,$){let x=s/m,v=p/g,y=s/2,_=p/2,b=f/2,S=m+1,w=g+1,M=0,T=0,E=new iU;for(let A=0;A<w;A++){let C=A*v-_;for(let L=0;L<S;L++){let R=L*x-y;E[e]=R*n,E[t]=C*r,E[i]=b,l.push(E.x,E.y,E.z),E[e]=0,E[t]=0,E[i]=f>0?1:-1,u.push(E.x,E.y,E.z),h.push(L/m),h.push(1-A/g),M+=1}}for(let P=0;P<g;P++)for(let D=0;D<m;D++){let I=c+D+S*P,N=c+D+S*(P+1),F=c+(D+1)+S*(P+1),z=c+(D+1)+S*P;o.push(I,N,z),o.push(N,F,z),T+=6}a.addGroup(d,T,$),d+=T,c+=M}p("z","y","x",-1,-1,i,t,e,s,r,0),p("z","y","x",1,-1,i,t,-e,s,r,1),p("x","z","y",1,1,e,i,t,n,s,2),p("x","z","y",1,-1,e,i,-t,n,s,3),p("x","y","z",1,-1,e,t,i,n,r,4),p("x","y","z",-1,-1,e,t,-i,n,r,5),this.setIndex(o),this.setAttribute("position",new nK(l,3)),this.setAttribute("normal",new nK(u,3)),this.setAttribute("uv",new nK(h,2))}static fromJSON(e){return new rM(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function rT(e){let t={};for(let i in e)for(let n in t[i]={},e[i]){let r=e[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?t[i][n]=r.clone():Array.isArray(r)?t[i][n]=r.slice():t[i][n]=r}return t}function rE(e){let t={};for(let i=0;i<e.length;i++){let n=rT(e[i]);for(let r in n)t[r]=n[r]}return t}let rA={clone:rT,merge:rE};class r1 extends nV{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=rT(e.uniforms),this.uniformsGroups=function(e){let t=[];for(let i=0;i<e.length;i++)t.push(e[i].clone());return t}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){let t=super.toJSON(e);for(let i in t.glslVersion=this.glslVersion,t.uniforms={},this.uniforms){let n=this.uniforms[i],r=n.value;r&&r.isTexture?t.uniforms[i]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[i]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[i]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[i]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[i]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[i]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[i]={type:"m4",value:r.toArray()}:t.uniforms[i]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;let s={};for(let a in this.extensions)!0===this.extensions[a]&&(s[a]=!0);return Object.keys(s).length>0&&(t.extensions=s),t}}class r0 extends nP{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new nh,this.projectionMatrix=new nh,this.projectionMatrixInverse=new nh}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class rC extends r0{constructor(e=50,t=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){let t=.5*this.getFilmHeight()/e;this.fov=2*tK*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){let e=Math.tan(.5*tJ*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*tK*Math.atan(Math.tan(.5*tJ*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,i,n,r,s){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=this.near,t=e*Math.tan(.5*tJ*this.fov)/this.zoom,i=2*t,n=this.aspect*i,r=-.5*n,s=this.view;if(null!==this.view&&this.view.enabled){let a=s.fullWidth,o=s.fullHeight;r+=s.offsetX*n/a,t-=s.offsetY*i/o,n*=s.width/a,i*=s.height/o}let l=this.filmOffset;0!==l&&(r+=e*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,t,t-i,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}class rL extends nP{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i;let n=new rC(90,1,e,t);n.layers=this.layers,n.up.set(0,-1,0),n.lookAt(new iU(1,0,0)),this.add(n);let r=new rC(90,1,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new iU(-1,0,0)),this.add(r);let s=new rC(90,1,e,t);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new iU(0,1,0)),this.add(s);let a=new rC(90,1,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new iU(0,-1,0)),this.add(a);let o=new rC(90,1,e,t);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new iU(0,0,1)),this.add(o);let l=new rC(90,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new iU(0,0,-1)),this.add(l)}update(e,t){null===this.parent&&this.updateMatrixWorld();let i=this.renderTarget,[n,r,s,a,o,l]=this.children,u=e.getRenderTarget(),h=e.toneMapping,c=e.xr.enabled;e.toneMapping=Z,e.xr.enabled=!1;let d=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0),e.render(t,n),e.setRenderTarget(i,1),e.render(t,r),e.setRenderTarget(i,2),e.render(t,s),e.setRenderTarget(i,3),e.render(t,a),e.setRenderTarget(i,4),e.render(t,o),i.texture.generateMipmaps=d,e.setRenderTarget(i,5),e.render(t,l),e.setRenderTarget(u),e.toneMapping=h,e.xr.enabled=c,i.texture.needsPMREMUpdate=!0}}class rR extends iR{constructor(e,t,i,n,r,s,a,o,l,u){super(e=void 0!==e?e:[],t=void 0!==t?t:en,i,n,r,s,a,o,l,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class rP extends iD{constructor(e,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;let i={width:e,height:e,depth:1};this.texture=new rR([i,i,i,i,i,i],t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:eg}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;let i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new rM(5,5,5),r=new r1({name:"CubemapFromEquirect",uniforms:rT(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:m,blending:$});r.uniforms.tEquirect.value=t;let s=new rS(n,r),a=t.minFilter;t.minFilter===ev&&(t.minFilter=eg);let o=new rL(1,10,this);return o.update(e,s),t.minFilter=a,s.geometry.dispose(),s.material.dispose(),this}clear(e,t,i,n){let r=e.getRenderTarget();for(let s=0;s<6;s++)e.setRenderTarget(this,s),e.clear(t,i,n);e.setRenderTarget(r)}}let rD=new iU,rI=new iU,rN=new id;class rF{constructor(e=new iU(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){let n=rD.subVectors(i,t).cross(rI.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){let e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){let i=e.delta(rD),n=this.normal.dot(i);if(0===n)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;let r=-(e.start.dot(this.normal)+this.constant)/n;return r<0||r>1?null:t.copy(i).multiplyScalar(r).add(e.start)}intersectsLine(e){let t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){let i=t||rN.getNormalMatrix(e),n=this.coplanarPoint(rD).applyMatrix4(e),r=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}let rz=new nt,rO=new iU;class rB{constructor(e=new rF,t=new rF,i=new rF,n=new rF,r=new rF,s=new rF){this.planes=[e,t,i,n,r,s]}set(e,t,i,n,r,s){let a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(n),a[4].copy(r),a[5].copy(s),this}copy(e){let t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){let t=this.planes,i=e.elements,n=i[0],r=i[1],s=i[2],a=i[3],o=i[4],l=i[5],u=i[6],h=i[7],c=i[8],d=i[9],p=i[10],f=i[11],m=i[12],g=i[13],$=i[14],x=i[15];return t[0].setComponents(a-n,h-o,f-c,x-m).normalize(),t[1].setComponents(a+n,h+o,f+c,x+m).normalize(),t[2].setComponents(a+r,h+l,f+d,x+g).normalize(),t[3].setComponents(a-r,h-l,f-d,x-g).normalize(),t[4].setComponents(a-s,h-u,f-p,x-$).normalize(),t[5].setComponents(a+s,h+u,f+p,x+$).normalize(),this}intersectsObject(e){let t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),rz.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(rz)}intersectsSprite(e){return rz.center.set(0,0,0),rz.radius=.7071067811865476,rz.applyMatrix4(e.matrixWorld),this.intersectsSphere(rz)}intersectsSphere(e){let t=this.planes,i=e.center,n=-e.radius;for(let r=0;r<6;r++){let s=t[r].distanceToPoint(i);if(s<n)return!1}return!0}intersectsBox(e){let t=this.planes;for(let i=0;i<6;i++){let n=t[i];if(rO.x=n.normal.x>0?e.max.x:e.min.x,rO.y=n.normal.y>0?e.max.y:e.min.y,rO.z=n.normal.z>0?e.max.z:e.min.z,0>n.distanceToPoint(rO))return!1}return!0}containsPoint(e){let t=this.planes;for(let i=0;i<6;i++)if(0>t[i].distanceToPoint(e))return!1;return!0}clone(){return new this.constructor().copy(this)}}function rU(){let e=null,t=!1,i=null,n=null;function r(t,s){i(t,s),n=e.requestAnimationFrame(r)}return{start:function(){!0!==t&&null!==i&&(n=e.requestAnimationFrame(r),t=!0)},stop:function(){e.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(e){i=e},setContext:function(t){e=t}}}function r2(e,t){let i=t.isWebGL2,n=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),n.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);let i=n.get(t);i&&(e.deleteBuffer(i.buffer),n.delete(t))},update:function(t,r){if(t.isGLBufferAttribute){let s=n.get(t);(!s||s.version<t.version)&&n.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version});return}t.isInterleavedBufferAttribute&&(t=t.data);let a=n.get(t);void 0===a?n.set(t,function(t,n){let r=t.array,s=t.usage,a=e.createBuffer();e.bindBuffer(n,a),e.bufferData(n,r,s),t.onUploadCallback();let o;if(r instanceof Float32Array)o=5126;else if(r instanceof Uint16Array){if(t.isFloat16BufferAttribute){if(i)o=5131;else throw Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.")}else o=5123}else if(r instanceof Int16Array)o=5122;else if(r instanceof Uint32Array)o=5125;else if(r instanceof Int32Array)o=5124;else if(r instanceof Int8Array)o=5120;else if(r instanceof Uint8Array)o=5121;else if(r instanceof Uint8ClampedArray)o=5121;else throw Error("THREE.WebGLAttributes: Unsupported buffer data format: "+r);return{buffer:a,type:o,bytesPerElement:r.BYTES_PER_ELEMENT,version:t.version}}(t,r)):a.version<t.version&&(!function(t,n,r){let s=n.array,a=n.updateRange;e.bindBuffer(r,t),-1===a.count?e.bufferSubData(r,0,s):(i?e.bufferSubData(r,a.offset*s.BYTES_PER_ELEMENT,s,a.offset,a.count):e.bufferSubData(r,a.offset*s.BYTES_PER_ELEMENT,s.subarray(a.offset,a.offset+a.count)),a.count=-1)}(a.buffer,t,r),a.version=t.version)}}}class r3 extends ra{constructor(e=1,t=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:n};let r=e/2,s=t/2,a=Math.floor(i),o=Math.floor(n),l=a+1,u=o+1,h=e/a,c=t/o,d=[],p=[],f=[],m=[];for(let g=0;g<u;g++){let $=g*c-s;for(let x=0;x<l;x++){let v=x*h-r;p.push(v,-$,0),f.push(0,0,1),m.push(x/a),m.push(1-g/o)}}for(let y=0;y<o;y++)for(let _=0;_<a;_++){let b=_+l*y,S=_+l*(y+1),w=_+1+l*(y+1),M=_+1+l*y;d.push(b,S,M),d.push(S,w,M)}this.setIndex(d),this.setAttribute("position",new nK(p,3)),this.setAttribute("normal",new nK(f,3)),this.setAttribute("uv",new nK(m,2))}static fromJSON(e){return new r3(e.width,e.height,e.widthSegments,e.heightSegments)}}let rG={alphamap_fragment:"#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n	if ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n	uniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n	#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( f0, f90, dotVH );\n	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\n	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n		float alpha = pow2( roughness );\n		vec3 halfDir = normalize( lightDir + viewDir );\n		float dotNL = saturate( dot( normal, lightDir ) );\n		float dotNV = saturate( dot( normal, viewDir ) );\n		float dotNH = saturate( dot( normal, halfDir ) );\n		float dotVH = saturate( dot( viewDir, halfDir ) );\n		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n		return F * ( V * D );\n	}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n	float alpha = pow2( roughness );\n	float invAlpha = 1.0 / alpha;\n	float cos2h = dotNH * dotNH;\n	float sin2h = max( 1.0 - cos2h, 0.0078125 );\n	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float D = D_Charlie( sheenRoughness, dotNH );\n	float V = V_Neubelt( dotNV, dotNL );\n	return sheenColor * ( D * V );\n}\n#endif",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n	const mat3 XYZ_TO_REC709 = mat3(\n		 3.2404542, -0.9692660,  0.0556434,\n		-1.5371385,  1.8760108, -0.2040259,\n		-0.4985314,  0.0415560,  1.0572252\n	);\n	vec3 Fresnel0ToIor( vec3 fresnel0 ) {\n		vec3 sqrtF0 = sqrt( fresnel0 );\n		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n	}\n	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n	}\n	float IorToFresnel0( float transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n	}\n	vec3 evalSensitivity( float OPD, vec3 shift ) {\n		float phase = 2.0 * PI * OPD * 1.0e-9;\n		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n		xyz /= 1.0685e-7;\n		vec3 rgb = XYZ_TO_REC709 * xyz;\n		return rgb;\n	}\n	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n		vec3 I;\n		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n		float cosTheta2Sq = 1.0 - sinTheta2Sq;\n		if ( cosTheta2Sq < 0.0 ) {\n			 return vec3( 1.0 );\n		}\n		float cosTheta2 = sqrt( cosTheta2Sq );\n		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n		float R12 = F_Schlick( R0, 1.0, cosTheta1 );\n		float R21 = R12;\n		float T121 = 1.0 - R12;\n		float phi12 = 0.0;\n		if ( iridescenceIOR < outsideIOR ) phi12 = PI;\n		float phi21 = PI - phi12;\n		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n		vec3 phi23 = vec3( 0.0 );\n		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n		vec3 phi = vec3( phi21 ) + phi23;\n		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n		vec3 r123 = sqrt( R123 );\n		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n		vec3 C0 = R12 + Rs;\n		I = C0;\n		vec3 Cm = Rs - T121;\n		for ( int m = 1; m <= 2; ++ m ) {\n			Cm *= r123;\n			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n			I += Cm * Sm;\n		}\n		return max( I, vec3( 0.0 ) );\n	}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = dFdx( surf_pos.xyz );\n		vec3 vSigmaY = dFdy( surf_pos.xyz );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n		plane = clippingPlanes[ i ];\n		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n	}\n	#pragma unroll_loop_end\n	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n		bool clipped = true;\n		#pragma unroll_loop_start\n		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n		}\n		#pragma unroll_loop_end\n		if ( clipped ) discard;\n	#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	varying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n	return dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		uv.x += filterInt * 3.0 * cubeUV_minTileSize;\n		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n		uv.x *= CUBEUV_TEXEL_WIDTH;\n		uv.y *= CUBEUV_TEXEL_HEIGHT;\n		#ifdef texture2DGradEXT\n			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n		#else\n			return texture2D( envMap, uv ).rgb;\n		#endif\n	}\n	#define cubeUV_r0 1.0\n	#define cubeUV_v0 0.339\n	#define cubeUV_m0 - 2.0\n	#define cubeUV_r1 0.8\n	#define cubeUV_v1 0.276\n	#define cubeUV_m1 - 1.0\n	#define cubeUV_r4 0.4\n	#define cubeUV_v4 0.046\n	#define cubeUV_m4 2.0\n	#define cubeUV_r5 0.305\n	#define cubeUV_v5 0.016\n	#define cubeUV_m5 3.0\n	#define cubeUV_r6 0.21\n	#define cubeUV_v6 0.0038\n	#define cubeUV_m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= cubeUV_r1 ) {\n			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n		} else if ( roughness >= cubeUV_r4 ) {\n			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n		} else if ( roughness >= cubeUV_r5 ) {\n			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n		} else if ( roughness >= cubeUV_r6 ) {\n			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n	mat3 m = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n	transformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n	vec3 getIBLIrradiance( const in vec3 normal ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n			return PI * envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 reflectVec = reflect( - viewDir, normal );\n			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n			return envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n	vFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n	varying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float vFogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return vec3( texture2D( gradientMap, coord ).r );\n	#else\n		vec2 fw = fwidth( coord ) * 0.5;\n		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n	#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n	vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n	reflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n	vec3 diffuseColor;\n	float specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Lambert\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert\n#define Material_LightProbeLOD( material )	(0)",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	return irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n	#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n		if ( cutoffDistance > 0.0 ) {\n			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n		}\n		return distanceFalloff;\n	#else\n		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n		}\n		return 1.0;\n	#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n	return smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n		light.color = directionalLight.color;\n		light.direction = directionalLight.direction;\n		light.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		light.color = pointLight.color;\n		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n		light.visible = ( light.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float angleCos = dot( light.direction, spotLight.direction );\n		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n		if ( spotAttenuation > 0.0 ) {\n			float lightDistance = length( lVector );\n			light.color = spotLight.color * spotAttenuation;\n			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n			light.visible = ( light.color != vec3( 0.0 ) );\n		} else {\n			light.color = vec3( 0.0 );\n			light.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n		float dotNL = dot( normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		return irradiance;\n	}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )	(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )	(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n	material.ior = ior;\n	#ifdef SPECULAR\n		float specularIntensityFactor = specularIntensity;\n		vec3 specularColorFactor = specularColor;\n		#ifdef USE_SPECULARINTENSITYMAP\n			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n		#endif\n		#ifdef USE_SPECULARCOLORMAP\n			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n		#endif\n		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n	#else\n		float specularIntensityFactor = 1.0;\n		vec3 specularColorFactor = vec3( 1.0 );\n		material.specularF90 = 1.0;\n	#endif\n	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n	material.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	material.clearcoatF0 = vec3( 0.04 );\n	material.clearcoatF90 = 1.0;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n	material.iridescence = iridescence;\n	material.iridescenceIOR = iridescenceIOR;\n	#ifdef USE_IRIDESCENCEMAP\n		material.iridescence *= texture2D( iridescenceMap, vUv ).r;\n	#endif\n	#ifdef USE_IRIDESCENCE_THICKNESSMAP\n		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n	#else\n		material.iridescenceThickness = iridescenceThicknessMaximum;\n	#endif\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheenColor;\n	#ifdef USE_SHEENCOLORMAP\n		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n	#endif\n	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n	#ifdef USE_SHEENROUGHNESSMAP\n		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n	#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float roughness;\n	vec3 specularColor;\n	float specularF90;\n	#ifdef USE_CLEARCOAT\n		float clearcoat;\n		float clearcoatRoughness;\n		vec3 clearcoatF0;\n		float clearcoatF90;\n	#endif\n	#ifdef USE_IRIDESCENCE\n		float iridescence;\n		float iridescenceIOR;\n		float iridescenceThickness;\n		vec3 iridescenceFresnel;\n		vec3 iridescenceF0;\n	#endif\n	#ifdef USE_SHEEN\n		vec3 sheenColor;\n		float sheenRoughness;\n	#endif\n	#ifdef IOR\n		float ior;\n	#endif\n	#ifdef USE_TRANSMISSION\n		float transmission;\n		float transmissionAlpha;\n		float thickness;\n		float attenuationDistance;\n		vec3 attenuationColor;\n	#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float r2 = roughness * roughness;\n	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n	return saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n	return fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	return specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	#ifdef USE_IRIDESCENCE\n		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n	#else\n		vec3 Fr = specularColor;\n	#endif\n	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n	float Ess = fab.x + fab.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometry.normal;\n		vec3 viewDir = geometry.viewDir;\n		vec3 position = geometry.position;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.roughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifdef USE_CLEARCOAT\n		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = dotNLcc * directLight.color;\n		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n	#endif\n	#ifdef USE_IRIDESCENCE\n		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n	#else\n		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n	#endif\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef USE_CLEARCOAT\n		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n	#endif\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	#ifdef USE_IRIDESCENCE\n		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n	#else\n		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n	#endif\n	vec3 totalScattering = singleScattering + multiScattering;\n	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n	reflectedLight.indirectSpecular += radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n	geometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n	float dotNVi = saturate( dot( normal, geometry.viewDir ) );\n	if ( material.iridescenceThickness == 0.0 ) {\n		material.iridescence = 0.0;\n	} else {\n		material.iridescence = saturate( material.iridescence );\n	}\n	if ( material.iridescence > 0.0 ) {\n		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n	}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointLightInfo( pointLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	vec4 spotColor;\n	vec3 spotLightCoord;\n	bool inSpotLightMap;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotLightInfo( spotLight, geometry, directLight );\n		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n		#else\n		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#endif\n		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n		#endif\n		#undef SPOT_LIGHT_MAP_INDEX\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalLightInfo( directionalLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getIBLIrradiance( geometry.normal );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n	#ifdef USE_CLEARCOAT\n		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n	#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n		varying float vIsPerspective;\n	#else\n		uniform float logDepthBufFC;\n	#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n	#else\n		if ( isPerspectiveMatrix( projectionMatrix ) ) {\n			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n			gl_Position.z *= gl_Position.w;\n		}\n	#endif\n#endif",map_fragment:"#ifdef USE_MAP\n	vec4 sampledDiffuseColor = texture2D( map, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n	#endif\n	diffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n	diffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	uniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n	vColor *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		#if defined( USE_COLOR_ALPHA )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n		#elif defined( USE_COLOR )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n		#endif\n	}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n	#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n	uniform float morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n		uniform sampler2DArray morphTargetsTexture;\n		uniform ivec2 morphTargetsTextureSize;\n		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n			int y = texelIndex / morphTargetsTextureSize.x;\n			int x = texelIndex - y * morphTargetsTextureSize.x;\n			ivec3 morphUV = ivec3( x, y, morphTargetIndex );\n			return texelFetch( morphTargetsTexture, morphUV, 0 );\n		}\n	#else\n		#ifndef USE_MORPHNORMALS\n			uniform float morphTargetInfluences[ 8 ];\n		#else\n			uniform float morphTargetInfluences[ 4 ];\n		#endif\n	#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		transformed += morphTarget0 * morphTargetInfluences[ 0 ];\n		transformed += morphTarget1 * morphTargetInfluences[ 1 ];\n		transformed += morphTarget2 * morphTargetInfluences[ 2 ];\n		transformed += morphTarget3 * morphTargetInfluences[ 3 ];\n		#ifndef USE_MORPHNORMALS\n			transformed += morphTarget4 * morphTargetInfluences[ 4 ];\n			transformed += morphTarget5 * morphTargetInfluences[ 5 ];\n			transformed += morphTarget6 * morphTargetInfluences[ 6 ];\n			transformed += morphTarget7 * morphTargetInfluences[ 7 ];\n		#endif\n	#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	#ifdef USE_TANGENT\n		vec3 tangent = normalize( vTangent );\n		vec3 bitangent = normalize( vBitangent );\n		#ifdef DOUBLE_SIDED\n			tangent = tangent * faceDirection;\n			bitangent = bitangent * faceDirection;\n		#endif\n		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n			mat3 vTBN = mat3( tangent, bitangent, normal );\n		#endif\n	#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	#ifdef USE_TANGENT\n		normal = normalize( vTBN * mapN );\n	#else\n		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n	#endif\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n	}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	#ifdef USE_TANGENT\n		clearcoatNormal = normalize( vTBN * clearcoatMapN );\n	#else\n		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n	#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n	uniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n	return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;\n		vec3 bd3D = normalize( lightToPosition );\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",shadowmap_vertex:"#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		vec4 shadowWorldPosition;\n	#endif\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_COORDS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n		shadowWorldPosition = worldPosition;\n		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n		#endif\n		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	uniform highp sampler2D boneTexture;\n	uniform int boneTextureSize;\n	mat4 getBoneMatrix( const in float i ) {\n		float j = i * 4.0;\n		float x = mod( j, float( boneTextureSize ) );\n		float y = floor( j / float( boneTextureSize ) );\n		float dx = 1.0 / float( boneTextureSize );\n		float dy = 1.0 / float( boneTextureSize );\n		y = dy * ( y + 0.5 );\n		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n		mat4 bone = mat4( v1, v2, v3, v4 );\n		return bone;\n	}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n	material.transmission = transmission;\n	material.transmissionAlpha = 1.0;\n	material.thickness = thickness;\n	material.attenuationDistance = attenuationDistance;\n	material.attenuationColor = attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		material.transmission *= texture2D( transmissionMap, vUv ).r;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		material.thickness *= texture2D( thicknessMap, vUv ).g;\n	#endif\n	vec3 pos = vWorldPosition;\n	vec3 v = normalize( cameraPosition - pos );\n	vec3 n = inverseTransformDirection( normal, viewMatrix );\n	vec4 transmission = getIBLVolumeRefraction(\n		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n		material.attenuationColor, material.attenuationDistance );\n	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\n	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n	uniform float transmission;\n	uniform float thickness;\n	uniform float attenuationDistance;\n	uniform vec3 attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		uniform sampler2D transmissionMap;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		uniform sampler2D thicknessMap;\n	#endif\n	uniform vec2 transmissionSamplerSize;\n	uniform sampler2D transmissionSamplerMap;\n	uniform mat4 modelMatrix;\n	uniform mat4 projectionMatrix;\n	varying vec3 vWorldPosition;\n	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n		vec3 modelScale;\n		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n		return normalize( refractionVector ) * thickness * modelScale;\n	}\n	float applyIorToRoughness( const in float roughness, const in float ior ) {\n		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n	}\n	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n		#ifdef texture2DLodEXT\n			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n		#else\n			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n		#endif\n	}\n	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n		if ( attenuationDistance == 0.0 ) {\n			return radiance;\n		} else {\n			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;\n		}\n	}\n	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n		const in vec3 attenuationColor, const in float attenuationDistance ) {\n		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n		vec3 refractedRayExit = position + transmissionRay;\n		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n		vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n		refractionCoords += 1.0;\n		refractionCoords /= 2.0;\n		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n	}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n	varying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n	#ifdef UVS_VERTEX_ONLY\n		vec2 vUv;\n	#else\n		varying vec2 vUv;\n	#endif\n	uniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	varying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n	uniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n	gl_FragColor = texture2D( t2D, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n	#endif\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	vec3 vReflect = vWorldDirection;\n	#include <envmap_fragment>\n	gl_FragColor = envColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_lambert_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n	#else\n		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n	#ifdef OPAQUE\n		gl_FragColor.a = 1.0;\n	#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularColor;\n	#ifdef USE_SPECULARINTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n	#ifdef USE_SPECULARCOLORMAP\n		uniform sampler2D specularColorMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n	uniform float iridescence;\n	uniform float iridescenceIOR;\n	uniform float iridescenceThicknessMinimum;\n	uniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenColor;\n	uniform float sheenRoughness;\n	#ifdef USE_SHEENCOLORMAP\n		uniform sampler2D sheenColorMap;\n	#endif\n	#ifdef USE_SHEENROUGHNESSMAP\n		uniform sampler2D sheenRoughnessMap;\n	#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_SHEEN\n		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n	#endif\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n	#endif\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}"},rk={common:{diffuse:{value:new iE(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new id},uv2Transform:{value:new id},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ic(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new iE(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new iE(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new id}},sprite:{diffuse:{value:new iE(16777215)},opacity:{value:1},center:{value:new ic(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new id}}},rV={basic:{uniforms:rE([rk.common,rk.specularmap,rk.envmap,rk.aomap,rk.lightmap,rk.fog]),vertexShader:rG.meshbasic_vert,fragmentShader:rG.meshbasic_frag},lambert:{uniforms:rE([rk.common,rk.specularmap,rk.envmap,rk.aomap,rk.lightmap,rk.emissivemap,rk.bumpmap,rk.normalmap,rk.displacementmap,rk.fog,rk.lights,{emissive:{value:new iE(0)}}]),vertexShader:rG.meshlambert_vert,fragmentShader:rG.meshlambert_frag},phong:{uniforms:rE([rk.common,rk.specularmap,rk.envmap,rk.aomap,rk.lightmap,rk.emissivemap,rk.bumpmap,rk.normalmap,rk.displacementmap,rk.fog,rk.lights,{emissive:{value:new iE(0)},specular:{value:new iE(1118481)},shininess:{value:30}}]),vertexShader:rG.meshphong_vert,fragmentShader:rG.meshphong_frag},standard:{uniforms:rE([rk.common,rk.envmap,rk.aomap,rk.lightmap,rk.emissivemap,rk.bumpmap,rk.normalmap,rk.displacementmap,rk.roughnessmap,rk.metalnessmap,rk.fog,rk.lights,{emissive:{value:new iE(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:rG.meshphysical_vert,fragmentShader:rG.meshphysical_frag},toon:{uniforms:rE([rk.common,rk.aomap,rk.lightmap,rk.emissivemap,rk.bumpmap,rk.normalmap,rk.displacementmap,rk.gradientmap,rk.fog,rk.lights,{emissive:{value:new iE(0)}}]),vertexShader:rG.meshtoon_vert,fragmentShader:rG.meshtoon_frag},matcap:{uniforms:rE([rk.common,rk.bumpmap,rk.normalmap,rk.displacementmap,rk.fog,{matcap:{value:null}}]),vertexShader:rG.meshmatcap_vert,fragmentShader:rG.meshmatcap_frag},points:{uniforms:rE([rk.points,rk.fog]),vertexShader:rG.points_vert,fragmentShader:rG.points_frag},dashed:{uniforms:rE([rk.common,rk.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:rG.linedashed_vert,fragmentShader:rG.linedashed_frag},depth:{uniforms:rE([rk.common,rk.displacementmap]),vertexShader:rG.depth_vert,fragmentShader:rG.depth_frag},normal:{uniforms:rE([rk.common,rk.bumpmap,rk.normalmap,rk.displacementmap,{opacity:{value:1}}]),vertexShader:rG.meshnormal_vert,fragmentShader:rG.meshnormal_frag},sprite:{uniforms:rE([rk.sprite,rk.fog]),vertexShader:rG.sprite_vert,fragmentShader:rG.sprite_frag},background:{uniforms:{uvTransform:{value:new id},t2D:{value:null}},vertexShader:rG.background_vert,fragmentShader:rG.background_frag},cube:{uniforms:rE([rk.envmap,{opacity:{value:1}}]),vertexShader:rG.cube_vert,fragmentShader:rG.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:rG.equirect_vert,fragmentShader:rG.equirect_frag},distanceRGBA:{uniforms:rE([rk.common,rk.displacementmap,{referencePosition:{value:new iU},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:rG.distanceRGBA_vert,fragmentShader:rG.distanceRGBA_frag},shadow:{uniforms:rE([rk.lights,rk.fog,{color:{value:new iE(0)},opacity:{value:1}},]),vertexShader:rG.shadow_vert,fragmentShader:rG.shadow_frag}};function rH(e,t,i,n,r,s){let a=new iE(0),o=!0===r?0:1,l,u,h=null,c=0,d=null;function p(e,t){i.buffers.color.setClear(e.r,e.g,e.b,t,s)}return{getClearColor:function(){return a},setClearColor:function(e,t=1){a.set(e),p(a,o=t)},getClearAlpha:function(){return o},setClearAlpha:function(e){p(a,o=e)},render:function(i,r){let s=!1,g=!0===r.isScene?r.background:null;g&&g.isTexture&&(g=t.get(g));let $=e.xr,x=$.getSession&&$.getSession();x&&"additive"===x.environmentBlendMode&&(g=null),null===g?p(a,o):g&&g.isColor&&(p(g,1),s=!0),(e.autoClear||s)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),g&&(g.isCubeTexture||g.mapping===eo)?(void 0===u&&((u=new rS(new rM(1,1,1),new r1({name:"BackgroundCubeMaterial",uniforms:rT(rV.cube.uniforms),vertexShader:rV.cube.vertexShader,fragmentShader:rV.cube.fragmentShader,side:m,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(e,t,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(u)),u.material.uniforms.envMap.value=g,u.material.uniforms.flipEnvMap.value=g.isCubeTexture&&!1===g.isRenderTargetTexture?-1:1,(h!==g||c!==g.version||d!==e.toneMapping)&&(u.material.needsUpdate=!0,h=g,c=g.version,d=e.toneMapping),u.layers.enableAll(),i.unshift(u,u.geometry,u.material,0,0,null)):g&&g.isTexture&&(void 0===l&&((l=new rS(new r3(2,2),new r1({name:"BackgroundMaterial",uniforms:rT(rV.background.uniforms),vertexShader:rV.background.vertexShader,fragmentShader:rV.background.fragmentShader,side:f,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(l)),l.material.uniforms.t2D.value=g,!0===g.matrixAutoUpdate&&g.updateMatrix(),l.material.uniforms.uvTransform.value.copy(g.matrix),(h!==g||c!==g.version||d!==e.toneMapping)&&(l.material.needsUpdate=!0,h=g,c=g.version,d=e.toneMapping),l.layers.enableAll(),i.unshift(l,l.geometry,l.material,0,0,null))}}}function r4(e,t,i,n){let r=e.getParameter(34921),s=n.isWebGL2?null:t.get("OES_vertex_array_object"),a=n.isWebGL2||null!==s,o={},l=p(null),u=l,h=!1;function c(t){return n.isWebGL2?e.bindVertexArray(t):s.bindVertexArrayOES(t)}function d(t){return n.isWebGL2?e.deleteVertexArray(t):s.deleteVertexArrayOES(t)}function p(e){let t=[],i=[],n=[];for(let s=0;s<r;s++)t[s]=0,i[s]=0,n[s]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:i,attributeDivisors:n,object:e,attributes:{},index:null}}function f(){let e=u.newAttributes;for(let t=0,i=e.length;t<i;t++)e[t]=0}function m(e){g(e,0)}function g(i,r){let s=u.newAttributes,a=u.enabledAttributes,o=u.attributeDivisors;if(s[i]=1,0===a[i]&&(e.enableVertexAttribArray(i),a[i]=1),o[i]!==r){let l=n.isWebGL2?e:t.get("ANGLE_instanced_arrays");l[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](i,r),o[i]=r}}function $(){let t=u.newAttributes,i=u.enabledAttributes;for(let n=0,r=i.length;n<r;n++)i[n]!==t[n]&&(e.disableVertexAttribArray(n),i[n]=0)}function x(t,i,r,s,a,o){!0===n.isWebGL2&&(5124===r||5125===r)?e.vertexAttribIPointer(t,i,r,a,o):e.vertexAttribPointer(t,i,r,s,a,o)}function v(){y(),h=!0,u!==l&&c((u=l).object)}function y(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(r,l,d,v,y){let _=!1;if(a){let b=function(t,i,r){let a=!0===r.wireframe,l=o[t.id];void 0===l&&(l={},o[t.id]=l);let u=l[i.id];void 0===u&&(u={},l[i.id]=u);let h=u[a];return void 0===h&&(h=p(n.isWebGL2?e.createVertexArray():s.createVertexArrayOES()),u[a]=h),h}(v,d,l);u!==b&&c((u=b).object),(_=function(e,t,i,n){let r=u.attributes,s=t.attributes,a=0,o=i.getAttributes();for(let l in o){let h=o[l];if(h.location>=0){let c=r[l],d=s[l];if(void 0===d&&("instanceMatrix"===l&&e.instanceMatrix&&(d=e.instanceMatrix),"instanceColor"===l&&e.instanceColor&&(d=e.instanceColor)),void 0===c||c.attribute!==d||d&&c.data!==d.data)return!0;a++}}return u.attributesNum!==a||u.index!==n}(r,v,d,y))&&function(e,t,i,n){let r={},s=t.attributes,a=0,o=i.getAttributes();for(let l in o){let h=o[l];if(h.location>=0){let c=s[l];void 0===c&&("instanceMatrix"===l&&e.instanceMatrix&&(c=e.instanceMatrix),"instanceColor"===l&&e.instanceColor&&(c=e.instanceColor));let d={};d.attribute=c,c&&c.data&&(d.data=c.data),r[l]=d,a++}}u.attributes=r,u.attributesNum=a,u.index=n}(r,v,d,y)}else{let S=!0===l.wireframe;(u.geometry!==v.id||u.program!==d.id||u.wireframe!==S)&&(u.geometry=v.id,u.program=d.id,u.wireframe=S,_=!0)}null!==y&&i.update(y,34963),(_||h)&&(h=!1,function(r,s,a,o){if(!1===n.isWebGL2&&(r.isInstancedMesh||o.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;f();let l=o.attributes,u=a.getAttributes(),h=s.defaultAttributeValues;for(let c in u){let d=u[c];if(d.location>=0){let p=l[c];if(void 0===p&&("instanceMatrix"===c&&r.instanceMatrix&&(p=r.instanceMatrix),"instanceColor"===c&&r.instanceColor&&(p=r.instanceColor)),void 0!==p){let v=p.normalized,y=p.itemSize,_=i.get(p);if(void 0===_)continue;let b=_.buffer,S=_.type,w=_.bytesPerElement;if(p.isInterleavedBufferAttribute){let M=p.data,T=M.stride,E=p.offset;if(M.isInstancedInterleavedBuffer){for(let A=0;A<d.locationSize;A++)g(d.location+A,M.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=M.meshPerAttribute*M.count)}else for(let C=0;C<d.locationSize;C++)m(d.location+C);e.bindBuffer(34962,b);for(let L=0;L<d.locationSize;L++)x(d.location+L,y/d.locationSize,S,v,T*w,(E+y/d.locationSize*L)*w)}else{if(p.isInstancedBufferAttribute){for(let R=0;R<d.locationSize;R++)g(d.location+R,p.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=p.meshPerAttribute*p.count)}else for(let P=0;P<d.locationSize;P++)m(d.location+P);e.bindBuffer(34962,b);for(let D=0;D<d.locationSize;D++)x(d.location+D,y/d.locationSize,S,v,y*w,y/d.locationSize*D*w)}}else if(void 0!==h){let I=h[c];if(void 0!==I)switch(I.length){case 2:e.vertexAttrib2fv(d.location,I);break;case 3:e.vertexAttrib3fv(d.location,I);break;case 4:e.vertexAttrib4fv(d.location,I);break;default:e.vertexAttrib1fv(d.location,I)}}}}$()}(r,l,d,v),null!==y&&e.bindBuffer(34963,i.get(y).buffer))},reset:v,resetDefaultState:y,dispose:function(){for(let e in v(),o){let t=o[e];for(let i in t){let n=t[i];for(let r in n)d(n[r].object),delete n[r];delete t[i]}delete o[e]}},releaseStatesOfGeometry:function(e){if(void 0===o[e.id])return;let t=o[e.id];for(let i in t){let n=t[i];for(let r in n)d(n[r].object),delete n[r];delete t[i]}delete o[e.id]},releaseStatesOfProgram:function(e){for(let t in o){let i=o[t];if(void 0===i[e.id])continue;let n=i[e.id];for(let r in n)d(n[r].object),delete n[r];delete i[e.id]}},initAttributes:f,enableAttribute:m,disableUnusedAttributes:$}}function rW(e,t,i,n){let r=n.isWebGL2,s;function a(e){s=e}this.setMode=a,this.render=function(t,n){e.drawArrays(s,t,n),i.update(n,s,1)},this.renderInstances=function(n,a,o){if(0===o)return;let l,u;if(r)l=e,u="drawArraysInstanced";else if(l=t.get("ANGLE_instanced_arrays"),u="drawArraysInstancedANGLE",null===l){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}l[u](s,n,a,o),i.update(a,s,o)}}function r6(e,t,i){let n;function r(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}let s="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext,a=void 0!==i.precision?i.precision:"highp",o=r(a);o!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",o,"instead."),a=o);let l=s||t.has("WEBGL_draw_buffers"),u=!0===i.logarithmicDepthBuffer,h=e.getParameter(34930),c=e.getParameter(35660),d=e.getParameter(3379),p=e.getParameter(34076),f=e.getParameter(34921),m=e.getParameter(36347),g=e.getParameter(36348),$=e.getParameter(36349),x=c>0,v=s||t.has("OES_texture_float"),y=s?e.getParameter(36183):0;return{isWebGL2:s,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==n)return n;if(!0===t.has("EXT_texture_filter_anisotropic")){let i=t.get("EXT_texture_filter_anisotropic");n=e.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n},getMaxPrecision:r,precision:a,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:c,maxTextureSize:d,maxCubemapSize:p,maxAttributes:f,maxVertexUniforms:m,maxVaryings:g,maxFragmentUniforms:$,vertexTextures:x,floatFragmentTextures:v,floatVertexTextures:x&&v,maxSamples:y}}function r7(e){let t=this,i=null,n=0,r=!1,s=!1,a=new rF,o=new id,l={value:null,needsUpdate:!1};function u(){l.value!==i&&(l.value=i,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function h(e,i,n,r){let s=null!==e?e.length:0,u=null;if(0!==s){if(u=l.value,!0!==r||null===u){let h=n+4*s,c=i.matrixWorldInverse;o.getNormalMatrix(c),(null===u||u.length<h)&&(u=new Float32Array(h));for(let d=0,p=n;d!==s;++d,p+=4)a.copy(e[d]).applyMatrix4(c,o),a.normal.toArray(u,p),u[p+3]=a.constant}l.value=u,l.needsUpdate=!0}return t.numPlanes=s,t.numIntersection=0,u}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,s){let a=0!==e.length||t||0!==n||r;return r=t,i=h(e,s,0),n=e.length,a},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1,u()},this.setState=function(t,a,o){let c=t.clippingPlanes,d=t.clipIntersection,p=t.clipShadows,f=e.get(t);if(r&&null!==c&&0!==c.length&&(!s||p)){let m=s?0:n,g=4*m,$=f.clippingState||null;l.value=$,$=h(c,a,g,o);for(let x=0;x!==g;++x)$[x]=i[x];f.clippingState=$,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=m}else s?h(null):u()}}function r5(e){let t=new WeakMap;function i(e,t){return t===es?e.mapping=en:t===ea&&(e.mapping=er),e}function n(e){let i=e.target;i.removeEventListener("dispose",n);let r=t.get(i);void 0!==r&&(t.delete(i),r.dispose())}return{get:function(r){if(r&&r.isTexture&&!1===r.isRenderTargetTexture){let s=r.mapping;if(s===es||s===ea){if(t.has(r)){let a=t.get(r).texture;return i(a,r.mapping)}{let o=r.image;if(!o||!(o.height>0))return null;{let l=new rP(o.height/2);return l.fromEquirectangularTexture(e,r),t.set(r,l),r.addEventListener("dispose",n),i(l.texture,r.mapping)}}}}return r},dispose:function(){t=new WeakMap}}}rV.physical={uniforms:rE([rV.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ic(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new iE(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new ic},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new iE(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new iE(1,1,1)},specularColorMap:{value:null}}]),vertexShader:rG.meshphysical_vert,fragmentShader:rG.meshphysical_frag};class rj extends r0{constructor(e=-1,t=1,i=1,n=-1,r=.1,s=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=n,this.near=r,this.far=s,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,i,n,r,s){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2,r=i-e,s=i+e,a=n+t,o=n-t;if(null!==this.view&&this.view.enabled){let l=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,s=r+l*this.view.width,a-=u*this.view.offsetY,o=a-u*this.view.height}this.projectionMatrix.makeOrthographic(r,s,a,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}let rq=[.125,.215,.35,.446,.526,.582],rX=new rj,rY=new iE,rZ=null,rJ=(1+Math.sqrt(5))/2,rK=1/rJ,r9=[new iU(1,1,1),new iU(-1,1,1),new iU(1,1,-1),new iU(-1,1,-1),new iU(0,rJ,rK),new iU(0,rJ,-rK),new iU(rK,0,rJ),new iU(-rK,0,rJ),new iU(rJ,rK,0),new iU(-rJ,rK,0)];class rQ{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,n=100){rZ=this._renderer.getRenderTarget(),this._setSize(256);let r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,i,n,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=sn(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=si(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(rZ),e.scissorTest=!1,st(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===en||e.mapping===er?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),rZ=this._renderer.getRenderTarget();let i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){let e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:eg,minFilter:eg,generateMipmaps:!1,type:eE,format:eR,encoding:t8,depthBuffer:!1},n=se(e,t,i);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=se(e,t,i);let{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(e){let t=[],i=[],n=[],r=e,s=e-4+1+rq.length;for(let a=0;a<s;a++){let o=Math.pow(2,r);i.push(o);let l=1/o;a>e-4?l=rq[a-e+4-1]:0===a&&(l=0),n.push(l);let u=1/(o-2),h=-u,c=1+u,d=[h,h,c,h,c,c,h,h,c,c,h,c],p=new Float32Array(108),f=new Float32Array(72),m=new Float32Array(36);for(let g=0;g<6;g++){let $=g%3*2/3-1,x=g>2?0:-1,v=[$,x,0,$+2/3,x,0,$+2/3,x+1,0,$,x,0,$+2/3,x+1,0,$,x+1,0];p.set(v,18*g),f.set(d,12*g);let y=[g,g,g,g,g,g];m.set(y,6*g)}let _=new ra;_.setAttribute("position",new n6(p,3)),_.setAttribute("uv",new n6(f,2)),_.setAttribute("faceIndex",new n6(m,1)),t.push(_),r>4&&r--}return{lodPlanes:t,sizeLods:i,sigmas:n}}(r)),this._blurMaterial=function(e,t,i){let n=new Float32Array(20),r=new iU(0,1,0),s=new r1({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/i,CUBEUV_MAX_MIP:`${e}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:sr(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:$,depthTest:!1,depthWrite:!1});return s}(r,e,t)}return n}_compileMaterial(e){let t=new rS(this._lodPlanes[0],e);this._renderer.compile(t,rX)}_sceneToCubeUV(e,t,i,n){let r=new rC(90,1,t,i),s=[1,-1,1,1,1,1],a=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,u=o.toneMapping;o.getClearColor(rY),o.toneMapping=Z,o.autoClear=!1;let h=new nH({name:"PMREM.Background",side:m,depthWrite:!1,depthTest:!1}),c=new rS(new rM,h),d=!1,p=e.background;p?p.isColor&&(h.color.copy(p),e.background=null,d=!0):(h.color.copy(rY),d=!0);for(let f=0;f<6;f++){let g=f%3;0===g?(r.up.set(0,s[f],0),r.lookAt(a[f],0,0)):1===g?(r.up.set(0,0,s[f]),r.lookAt(0,a[f],0)):(r.up.set(0,s[f],0),r.lookAt(0,0,a[f]));let $=this._cubeSize;st(n,g*$,f>2?$:0,$,$),o.setRenderTarget(n),d&&o.render(c,r),o.render(e,r)}c.geometry.dispose(),c.material.dispose(),o.toneMapping=u,o.autoClear=l,e.background=p}_textureToCubeUV(e,t){let i=this._renderer,n=e.mapping===en||e.mapping===er;n?(null===this._cubemapMaterial&&(this._cubemapMaterial=sn()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=si());let r=n?this._cubemapMaterial:this._equirectMaterial,s=new rS(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=e;let o=this._cubeSize;st(t,0,0,3*o,2*o),i.setRenderTarget(t),i.render(s,rX)}_applyPMREM(e){let t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let n=1;n<this._lodPlanes.length;n++){let r=Math.sqrt(this._sigmas[n]*this._sigmas[n]-this._sigmas[n-1]*this._sigmas[n-1]),s=r9[(n-1)%r9.length];this._blur(e,n-1,n,r,s)}t.autoClear=i}_blur(e,t,i,n,r){let s=this._pingPongRenderTarget;this._halfBlur(e,s,t,i,n,"latitudinal",r),this._halfBlur(s,e,i,i,n,"longitudinal",r)}_halfBlur(e,t,i,n,r,s,a){let o=this._renderer,l=this._blurMaterial;"latitudinal"!==s&&"longitudinal"!==s&&console.error("blur direction must be either latitudinal or longitudinal!");let u=new rS(this._lodPlanes[n],l),h=l.uniforms,c=this._sizeLods[i]-1,d=isFinite(r)?Math.PI/(2*c):2*Math.PI/39,p=r/d,f=isFinite(r)?1+Math.floor(3*p):20;f>20&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);let m=[],g=0;for(let $=0;$<20;++$){let x=$/p,v=Math.exp(-x*x/2);m.push(v),0===$?g+=v:$<f&&(g+=2*v)}for(let y=0;y<m.length;y++)m[y]=m[y]/g;h.envMap.value=e.texture,h.samples.value=f,h.weights.value=m,h.latitudinal.value="latitudinal"===s,a&&(h.poleAxis.value=a);let{_lodMax:_}=this;h.dTheta.value=d,h.mipInt.value=_-i;let b=this._sizeLods[n],S=4*(this._cubeSize-b);st(t,3*b*(n>_-4?n-_+4:0),S,3*b,2*b),o.setRenderTarget(t),o.render(u,rX)}}function se(e,t,i){let n=new iD(e,t,i);return n.texture.mapping=eo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function st(e,t,i,n,r){e.viewport.set(t,i,n,r),e.scissor.set(t,i,n,r)}function si(){return new r1({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:sr(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:$,depthTest:!1,depthWrite:!1})}function sn(){return new r1({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:sr(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:$,depthTest:!1,depthWrite:!1})}function sr(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function ss(e){let t=new WeakMap,i=null;function n(e){let i=e.target;i.removeEventListener("dispose",n);let r=t.get(i);void 0!==r&&(t.delete(i),r.dispose())}return{get:function(r){if(r&&r.isTexture){let s=r.mapping,a=s===es||s===ea,o=s===en||s===er;if(a||o){if(r.isRenderTargetTexture&&!0===r.needsPMREMUpdate){r.needsPMREMUpdate=!1;let l=t.get(r);return null===i&&(i=new rQ(e)),l=a?i.fromEquirectangular(r,l):i.fromCubemap(r,l),t.set(r,l),l.texture}if(t.has(r))return t.get(r).texture;{let u=r.image;if(!(a&&u&&u.height>0||o&&u&&function(e){let t=0;for(let i=0;i<6;i++)void 0!==e[i]&&t++;return 6===t}(u)))return null;{null===i&&(i=new rQ(e));let h=a?i.fromEquirectangular(r):i.fromCubemap(r);return t.set(r,h),r.addEventListener("dispose",n),h.texture}}}}return r},dispose:function(){t=new WeakMap,null!==i&&(i.dispose(),i=null)}}}function sa(e){let t={};function i(i){if(void 0!==t[i])return t[i];let n;switch(i){case"WEBGL_depth_texture":n=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=e.getExtension(i)}return t[i]=n,n}return{has:function(e){return null!==i(e)},init:function(e){e.isWebGL2?i("EXT_color_buffer_float"):(i("WEBGL_depth_texture"),i("OES_texture_float"),i("OES_texture_half_float"),i("OES_texture_half_float_linear"),i("OES_standard_derivatives"),i("OES_element_index_uint"),i("OES_vertex_array_object"),i("ANGLE_instanced_arrays")),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float"),i("WEBGL_multisampled_render_to_texture")},get:function(e){let t=i(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function so(e,t,i,n){let r={},s=new WeakMap;function a(e){let o=e.target;for(let l in null!==o.index&&t.remove(o.index),o.attributes)t.remove(o.attributes[l]);o.removeEventListener("dispose",a),delete r[o.id];let u=s.get(o);u&&(t.remove(u),s.delete(o)),n.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,i.memory.geometries--}function o(e){let i=[],n=e.index,r=e.attributes.position,a=0;if(null!==n){let o=n.array;a=n.version;for(let l=0,u=o.length;l<u;l+=3){let h=o[l+0],c=o[l+1],d=o[l+2];i.push(h,c,c,d,d,h)}}else{let p=r.array;a=r.version;for(let f=0,m=p.length/3-1;f<m;f+=3){let g=f+0,$=f+1,x=f+2;i.push(g,$,$,x,x,g)}}let v=new(ip(i)?nZ:nX)(i,1);v.version=a;let y=s.get(e);y&&t.remove(y),s.set(e,v)}return{get:function(e,t){return!0===r[t.id]||(t.addEventListener("dispose",a),r[t.id]=!0,i.memory.geometries++),t},update:function(e){let i=e.attributes;for(let n in i)t.update(i[n],34962);let r=e.morphAttributes;for(let s in r){let a=r[s];for(let o=0,l=a.length;o<l;o++)t.update(a[o],34962)}},getWireframeAttribute:function(e){let t=s.get(e);if(t){let i=e.index;null!==i&&t.version<i.version&&o(e)}else o(e);return s.get(e)}}}function sl(e,t,i,n){let r=n.isWebGL2,s;function a(e){s=e}let o,l;this.setMode=a,this.setIndex=function(e){o=e.type,l=e.bytesPerElement},this.render=function(t,n){e.drawElements(s,n,o,t*l),i.update(n,s,1)},this.renderInstances=function(n,a,u){if(0===u)return;let h,c;if(r)h=e,c="drawElementsInstanced";else if(h=t.get("ANGLE_instanced_arrays"),c="drawElementsInstancedANGLE",null===h){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}h[c](s,a,o,n*l,u),i.update(a,s,u)}}function su(e){let t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,i,n){switch(t.calls++,i){case 4:t.triangles+=n*(e/3);break;case 1:t.lines+=n*(e/2);break;case 3:t.lines+=n*(e-1);break;case 2:t.lines+=n*e;break;case 0:t.points+=n*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function sh(e,t){return e[0]-t[0]}function sc(e,t){return Math.abs(t[1])-Math.abs(e[1])}function sd(e,t,i){let n={},r=new Float32Array(8),s=new WeakMap,a=new iP,o=[];for(let l=0;l<8;l++)o[l]=[l,0];return{update:function(l,u,h,c){let d=l.morphTargetInfluences;if(!0===t.isWebGL2){let p=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,f=void 0!==p?p.length:0,m=s.get(u);if(void 0===m||m.count!==f){void 0!==m&&m.texture.dispose();let g=void 0!==u.morphAttributes.position,$=void 0!==u.morphAttributes.normal,x=void 0!==u.morphAttributes.color,v=u.morphAttributes.position||[],y=u.morphAttributes.normal||[],_=u.morphAttributes.color||[],b=0;!0===g&&(b=1),!0===$&&(b=2),!0===x&&(b=3);let S=u.attributes.position.count*b,w=1;S>t.maxTextureSize&&(w=Math.ceil(S/t.maxTextureSize),S=t.maxTextureSize);let M=new Float32Array(S*w*4*f),T=new iI(M,S,w,f);T.type=eT,T.needsUpdate=!0;let E=4*b;for(let A=0;A<f;A++){let C=v[A],L=y[A],R=_[A],P=S*w*4*A;for(let D=0;D<C.count;D++){let I=D*E;!0===g&&(a.fromBufferAttribute(C,D),M[P+I+0]=a.x,M[P+I+1]=a.y,M[P+I+2]=a.z,M[P+I+3]=0),!0===$&&(a.fromBufferAttribute(L,D),M[P+I+4]=a.x,M[P+I+5]=a.y,M[P+I+6]=a.z,M[P+I+7]=0),!0===x&&(a.fromBufferAttribute(R,D),M[P+I+8]=a.x,M[P+I+9]=a.y,M[P+I+10]=a.z,M[P+I+11]=4===R.itemSize?a.w:1)}}function N(){T.dispose(),s.delete(u),u.removeEventListener("dispose",N)}m={count:f,texture:T,size:new ic(S,w)},s.set(u,m),u.addEventListener("dispose",N)}let F=0;for(let z=0;z<d.length;z++)F+=d[z];let O=u.morphTargetsRelative?1:1-F;c.getUniforms().setValue(e,"morphTargetBaseInfluence",O),c.getUniforms().setValue(e,"morphTargetInfluences",d),c.getUniforms().setValue(e,"morphTargetsTexture",m.texture,i),c.getUniforms().setValue(e,"morphTargetsTextureSize",m.size)}else{let B=void 0===d?0:d.length,U=n[u.id];if(void 0===U||U.length!==B){U=[];for(let G=0;G<B;G++)U[G]=[G,0];n[u.id]=U}for(let k=0;k<B;k++){let V=U[k];V[0]=k,V[1]=d[k]}U.sort(sc);for(let H=0;H<8;H++)H<B&&U[H][1]?(o[H][0]=U[H][0],o[H][1]=U[H][1]):(o[H][0]=Number.MAX_SAFE_INTEGER,o[H][1]=0);o.sort(sh);let W=u.morphAttributes.position,j=u.morphAttributes.normal,q=0;for(let X=0;X<8;X++){let Y=o[X],Z=Y[0],J=Y[1];Z!==Number.MAX_SAFE_INTEGER&&J?(W&&u.getAttribute("morphTarget"+X)!==W[Z]&&u.setAttribute("morphTarget"+X,W[Z]),j&&u.getAttribute("morphNormal"+X)!==j[Z]&&u.setAttribute("morphNormal"+X,j[Z]),r[X]=J,q+=J):(W&&!0===u.hasAttribute("morphTarget"+X)&&u.deleteAttribute("morphTarget"+X),j&&!0===u.hasAttribute("morphNormal"+X)&&u.deleteAttribute("morphNormal"+X),r[X]=0)}let K=u.morphTargetsRelative?1:1-q;c.getUniforms().setValue(e,"morphTargetBaseInfluence",K),c.getUniforms().setValue(e,"morphTargetInfluences",r)}}}}function sp(e,t,i,n){let r=new WeakMap;function s(e){let t=e.target;t.removeEventListener("dispose",s),i.remove(t.instanceMatrix),null!==t.instanceColor&&i.remove(t.instanceColor)}return{update:function(e){let a=n.render.frame,o=e.geometry,l=t.get(e,o);return r.get(l)!==a&&(t.update(l),r.set(l,a)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",s)&&e.addEventListener("dispose",s),i.update(e.instanceMatrix,34962),null!==e.instanceColor&&i.update(e.instanceColor,34962)),l},dispose:function(){r=new WeakMap}}}let sf=new iR,sm=new iI,sg=new iF,s$=new rR,sx=[],sv=[],s8=new Float32Array(16),sy=new Float32Array(9),s_=new Float32Array(4);function sb(e,t,i){let n=e[0];if(n<=0||n>0)return e;let r=t*i,s=sx[r];if(void 0===s&&(s=new Float32Array(r),sx[r]=s),0!==t){n.toArray(s,0);for(let a=1,o=0;a!==t;++a)o+=i,e[a].toArray(s,o)}return s}function sS(e,t){if(e.length!==t.length)return!1;for(let i=0,n=e.length;i<n;i++)if(e[i]!==t[i])return!1;return!0}function sw(e,t){for(let i=0,n=t.length;i<n;i++)e[i]=t[i]}function sM(e,t){let i=sv[t];void 0===i&&(i=new Int32Array(t),sv[t]=i);for(let n=0;n!==t;++n)i[n]=e.allocateTextureUnit();return i}function sT(e,t){let i=this.cache;i[0]!==t&&(e.uniform1f(this.addr,t),i[0]=t)}function sE(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),i[0]=t.x,i[1]=t.y);else{if(sS(i,t))return;e.uniform2fv(this.addr,t),sw(i,t)}}function sA(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),i[0]=t.x,i[1]=t.y,i[2]=t.z);else if(void 0!==t.r)(i[0]!==t.r||i[1]!==t.g||i[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),i[0]=t.r,i[1]=t.g,i[2]=t.b);else{if(sS(i,t))return;e.uniform3fv(this.addr,t),sw(i,t)}}function s1(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z||i[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=t.w);else{if(sS(i,t))return;e.uniform4fv(this.addr,t),sw(i,t)}}function s0(e,t){let i=this.cache,n=t.elements;if(void 0===n){if(sS(i,t))return;e.uniformMatrix2fv(this.addr,!1,t),sw(i,t)}else{if(sS(i,n))return;s_.set(n),e.uniformMatrix2fv(this.addr,!1,s_),sw(i,n)}}function sC(e,t){let i=this.cache,n=t.elements;if(void 0===n){if(sS(i,t))return;e.uniformMatrix3fv(this.addr,!1,t),sw(i,t)}else{if(sS(i,n))return;sy.set(n),e.uniformMatrix3fv(this.addr,!1,sy),sw(i,n)}}function sL(e,t){let i=this.cache,n=t.elements;if(void 0===n){if(sS(i,t))return;e.uniformMatrix4fv(this.addr,!1,t),sw(i,t)}else{if(sS(i,n))return;s8.set(n),e.uniformMatrix4fv(this.addr,!1,s8),sw(i,n)}}function sR(e,t){let i=this.cache;i[0]!==t&&(e.uniform1i(this.addr,t),i[0]=t)}function sP(e,t){let i=this.cache;sS(i,t)||(e.uniform2iv(this.addr,t),sw(i,t))}function sD(e,t){let i=this.cache;sS(i,t)||(e.uniform3iv(this.addr,t),sw(i,t))}function sI(e,t){let i=this.cache;sS(i,t)||(e.uniform4iv(this.addr,t),sw(i,t))}function sN(e,t){let i=this.cache;i[0]!==t&&(e.uniform1ui(this.addr,t),i[0]=t)}function sF(e,t){let i=this.cache;sS(i,t)||(e.uniform2uiv(this.addr,t),sw(i,t))}function sz(e,t){let i=this.cache;sS(i,t)||(e.uniform3uiv(this.addr,t),sw(i,t))}function sO(e,t){let i=this.cache;sS(i,t)||(e.uniform4uiv(this.addr,t),sw(i,t))}function sB(e,t,i){let n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTexture2D(t||sf,r)}function sU(e,t,i){let n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTexture3D(t||sg,r)}function s2(e,t,i){let n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTextureCube(t||s$,r)}function s3(e,t,i){let n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTexture2DArray(t||sm,r)}function sG(e,t){e.uniform1fv(this.addr,t)}function sk(e,t){let i=sb(t,this.size,2);e.uniform2fv(this.addr,i)}function sV(e,t){let i=sb(t,this.size,3);e.uniform3fv(this.addr,i)}function sH(e,t){let i=sb(t,this.size,4);e.uniform4fv(this.addr,i)}function s4(e,t){let i=sb(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,i)}function sW(e,t){let i=sb(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,i)}function s6(e,t){let i=sb(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,i)}function s7(e,t){e.uniform1iv(this.addr,t)}function s5(e,t){e.uniform2iv(this.addr,t)}function sj(e,t){e.uniform3iv(this.addr,t)}function sq(e,t){e.uniform4iv(this.addr,t)}function sX(e,t){e.uniform1uiv(this.addr,t)}function sY(e,t){e.uniform2uiv(this.addr,t)}function sZ(e,t){e.uniform3uiv(this.addr,t)}function sJ(e,t){e.uniform4uiv(this.addr,t)}function sK(e,t,i){let n=t.length,r=sM(i,n);e.uniform1iv(this.addr,r);for(let s=0;s!==n;++s)i.setTexture2D(t[s]||sf,r[s])}function s9(e,t,i){let n=t.length,r=sM(i,n);e.uniform1iv(this.addr,r);for(let s=0;s!==n;++s)i.setTexture3D(t[s]||sg,r[s])}function sQ(e,t,i){let n=t.length,r=sM(i,n);e.uniform1iv(this.addr,r);for(let s=0;s!==n;++s)i.setTextureCube(t[s]||s$,r[s])}function ae(e,t,i){let n=t.length,r=sM(i,n);e.uniform1iv(this.addr,r);for(let s=0;s!==n;++s)i.setTexture2DArray(t[s]||sm,r[s])}class at{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.setValue=function(e){switch(e){case 5126:return sT;case 35664:return sE;case 35665:return sA;case 35666:return s1;case 35674:return s0;case 35675:return sC;case 35676:return sL;case 5124:case 35670:return sR;case 35667:case 35671:return sP;case 35668:case 35672:return sD;case 35669:case 35673:return sI;case 5125:return sN;case 36294:return sF;case 36295:return sz;case 36296:return sO;case 35678:case 36198:case 36298:case 36306:case 35682:return sB;case 35679:case 36299:case 36307:return sU;case 35680:case 36300:case 36308:case 36293:return s2;case 36289:case 36303:case 36311:case 36292:return s3}}(t.type)}}class ai{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return sG;case 35664:return sk;case 35665:return sV;case 35666:return sH;case 35674:return s4;case 35675:return sW;case 35676:return s6;case 5124:case 35670:return s7;case 35667:case 35671:return s5;case 35668:case 35672:return sj;case 35669:case 35673:return sq;case 5125:return sX;case 36294:return sY;case 36295:return sZ;case 36296:return sJ;case 35678:case 36198:case 36298:case 36306:case 35682:return sK;case 35679:case 36299:case 36307:return s9;case 35680:case 36300:case 36308:case 36293:return sQ;case 36289:case 36303:case 36311:case 36292:return ae}}(t.type)}}class an{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){let n=this.seq;for(let r=0,s=n.length;r!==s;++r){let a=n[r];a.setValue(e,t[a.id],i)}}}let ar=/(\w+)(\])?(\[|\.)?/g;function as(e,t){e.seq.push(t),e.map[t.id]=t}function aa(e,t,i){let n=e.name,r=n.length;for(ar.lastIndex=0;;){let s=ar.exec(n),a=ar.lastIndex,o=s[1],l="]"===s[2],u=s[3];if(l&&(o|=0),void 0===u||"["===u&&a+2===r){as(i,void 0===u?new at(o,e,t):new ai(o,e,t));break}{let h=i.map,c=h[o];void 0===c&&as(i,c=new an(o)),i=c}}}class ao{constructor(e,t){this.seq=[],this.map={};let i=e.getProgramParameter(t,35718);for(let n=0;n<i;++n){let r=e.getActiveUniform(t,n),s=e.getUniformLocation(t,r.name);aa(r,s,this)}}setValue(e,t,i,n){let r=this.map[t];void 0!==r&&r.setValue(e,i,n)}setOptional(e,t,i){let n=t[i];void 0!==n&&this.setValue(e,i,n)}static upload(e,t,i,n){for(let r=0,s=t.length;r!==s;++r){let a=t[r],o=i[a.id];!1!==o.needsUpdate&&a.setValue(e,o.value,n)}}static seqWithValue(e,t){let i=[];for(let n=0,r=e.length;n!==r;++n){let s=e[n];s.id in t&&i.push(s)}return i}}function al(e,t,i){let n=e.createShader(t);return e.shaderSource(n,i),e.compileShader(n),n}let au=0;function ah(e,t,i){let n=e.getShaderParameter(t,35713),r=e.getShaderInfoLog(t).trim();if(n&&""===r)return"";let s=/ERROR: 0:(\d+)/.exec(r);if(!s)return r;{let a=parseInt(s[1]);return i.toUpperCase()+"\n\n"+r+"\n\n"+function(e,t){let i=e.split("\n"),n=[],r=Math.max(t-6,0),s=Math.min(t+6,i.length);for(let a=r;a<s;a++){let o=a+1;n.push(`${o===t?">":" "} ${o}: ${i[a]}`)}return n.join("\n")}(e.getShaderSource(t),a)}}function ac(e){return""!==e}function ad(e,t){let i=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,i).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function ap(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}let af=/^[ \t]*#include +<([\w\d./]+)>/gm;function am(e){return e.replace(af,ag)}function ag(e,t){let i=rG[t];if(void 0===i)throw Error("Can not resolve #include <"+t+">");return am(i)}let a$=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function ax(e){return e.replace(a$,av)}function av(e,t,i,n){let r="";for(let s=parseInt(t);s<parseInt(i);s++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function a8(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function ay(e,t,i,n){var r,s;let a=e.getContext(),o=i.defines,l=i.vertexShader,u=i.fragmentShader,h,f=(r=i,h="SHADOWMAP_TYPE_BASIC",r.shadowMapType===c?h="SHADOWMAP_TYPE_PCF":r.shadowMapType===d?h="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===p&&(h="SHADOWMAP_TYPE_VSM"),h),m=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case en:case er:t="ENVMAP_TYPE_CUBE";break;case eo:t="ENVMAP_TYPE_CUBE_UV"}return t}(i),g,$=(s=i,g="ENVMAP_MODE_REFLECTION",s.envMap&&s.envMapMode===er&&(g="ENVMAP_MODE_REFRACTION"),g),x=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case q:t="ENVMAP_BLENDING_MULTIPLY";break;case X:t="ENVMAP_BLENDING_MIX";break;case Y:t="ENVMAP_BLENDING_ADD"}return t}(i),v=function(e){let t=e.envMapCubeUVHeight;if(null===t)return null;let i=Math.log2(t)-2;return{texelWidth:1/(3*Math.max(Math.pow(2,i),112)),texelHeight:1/t,maxMip:i}}(i),y=i.isWebGL2?"":function(e){let t=[e.extensionDerivatives||e.envMapCubeUVHeight||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(ac).join("\n")}(i),_=function(e){let t=[];for(let i in e){let n=e[i];!1!==n&&t.push("#define "+i+" "+n)}return t.join("\n")}(o),b=a.createProgram(),S,w,M=i.glslVersion?"#version "+i.glslVersion+"\n":"";i.isRawShaderMaterial?((S=[_].filter(ac).join("\n")).length>0&&(S+="\n"),(w=[y,_].filter(ac).join("\n")).length>0&&(w+="\n")):(S=[a8(i),"#define SHADER_NAME "+i.shaderName,_,i.instancing?"#define USE_INSTANCING":"",i.instancingColor?"#define USE_INSTANCING_COLOR":"",i.supportsVertexTextures?"#define VERTEX_TEXTURES":"",i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+$:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",i.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",i.displacementMap&&i.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",i.specularColorMap?"#define USE_SPECULARCOLORMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.sheenColorMap?"#define USE_SHEENCOLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.flatShading?"#define FLAT_SHADED":"",i.skinning?"#define USE_SKINNING":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals&&!1===i.flatShading?"#define USE_MORPHNORMALS":"",i.morphColors&&i.isWebGL2?"#define USE_MORPHCOLORS":"",i.morphTargetsCount>0&&i.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",i.morphTargetsCount>0&&i.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+i.morphTextureStride:"",i.morphTargetsCount>0&&i.isWebGL2?"#define MORPHTARGETS_COUNT "+i.morphTargetsCount:"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+f:"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(ac).join("\n"),w=[y,a8(i),"#define SHADER_NAME "+i.shaderName,_,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.matcap?"#define USE_MATCAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+m:"",i.envMap?"#define "+$:"",i.envMap?"#define "+x:"",v?"#define CUBEUV_TEXEL_WIDTH "+v.texelWidth:"",v?"#define CUBEUV_TEXEL_HEIGHT "+v.texelHeight:"",v?"#define CUBEUV_MAX_MIP "+v.maxMip+".0":"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoat?"#define USE_CLEARCOAT":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.iridescence?"#define USE_IRIDESCENCE":"",i.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",i.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",i.specularColorMap?"#define USE_SPECULARCOLORMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.alphaTest?"#define USE_ALPHATEST":"",i.sheen?"#define USE_SHEEN":"",i.sheenColorMap?"#define USE_SHEENCOLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors||i.instancingColor?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.gradientMap?"#define USE_GRADIENTMAP":"",i.flatShading?"#define FLAT_SHADED":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+f:"",i.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",i.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",i.toneMapping!==Z?"#define TONE_MAPPING":"",i.toneMapping!==Z?rG.tonemapping_pars_fragment:"",i.toneMapping!==Z?function(e,t){let i;switch(t){case J:i="Linear";break;case K:i="Reinhard";break;case Q:i="OptimizedCineon";break;case ee:i="ACESFilmic";break;case et:i="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),i="Linear"}return"vec3 "+e+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}("toneMapping",i.toneMapping):"",i.dithering?"#define DITHERING":"",i.opaque?"#define OPAQUE":"",rG.encodings_pars_fragment,function(e,t){let i=function(e){switch(e){case t8:return["Linear","( value )"];case ty:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+i[0]+i[1]+"; }"}("linearToOutputTexel",i.outputEncoding),i.useDepthPacking?"#define DEPTH_PACKING "+i.depthPacking:"","\n"].filter(ac).join("\n")),l=ap(l=ad(l=am(l),i),i),u=ap(u=ad(u=am(u),i),i),l=ax(l),u=ax(u),i.isWebGL2&&!0!==i.isRawShaderMaterial&&(M="#version 300 es\n",S="precision mediump sampler2DArray;\n#define attribute in\n#define varying out\n#define texture2D texture\n"+S,w=["#define varying in",i.glslVersion===tj?"":"layout(location = 0) out highp vec4 pc_fragColor;",i.glslVersion===tj?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+w);let T=M+S+l,E=M+w+u,A=al(a,35633,T),C=al(a,35632,E);if(a.attachShader(b,A),a.attachShader(b,C),void 0!==i.index0AttributeName?a.bindAttribLocation(b,0,i.index0AttributeName):!0===i.morphTargets&&a.bindAttribLocation(b,0,"position"),a.linkProgram(b),e.debug.checkShaderErrors){let L=a.getProgramInfoLog(b).trim(),R=a.getShaderInfoLog(A).trim(),P=a.getShaderInfoLog(C).trim(),D=!0,I=!0;if(!1===a.getProgramParameter(b,35714)){D=!1;let N=ah(a,A,"vertex"),F=ah(a,C,"fragment");console.error("THREE.WebGLProgram: Shader Error "+a.getError()+" - VALIDATE_STATUS "+a.getProgramParameter(b,35715)+"\n\nProgram Info Log: "+L+"\n"+N+"\n"+F)}else""!==L?console.warn("THREE.WebGLProgram: Program Info Log:",L):(""===R||""===P)&&(I=!1);I&&(this.diagnostics={runnable:D,programLog:L,vertexShader:{log:R,prefix:S},fragmentShader:{log:P,prefix:w}})}a.deleteShader(A),a.deleteShader(C);let z;this.getUniforms=function(){return void 0===z&&(z=new ao(a,b)),z};let O;return this.getAttributes=function(){return void 0===O&&(O=function(e,t){let i={},n=e.getProgramParameter(t,35721);for(let r=0;r<n;r++){let s=e.getActiveAttrib(t,r),a=s.name,o=1;35674===s.type&&(o=2),35675===s.type&&(o=3),35676===s.type&&(o=4),i[a]={type:s.type,location:e.getAttribLocation(t,a),locationSize:o}}return i}(a,b)),O},this.destroy=function(){n.releaseStatesOfProgram(this),a.deleteProgram(b),this.program=void 0},this.name=i.shaderName,this.id=au++,this.cacheKey=t,this.usedTimes=1,this.program=b,this.vertexShader=A,this.fragmentShader=C,this}let a_=0;class ab{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){let t=e.vertexShader,i=e.fragmentShader,n=this._getShaderStage(t),r=this._getShaderStage(i),s=this._getShaderCacheForMaterial(e);return!1===s.has(n)&&(s.add(n),n.usedTimes++),!1===s.has(r)&&(s.add(r),r.usedTimes++),this}remove(e){let t=this.materialCache.get(e);for(let i of t)i.usedTimes--,0===i.usedTimes&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){let t=this.materialCache,i=t.get(e);return void 0===i&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){let t=this.shaderCache,i=t.get(e);return void 0===i&&(i=new aS(e),t.set(e,i)),i}}class aS{constructor(e){this.id=a_++,this.code=e,this.usedTimes=0}}function aw(e,t,i,n,r,s,a){let o=new ny,l=new ab,u=[],h=r.isWebGL2,c=r.logarithmicDepthBuffer,d=r.vertexTextures,p=r.precision,f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(s,o,u,$,v){let y=$.fog,_=v.geometry,b=s.isMeshStandardMaterial?$.environment:null,S=(s.isMeshStandardMaterial?i:t).get(s.envMap||b),w=S&&S.mapping===eo?S.image.height:null,M=f[s.type];null!==s.precision&&(p=r.getMaxPrecision(s.precision))!==s.precision&&console.warn("THREE.WebGLProgram.getParameters:",s.precision,"not supported, using",p,"instead.");let T=_.morphAttributes.position||_.morphAttributes.normal||_.morphAttributes.color,E=void 0!==T?T.length:0,A=0;void 0!==_.morphAttributes.position&&(A=1),void 0!==_.morphAttributes.normal&&(A=2),void 0!==_.morphAttributes.color&&(A=3);let C,L,R,P;if(M){let D=rV[M];C=D.vertexShader,L=D.fragmentShader}else C=s.vertexShader,L=s.fragmentShader,l.update(s),R=l.getVertexShaderID(s),P=l.getFragmentShaderID(s);let I=e.getRenderTarget(),N=s.alphaTest>0,F=s.clearcoat>0,z=s.iridescence>0,O={isWebGL2:h,shaderID:M,shaderName:s.type,vertexShader:C,fragmentShader:L,defines:s.defines,customVertexShaderID:R,customFragmentShaderID:P,isRawShaderMaterial:!0===s.isRawShaderMaterial,glslVersion:s.glslVersion,precision:p,instancing:!0===v.isInstancedMesh,instancingColor:!0===v.isInstancedMesh&&null!==v.instanceColor,supportsVertexTextures:d,outputEncoding:null===I?e.outputEncoding:!0===I.isXRRenderTarget?I.texture.encoding:t8,map:!!s.map,matcap:!!s.matcap,envMap:!!S,envMapMode:S&&S.mapping,envMapCubeUVHeight:w,lightMap:!!s.lightMap,aoMap:!!s.aoMap,emissiveMap:!!s.emissiveMap,bumpMap:!!s.bumpMap,normalMap:!!s.normalMap,objectSpaceNormalMap:s.normalMapType===tw,tangentSpaceNormalMap:s.normalMapType===tS,decodeVideoTexture:!!s.map&&!0===s.map.isVideoTexture&&s.map.encoding===ty,clearcoat:F,clearcoatMap:F&&!!s.clearcoatMap,clearcoatRoughnessMap:F&&!!s.clearcoatRoughnessMap,clearcoatNormalMap:F&&!!s.clearcoatNormalMap,iridescence:z,iridescenceMap:z&&!!s.iridescenceMap,iridescenceThicknessMap:z&&!!s.iridescenceThicknessMap,displacementMap:!!s.displacementMap,roughnessMap:!!s.roughnessMap,metalnessMap:!!s.metalnessMap,specularMap:!!s.specularMap,specularIntensityMap:!!s.specularIntensityMap,specularColorMap:!!s.specularColorMap,opaque:!1===s.transparent&&s.blending===x,alphaMap:!!s.alphaMap,alphaTest:N,gradientMap:!!s.gradientMap,sheen:s.sheen>0,sheenColorMap:!!s.sheenColorMap,sheenRoughnessMap:!!s.sheenRoughnessMap,transmission:s.transmission>0,transmissionMap:!!s.transmissionMap,thicknessMap:!!s.thicknessMap,combine:s.combine,vertexTangents:!!s.normalMap&&!!_.attributes.tangent,vertexColors:s.vertexColors,vertexAlphas:!0===s.vertexColors&&!!_.attributes.color&&4===_.attributes.color.itemSize,vertexUvs:!!s.map||!!s.bumpMap||!!s.normalMap||!!s.specularMap||!!s.alphaMap||!!s.emissiveMap||!!s.roughnessMap||!!s.metalnessMap||!!s.clearcoatMap||!!s.clearcoatRoughnessMap||!!s.clearcoatNormalMap||!!s.iridescenceMap||!!s.iridescenceThicknessMap||!!s.displacementMap||!!s.transmissionMap||!!s.thicknessMap||!!s.specularIntensityMap||!!s.specularColorMap||!!s.sheenColorMap||!!s.sheenRoughnessMap,uvsVertexOnly:!(s.map||s.bumpMap||s.normalMap||s.specularMap||s.alphaMap||s.emissiveMap||s.roughnessMap||s.metalnessMap||s.clearcoatNormalMap||s.iridescenceMap||s.iridescenceThicknessMap||s.transmission>0||s.transmissionMap||s.thicknessMap||s.specularIntensityMap||s.specularColorMap||s.sheen>0||s.sheenColorMap||s.sheenRoughnessMap)&&!!s.displacementMap,fog:!!y,useFog:!0===s.fog,fogExp2:y&&y.isFogExp2,flatShading:!!s.flatShading,sizeAttenuation:s.sizeAttenuation,logarithmicDepthBuffer:c,skinning:!0===v.isSkinnedMesh,morphTargets:void 0!==_.morphAttributes.position,morphNormals:void 0!==_.morphAttributes.normal,morphColors:void 0!==_.morphAttributes.color,morphTargetsCount:E,morphTextureStride:A,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:s.dithering,shadowMapEnabled:e.shadowMap.enabled&&u.length>0,shadowMapType:e.shadowMap.type,toneMapping:s.toneMapped?e.toneMapping:Z,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:s.premultipliedAlpha,doubleSided:s.side===g,flipSided:s.side===m,useDepthPacking:!!s.depthPacking,depthPacking:s.depthPacking||0,index0AttributeName:s.index0AttributeName,extensionDerivatives:s.extensions&&s.extensions.derivatives,extensionFragDepth:s.extensions&&s.extensions.fragDepth,extensionDrawBuffers:s.extensions&&s.extensions.drawBuffers,extensionShaderTextureLOD:s.extensions&&s.extensions.shaderTextureLOD,rendererExtensionFragDepth:h||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:h||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:h||n.has("EXT_shader_texture_lod"),customProgramCacheKey:s.customProgramCacheKey()};return O},getProgramCacheKey:function(t){var i,n,r,s;let a=[];if(t.shaderID?a.push(t.shaderID):(a.push(t.customVertexShaderID),a.push(t.customFragmentShaderID)),void 0!==t.defines)for(let l in t.defines)a.push(l),a.push(t.defines[l]);return!1===t.isRawShaderMaterial&&(i=a,n=t,i.push(n.precision),i.push(n.outputEncoding),i.push(n.envMapMode),i.push(n.envMapCubeUVHeight),i.push(n.combine),i.push(n.vertexUvs),i.push(n.fogExp2),i.push(n.sizeAttenuation),i.push(n.morphTargetsCount),i.push(n.morphAttributeCount),i.push(n.numDirLights),i.push(n.numPointLights),i.push(n.numSpotLights),i.push(n.numSpotLightMaps),i.push(n.numHemiLights),i.push(n.numRectAreaLights),i.push(n.numDirLightShadows),i.push(n.numPointLightShadows),i.push(n.numSpotLightShadows),i.push(n.numSpotLightShadowsWithMaps),i.push(n.shadowMapType),i.push(n.toneMapping),i.push(n.numClippingPlanes),i.push(n.numClipIntersection),i.push(n.depthPacking),r=a,s=t,o.disableAll(),s.isWebGL2&&o.enable(0),s.supportsVertexTextures&&o.enable(1),s.instancing&&o.enable(2),s.instancingColor&&o.enable(3),s.map&&o.enable(4),s.matcap&&o.enable(5),s.envMap&&o.enable(6),s.lightMap&&o.enable(7),s.aoMap&&o.enable(8),s.emissiveMap&&o.enable(9),s.bumpMap&&o.enable(10),s.normalMap&&o.enable(11),s.objectSpaceNormalMap&&o.enable(12),s.tangentSpaceNormalMap&&o.enable(13),s.clearcoat&&o.enable(14),s.clearcoatMap&&o.enable(15),s.clearcoatRoughnessMap&&o.enable(16),s.clearcoatNormalMap&&o.enable(17),s.iridescence&&o.enable(18),s.iridescenceMap&&o.enable(19),s.iridescenceThicknessMap&&o.enable(20),s.displacementMap&&o.enable(21),s.specularMap&&o.enable(22),s.roughnessMap&&o.enable(23),s.metalnessMap&&o.enable(24),s.gradientMap&&o.enable(25),s.alphaMap&&o.enable(26),s.alphaTest&&o.enable(27),s.vertexColors&&o.enable(28),s.vertexAlphas&&o.enable(29),s.vertexUvs&&o.enable(30),s.vertexTangents&&o.enable(31),s.uvsVertexOnly&&o.enable(32),r.push(o.mask),o.disableAll(),s.fog&&o.enable(0),s.useFog&&o.enable(1),s.flatShading&&o.enable(2),s.logarithmicDepthBuffer&&o.enable(3),s.skinning&&o.enable(4),s.morphTargets&&o.enable(5),s.morphNormals&&o.enable(6),s.morphColors&&o.enable(7),s.premultipliedAlpha&&o.enable(8),s.shadowMapEnabled&&o.enable(9),s.physicallyCorrectLights&&o.enable(10),s.doubleSided&&o.enable(11),s.flipSided&&o.enable(12),s.useDepthPacking&&o.enable(13),s.dithering&&o.enable(14),s.specularIntensityMap&&o.enable(15),s.specularColorMap&&o.enable(16),s.transmission&&o.enable(17),s.transmissionMap&&o.enable(18),s.thicknessMap&&o.enable(19),s.sheen&&o.enable(20),s.sheenColorMap&&o.enable(21),s.sheenRoughnessMap&&o.enable(22),s.decodeVideoTexture&&o.enable(23),s.opaque&&o.enable(24),r.push(o.mask),a.push(e.outputEncoding)),a.push(t.customProgramCacheKey),a.join()},getUniforms:function(e){let t=f[e.type],i;if(t){let n=rV[t];i=rA.clone(n.uniforms)}else i=e.uniforms;return i},acquireProgram:function(t,i){let n;for(let r=0,a=u.length;r<a;r++){let o=u[r];if(o.cacheKey===i){n=o,++n.usedTimes;break}}return void 0===n&&(n=new ay(e,i,t,s),u.push(n)),n},releaseProgram:function(e){if(0==--e.usedTimes){let t=u.indexOf(e);u[t]=u[u.length-1],u.pop(),e.destroy()}},releaseShaderCache:function(e){l.remove(e)},programs:u,dispose:function(){l.dispose()}}}function aM(){let e=new WeakMap;return{get:function(t){let i=e.get(t);return void 0===i&&(i={},e.set(t,i)),i},remove:function(t){e.delete(t)},update:function(t,i,n){e.get(t)[i]=n},dispose:function(){e=new WeakMap}}}function aT(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function aE(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function aA(){let e=[],t=0,i=[],n=[],r=[];function s(i,n,r,s,a,o){let l=e[t];return void 0===l?(l={id:i.id,object:i,geometry:n,material:r,groupOrder:s,renderOrder:i.renderOrder,z:a,group:o},e[t]=l):(l.id=i.id,l.object=i,l.geometry=n,l.material=r,l.groupOrder=s,l.renderOrder=i.renderOrder,l.z=a,l.group=o),t++,l}return{opaque:i,transmissive:n,transparent:r,init:function(){t=0,i.length=0,n.length=0,r.length=0},push:function(e,t,a,o,l,u){let h=s(e,t,a,o,l,u);a.transmission>0?n.push(h):!0===a.transparent?r.push(h):i.push(h)},unshift:function(e,t,a,o,l,u){let h=s(e,t,a,o,l,u);a.transmission>0?n.unshift(h):!0===a.transparent?r.unshift(h):i.unshift(h)},finish:function(){for(let i=t,n=e.length;i<n;i++){let r=e[i];if(null===r.id)break;r.id=null,r.object=null,r.geometry=null,r.material=null,r.group=null}},sort:function(e,t){i.length>1&&i.sort(e||aT),n.length>1&&n.sort(t||aE),r.length>1&&r.sort(t||aE)}}}function a1(){let e=new WeakMap;return{get:function(t,i){let n=e.get(t),r;return void 0===n?(r=new aA,e.set(t,[r])):i>=n.length?(r=new aA,n.push(r)):r=n[i],r},dispose:function(){e=new WeakMap}}}function a0(){let e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let i;switch(t.type){case"DirectionalLight":i={direction:new iU,color:new iE};break;case"SpotLight":i={position:new iU,direction:new iU,color:new iE,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":i={position:new iU,color:new iE,distance:0,decay:0};break;case"HemisphereLight":i={direction:new iU,skyColor:new iE,groundColor:new iE};break;case"RectAreaLight":i={color:new iE,position:new iU,halfWidth:new iU,halfHeight:new iU}}return e[t.id]=i,i}}}let aC=0;function aL(e,t){return(t.castShadow?2:0)-(e.castShadow?2:0)+(t.map?1:0)-(e.map?1:0)}function aR(e,t){let i=new a0,n=function(){let e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let i;switch(t.type){case"DirectionalLight":case"SpotLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ic};break;case"PointLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ic,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=i,i}}}(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let s=0;s<9;s++)r.probe.push(new iU);let a=new iU,o=new nh,l=new nh;return{setup:function(s,a){let o=0,l=0,u=0;for(let h=0;h<9;h++)r.probe[h].set(0,0,0);let c=0,d=0,p=0,f=0,m=0,g=0,$=0,x=0,v=0,y=0;s.sort(aL);let _=!0!==a?Math.PI:1;for(let b=0,S=s.length;b<S;b++){let w=s[b],M=w.color,T=w.intensity,E=w.distance,A=w.shadow&&w.shadow.map?w.shadow.map.texture:null;if(w.isAmbientLight)o+=M.r*T*_,l+=M.g*T*_,u+=M.b*T*_;else if(w.isLightProbe)for(let C=0;C<9;C++)r.probe[C].addScaledVector(w.sh.coefficients[C],T);else if(w.isDirectionalLight){let L=i.get(w);if(L.color.copy(w.color).multiplyScalar(w.intensity*_),w.castShadow){let R=w.shadow,P=n.get(w);P.shadowBias=R.bias,P.shadowNormalBias=R.normalBias,P.shadowRadius=R.radius,P.shadowMapSize=R.mapSize,r.directionalShadow[c]=P,r.directionalShadowMap[c]=A,r.directionalShadowMatrix[c]=w.shadow.matrix,g++}r.directional[c]=L,c++}else if(w.isSpotLight){let D=i.get(w);D.position.setFromMatrixPosition(w.matrixWorld),D.color.copy(M).multiplyScalar(T*_),D.distance=E,D.coneCos=Math.cos(w.angle),D.penumbraCos=Math.cos(w.angle*(1-w.penumbra)),D.decay=w.decay,r.spot[p]=D;let I=w.shadow;if(w.map&&(r.spotLightMap[v]=w.map,v++,I.updateMatrices(w),w.castShadow&&y++),r.spotLightMatrix[p]=I.matrix,w.castShadow){let N=n.get(w);N.shadowBias=I.bias,N.shadowNormalBias=I.normalBias,N.shadowRadius=I.radius,N.shadowMapSize=I.mapSize,r.spotShadow[p]=N,r.spotShadowMap[p]=A,x++}p++}else if(w.isRectAreaLight){let F=i.get(w);F.color.copy(M).multiplyScalar(T),F.halfWidth.set(.5*w.width,0,0),F.halfHeight.set(0,.5*w.height,0),r.rectArea[f]=F,f++}else if(w.isPointLight){let z=i.get(w);if(z.color.copy(w.color).multiplyScalar(w.intensity*_),z.distance=w.distance,z.decay=w.decay,w.castShadow){let O=w.shadow,B=n.get(w);B.shadowBias=O.bias,B.shadowNormalBias=O.normalBias,B.shadowRadius=O.radius,B.shadowMapSize=O.mapSize,B.shadowCameraNear=O.camera.near,B.shadowCameraFar=O.camera.far,r.pointShadow[d]=B,r.pointShadowMap[d]=A,r.pointShadowMatrix[d]=w.shadow.matrix,$++}r.point[d]=z,d++}else if(w.isHemisphereLight){let U=i.get(w);U.skyColor.copy(w.color).multiplyScalar(T*_),U.groundColor.copy(w.groundColor).multiplyScalar(T*_),r.hemi[m]=U,m++}}f>0&&(t.isWebGL2?(r.rectAreaLTC1=rk.LTC_FLOAT_1,r.rectAreaLTC2=rk.LTC_FLOAT_2):!0===e.has("OES_texture_float_linear")?(r.rectAreaLTC1=rk.LTC_FLOAT_1,r.rectAreaLTC2=rk.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(r.rectAreaLTC1=rk.LTC_HALF_1,r.rectAreaLTC2=rk.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=o,r.ambient[1]=l,r.ambient[2]=u;let G=r.hash;(G.directionalLength!==c||G.pointLength!==d||G.spotLength!==p||G.rectAreaLength!==f||G.hemiLength!==m||G.numDirectionalShadows!==g||G.numPointShadows!==$||G.numSpotShadows!==x||G.numSpotMaps!==v)&&(r.directional.length=c,r.spot.length=p,r.rectArea.length=f,r.point.length=d,r.hemi.length=m,r.directionalShadow.length=g,r.directionalShadowMap.length=g,r.pointShadow.length=$,r.pointShadowMap.length=$,r.spotShadow.length=x,r.spotShadowMap.length=x,r.directionalShadowMatrix.length=g,r.pointShadowMatrix.length=$,r.spotLightMatrix.length=x+v-y,r.spotLightMap.length=v,r.numSpotLightShadowsWithMaps=y,G.directionalLength=c,G.pointLength=d,G.spotLength=p,G.rectAreaLength=f,G.hemiLength=m,G.numDirectionalShadows=g,G.numPointShadows=$,G.numSpotShadows=x,G.numSpotMaps=v,r.version=aC++)},setupView:function(e,t){let i=0,n=0,s=0,u=0,h=0,c=t.matrixWorldInverse;for(let d=0,p=e.length;d<p;d++){let f=e[d];if(f.isDirectionalLight){let m=r.directional[i];m.direction.setFromMatrixPosition(f.matrixWorld),a.setFromMatrixPosition(f.target.matrixWorld),m.direction.sub(a),m.direction.transformDirection(c),i++}else if(f.isSpotLight){let g=r.spot[s];g.position.setFromMatrixPosition(f.matrixWorld),g.position.applyMatrix4(c),g.direction.setFromMatrixPosition(f.matrixWorld),a.setFromMatrixPosition(f.target.matrixWorld),g.direction.sub(a),g.direction.transformDirection(c),s++}else if(f.isRectAreaLight){let $=r.rectArea[u];$.position.setFromMatrixPosition(f.matrixWorld),$.position.applyMatrix4(c),l.identity(),o.copy(f.matrixWorld),o.premultiply(c),l.extractRotation(o),$.halfWidth.set(.5*f.width,0,0),$.halfHeight.set(0,.5*f.height,0),$.halfWidth.applyMatrix4(l),$.halfHeight.applyMatrix4(l),u++}else if(f.isPointLight){let x=r.point[n];x.position.setFromMatrixPosition(f.matrixWorld),x.position.applyMatrix4(c),n++}else if(f.isHemisphereLight){let v=r.hemi[h];v.direction.setFromMatrixPosition(f.matrixWorld),v.direction.transformDirection(c),h++}}},state:r}}function aP(e,t){let i=new aR(e,t),n=[],r=[];return{init:function(){n.length=0,r.length=0},state:{lightsArray:n,shadowsArray:r,lights:i},setupLights:function(e){i.setup(n,e)},setupLightsView:function(e){i.setupView(n,e)},pushLight:function(e){n.push(e)},pushShadow:function(e){r.push(e)}}}function aD(e,t){let i=new WeakMap;return{get:function(n,r=0){let s=i.get(n),a;return void 0===s?(a=new aP(e,t),i.set(n,[a])):r>=s.length?(a=new aP(e,t),s.push(a)):a=s[r],a},dispose:function(){i=new WeakMap}}}class aI extends nV{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=t_,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class aN extends nV{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new iU,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function aF(e,t,i){let n=new rB,r=new ic,s=new ic,a=new iP,o=new aI({depthPacking:tb}),l=new aN,u={},h=i.maxTextureSize,d={0:m,1:f,2:g},x=new r1({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ic},radius:{value:4}},vertexShader:"void main() {\n	gl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n	const float samples = float( VSM_SAMPLES );\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n	for ( float i = 0.0; i < samples; i ++ ) {\n		float uvOffset = uvStart + i * uvStride;\n		#ifdef HORIZONTAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean / samples;\n	squared_mean = squared_mean / samples;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),v=x.clone();v.defines.HORIZONTAL_PASS=1;let y=new ra;y.setAttribute("position",new n6(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let _=new rS(y,x),b=this;function S(i,n){let s=t.update(_);x.defines.VSM_SAMPLES!==i.blurSamples&&(x.defines.VSM_SAMPLES=i.blurSamples,v.defines.VSM_SAMPLES=i.blurSamples,x.needsUpdate=!0,v.needsUpdate=!0),null===i.mapPass&&(i.mapPass=new iD(r.x,r.y)),x.uniforms.shadow_pass.value=i.map.texture,x.uniforms.resolution.value=i.mapSize,x.uniforms.radius.value=i.radius,e.setRenderTarget(i.mapPass),e.clear(),e.renderBufferDirect(n,null,s,x,_,null),v.uniforms.shadow_pass.value=i.mapPass.texture,v.uniforms.resolution.value=i.mapSize,v.uniforms.radius.value=i.radius,e.setRenderTarget(i.map),e.clear(),e.renderBufferDirect(n,null,s,v,_,null)}function w(t,i,n,r,s,a){let h=null,c=!0===n.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(h=void 0!==c?c:!0===n.isPointLight?l:o,e.localClippingEnabled&&!0===i.clipShadows&&Array.isArray(i.clippingPlanes)&&0!==i.clippingPlanes.length||i.displacementMap&&0!==i.displacementScale||i.alphaMap&&i.alphaTest>0){let f=h.uuid,m=i.uuid,g=u[f];void 0===g&&(g={},u[f]=g);let $=g[m];void 0===$&&($=h.clone(),g[m]=$),h=$}return h.visible=i.visible,h.wireframe=i.wireframe,a===p?h.side=null!==i.shadowSide?i.shadowSide:i.side:h.side=null!==i.shadowSide?i.shadowSide:d[i.side],h.alphaMap=i.alphaMap,h.alphaTest=i.alphaTest,h.clipShadows=i.clipShadows,h.clippingPlanes=i.clippingPlanes,h.clipIntersection=i.clipIntersection,h.displacementMap=i.displacementMap,h.displacementScale=i.displacementScale,h.displacementBias=i.displacementBias,h.wireframeLinewidth=i.wireframeLinewidth,h.linewidth=i.linewidth,!0===n.isPointLight&&!0===h.isMeshDistanceMaterial&&(h.referencePosition.setFromMatrixPosition(n.matrixWorld),h.nearDistance=r,h.farDistance=s),h}function M(i,r,s,a,o){if(!1===i.visible)return;let l=i.layers.test(r.layers);if(l&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&o===p)&&(!i.frustumCulled||n.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,i.matrixWorld);let u=t.update(i),h=i.material;if(Array.isArray(h)){let c=u.groups;for(let d=0,f=c.length;d<f;d++){let m=c[d],g=h[m.materialIndex];if(g&&g.visible){let $=w(i,g,a,s.near,s.far,o);e.renderBufferDirect(s,null,u,$,i,m)}}}else if(h.visible){let x=w(i,h,a,s.near,s.far,o);e.renderBufferDirect(s,null,u,x,i,null)}}let v=i.children;for(let y=0,_=v.length;y<_;y++)M(v[y],r,s,a,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=c,this.render=function(t,i,o){if(!1===b.enabled||!1===b.autoUpdate&&!1===b.needsUpdate||0===t.length)return;let l=e.getRenderTarget(),u=e.getActiveCubeFace(),c=e.getActiveMipmapLevel(),d=e.state;d.setBlending($),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let f=0,m=t.length;f<m;f++){let g=t[f],x=g.shadow;if(void 0===x){console.warn("THREE.WebGLShadowMap:",g,"has no shadow.");continue}if(!1===x.autoUpdate&&!1===x.needsUpdate)continue;r.copy(x.mapSize);let v=x.getFrameExtents();if(r.multiply(v),s.copy(x.mapSize),(r.x>h||r.y>h)&&(r.x>h&&(s.x=Math.floor(h/v.x),r.x=s.x*v.x,x.mapSize.x=s.x),r.y>h&&(s.y=Math.floor(h/v.y),r.y=s.y*v.y,x.mapSize.y=s.y)),null===x.map){let y=this.type!==p?{minFilter:ec,magFilter:ec}:{};x.map=new iD(r.x,r.y,y),x.map.texture.name=g.name+".shadowMap",x.camera.updateProjectionMatrix()}e.setRenderTarget(x.map),e.clear();let _=x.getViewportCount();for(let w=0;w<_;w++){let T=x.getViewport(w);a.set(s.x*T.x,s.y*T.y,s.x*T.z,s.y*T.w),d.viewport(a),x.updateMatrices(g,w),n=x.getFrustum(),M(i,o,x.camera,g,this.type)}!0!==x.isPointLightShadow&&this.type===p&&S(x,o),x.needsUpdate=!1}b.needsUpdate=!1,e.setRenderTarget(l,u,c)}}function az(e,t,i){let n=i.isWebGL2,r=new function(){let t=!1,i=new iP,n=null,r=new iP(0,0,0,0);return{setMask:function(i){n===i||t||(e.colorMask(i,i,i,i),n=i)},setLocked:function(e){t=e},setClear:function(t,n,s,a,o){!0===o&&(t*=a,n*=a,s*=a),i.set(t,n,s,a),!1===r.equals(i)&&(e.clearColor(t,n,s,a),r.copy(i))},reset:function(){t=!1,n=null,r.set(-1,0,0,0)}}},s=new function(){let t=!1,i=null,n=null,r=null;return{setTest:function(e){e?ey(2929):e_(2929)},setMask:function(n){i===n||t||(e.depthMask(n),i=n)},setFunc:function(t){if(n!==t){if(t)switch(t){case B:e.depthFunc(512);break;case U:e.depthFunc(519);break;case G:e.depthFunc(513);break;case k:e.depthFunc(515);break;case V:e.depthFunc(514);break;case H:e.depthFunc(518);break;case W:e.depthFunc(516);break;case j:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);n=t}},setLocked:function(e){t=e},setClear:function(t){r!==t&&(e.clearDepth(t),r=t)},reset:function(){t=!1,i=null,n=null,r=null}}},u=new function(){let t=!1,i=null,n=null,r=null,s=null,a=null,o=null,l=null,u=null;return{setTest:function(e){t||(e?ey(2960):e_(2960))},setMask:function(n){i===n||t||(e.stencilMask(n),i=n)},setFunc:function(t,i,a){(n!==t||r!==i||s!==a)&&(e.stencilFunc(t,i,a),n=t,r=i,s=a)},setOp:function(t,i,n){(a!==t||o!==i||l!==n)&&(e.stencilOp(t,i,n),a=t,o=i,l=n)},setLocked:function(e){t=e},setClear:function(t){u!==t&&(e.clearStencil(t),u=t)},reset:function(){t=!1,i=null,n=null,r=null,s=null,a=null,o=null,l=null,u=null}}},h=new WeakMap,c=new WeakMap,d={},p={},f=new WeakMap,q=[],X=null,Y=!1,Z=null,J=null,K=null,Q=null,ee=null,et=null,ei=null,en=!1,er=null,es=null,ea=null,eo=null,el=null,eu=e.getParameter(35661),eh=!1,ec=0,ed=e.getParameter(7938);-1!==ed.indexOf("WebGL")?eh=parseFloat(/^WebGL (\d)/.exec(ed)[1])>=1:-1!==ed.indexOf("OpenGL ES")&&(eh=parseFloat(/^OpenGL ES (\d)/.exec(ed)[1])>=2);let ep=null,ef={},em=e.getParameter(3088),eg=e.getParameter(2978),e$=new iP().fromArray(em),ex=new iP().fromArray(eg);function ev(t,i,n){let r=new Uint8Array(4),s=e.createTexture();e.bindTexture(t,s),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let a=0;a<n;a++)e.texImage2D(i+a,0,6408,1,1,0,6408,5121,r);return s}let e8={};function ey(t){!0!==d[t]&&(e.enable(t),d[t]=!0)}function e_(t){!1!==d[t]&&(e.disable(t),d[t]=!1)}e8[3553]=ev(3553,3553,1),e8[34067]=ev(34067,34069,6),r.setClear(0,0,0,1),s.setClear(1),u.setClear(0),ey(2929),s.setFunc(k),eT(!1),eE(o),ey(2884),eM($);let eb={[S]:32774,[w]:32778,[M]:32779};if(n)eb[T]=32775,eb[E]=32776;else{let eS=t.get("EXT_blend_minmax");null!==eS&&(eb[T]=eS.MIN_EXT,eb[E]=eS.MAX_EXT)}let ew={[A]:0,[C]:1,[L]:768,[P]:770,[O]:776,[F]:774,[I]:772,[R]:769,[D]:771,[z]:775,[N]:773};function eM(t,i,n,r,s,a,o,l){if(t===$){!0===Y&&(e_(3042),Y=!1);return}if(!1===Y&&(ey(3042),Y=!0),t!==b){if(t!==Z||l!==en){if((J!==S||ee!==S)&&(e.blendEquation(32774),J=S,ee=S),l)switch(t){case x:e.blendFuncSeparate(1,771,1,771);break;case v:e.blendFunc(1,1);break;case y:e.blendFuncSeparate(0,769,0,1);break;case _:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case x:e.blendFuncSeparate(770,771,1,771);break;case v:e.blendFunc(770,1);break;case y:e.blendFuncSeparate(0,769,0,1);break;case _:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}K=null,Q=null,et=null,ei=null,Z=t,en=l}return}s=s||i,a=a||n,o=o||r,(i!==J||s!==ee)&&(e.blendEquationSeparate(eb[i],eb[s]),J=i,ee=s),(n!==K||r!==Q||a!==et||o!==ei)&&(e.blendFuncSeparate(ew[n],ew[r],ew[a],ew[o]),K=n,Q=r,et=a,ei=o),Z=t,en=null}function eT(t){er!==t&&(t?e.frontFace(2304):e.frontFace(2305),er=t)}function eE(t){t!==a?(ey(2884),t!==es&&(t===o?e.cullFace(1029):t===l?e.cullFace(1028):e.cullFace(1032))):e_(2884),es=t}function eA(t,i,n){t?(ey(32823),(eo!==i||el!==n)&&(e.polygonOffset(i,n),eo=i,el=n)):e_(32823)}function e1(t){void 0===t&&(t=33984+eu-1),ep!==t&&(e.activeTexture(t),ep=t)}return{buffers:{color:r,depth:s,stencil:u},enable:ey,disable:e_,bindFramebuffer:function(t,i){return p[t]!==i&&(e.bindFramebuffer(t,i),p[t]=i,n&&(36009===t&&(p[36160]=i),36160===t&&(p[36009]=i)),!0)},drawBuffers:function(n,r){let s=q,a=!1;if(n){if(void 0===(s=f.get(r))&&(s=[],f.set(r,s)),n.isWebGLMultipleRenderTargets){let o=n.texture;if(s.length!==o.length||36064!==s[0]){for(let l=0,u=o.length;l<u;l++)s[l]=36064+l;s.length=o.length,a=!0}}else 36064!==s[0]&&(s[0]=36064,a=!0)}else 1029!==s[0]&&(s[0]=1029,a=!0);a&&(i.isWebGL2?e.drawBuffers(s):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(s))},useProgram:function(t){return X!==t&&(e.useProgram(t),X=t,!0)},setBlending:eM,setMaterial:function(e,t){e.side===g?e_(2884):ey(2884);let i=e.side===m;t&&(i=!i),eT(i),e.blending===x&&!1===e.transparent?eM($):eM(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),s.setFunc(e.depthFunc),s.setTest(e.depthTest),s.setMask(e.depthWrite),r.setMask(e.colorWrite);let n=e.stencilWrite;u.setTest(n),n&&(u.setMask(e.stencilWriteMask),u.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),u.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),eA(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?ey(32926):e_(32926)},setFlipSided:eT,setCullFace:eE,setLineWidth:function(t){t!==ea&&(eh&&e.lineWidth(t),ea=t)},setPolygonOffset:eA,setScissorTest:function(e){e?ey(3089):e_(3089)},activeTexture:e1,bindTexture:function(t,i){null===ep&&e1();let n=ef[ep];void 0===n&&(n={type:void 0,texture:void 0},ef[ep]=n),(n.type!==t||n.texture!==i)&&(e.bindTexture(t,i||e8[t]),n.type=t,n.texture=i)},unbindTexture:function(){let t=ef[ep];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},updateUBOMapping:function(t,i){let n=c.get(i);void 0===n&&(n=new WeakMap,c.set(i,n));let r=n.get(t);void 0===r&&(r=e.getUniformBlockIndex(i,t.name),n.set(t,r))},uniformBlockBinding:function(t,i){let n=c.get(i),r=n.get(t);h.get(t)!==r&&(e.uniformBlockBinding(i,r,t.__bindingPointIndex),h.set(t,r))},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage3D:function(){try{e.texStorage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage3D:function(){try{e.texSubImage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(t){!1===e$.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),e$.copy(t))},viewport:function(t){!1===ex.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),ex.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===n&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),d={},ep=null,ef={},p={},f=new WeakMap,q=[],X=null,Y=!1,Z=null,J=null,K=null,Q=null,ee=null,et=null,ei=null,en=!1,er=null,es=null,ea=null,eo=null,el=null,e$.set(0,0,e.canvas.width,e.canvas.height),ex.set(0,0,e.canvas.width,e.canvas.height),r.reset(),s.reset(),u.reset()}}}function aO(e,t,i,n,r,s,a){let o=r.isWebGL2,l=r.maxTextures,u=r.maxCubemapSize,h=r.maxTextureSize,c=r.maxSamples,d=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,p=/OculusBrowser/g.test(navigator.userAgent),f=new WeakMap,m,g=new WeakMap,$=!1;try{$="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(x){}function v(e,t){return $?new OffscreenCanvas(e,t):i$("canvas")}function y(e,t,i,n){let r=1;if((e.width>n||e.height>n)&&(r=n/Math.max(e.width,e.height)),r<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){let s=t?io:Math.floor,a=s(r*e.width),o=s(r*e.height);void 0===m&&(m=v(a,o));let l=i?v(a,o):m;l.width=a,l.height=o;let u=l.getContext("2d");return u.drawImage(e,0,0,a,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+a+"x"+o+")."),l}"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+").")}return e}function _(e){return is(e.width)&&is(e.height)}function b(e,t){return e.generateMipmaps&&t&&e.minFilter!==ec&&e.minFilter!==eg}function S(t){e.generateMipmap(t)}function w(i,n,r,s,a=!1){if(!1===o)return n;if(null!==i){if(void 0!==e[i])return e[i];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+i+"'")}let l=n;return 6403===n&&(5126===r&&(l=33326),5131===r&&(l=33325),5121===r&&(l=33321)),33319===n&&(5126===r&&(l=33328),5131===r&&(l=33327),5121===r&&(l=33323)),6408===n&&(5126===r&&(l=34836),5131===r&&(l=34842),5121===r&&(l=s===ty&&!1===a?35907:32856),32819===r&&(l=32854),32820===r&&(l=32855)),(33325===l||33326===l||33327===l||33328===l||34842===l||34836===l)&&t.get("EXT_color_buffer_float"),l}function M(e,t,i){return!0===b(e,i)||e.isFramebufferTexture&&e.minFilter!==ec&&e.minFilter!==eg?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function T(e){return e===ec||e===ed||e===ef?9728:9729}function E(e){let t=e.target;t.removeEventListener("dispose",E),function(e){let t=n.get(e);if(void 0===t.__webglInit)return;let i=e.source,r=g.get(i);if(r){let s=r[t.__cacheKey];s.usedTimes--,0===s.usedTimes&&C(e),0===Object.keys(r).length&&g.delete(i)}n.remove(e)}(t),t.isVideoTexture&&f.delete(t)}function A(t){let i=t.target;i.removeEventListener("dispose",A),function(t){let i=t.texture,r=n.get(t),s=n.get(i);if(void 0!==s.__webglTexture&&(e.deleteTexture(s.__webglTexture),a.memory.textures--),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let o=0;o<6;o++)e.deleteFramebuffer(r.__webglFramebuffer[o]),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer[o]);else{if(e.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&e.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer)for(let l=0;l<r.__webglColorRenderbuffer.length;l++)r.__webglColorRenderbuffer[l]&&e.deleteRenderbuffer(r.__webglColorRenderbuffer[l]);r.__webglDepthRenderbuffer&&e.deleteRenderbuffer(r.__webglDepthRenderbuffer)}if(t.isWebGLMultipleRenderTargets)for(let u=0,h=i.length;u<h;u++){let c=n.get(i[u]);c.__webglTexture&&(e.deleteTexture(c.__webglTexture),a.memory.textures--),n.remove(i[u])}n.remove(i),n.remove(t)}(i)}function C(t){let i=n.get(t);e.deleteTexture(i.__webglTexture);let r=t.source,s=g.get(r);delete s[i.__cacheKey],a.memory.textures--}let L=0;function R(e,t){let r=n.get(e);if(e.isVideoTexture&&function(e){let t=a.render.frame;f.get(e)!==t&&(f.set(e,t),e.update())}(e),!1===e.isRenderTargetTexture&&e.version>0&&r.__version!==e.version){let s=e.image;if(null===s)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(!1===s.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{F(r,e,t);return}}i.activeTexture(33984+t),i.bindTexture(3553,r.__webglTexture)}let P={[el]:10497,[eu]:33071,[eh]:33648},D={[ec]:9728,[ed]:9984,[ef]:9986,[eg]:9729,[e$]:9985,[ev]:9987};function I(i,s,a){if(a?(e.texParameteri(i,10242,P[s.wrapS]),e.texParameteri(i,10243,P[s.wrapT]),(32879===i||35866===i)&&e.texParameteri(i,32882,P[s.wrapR]),e.texParameteri(i,10240,D[s.magFilter]),e.texParameteri(i,10241,D[s.minFilter])):(e.texParameteri(i,10242,33071),e.texParameteri(i,10243,33071),(32879===i||35866===i)&&e.texParameteri(i,32882,33071),(s.wrapS!==eu||s.wrapT!==eu)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(i,10240,T(s.magFilter)),e.texParameteri(i,10241,T(s.minFilter)),s.minFilter!==ec&&s.minFilter!==eg&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===t.has("EXT_texture_filter_anisotropic")){let l=t.get("EXT_texture_filter_anisotropic");(s.type!==eT||!1!==t.has("OES_texture_float_linear"))&&(!1!==o||s.type!==eE||!1!==t.has("OES_texture_half_float_linear"))&&(s.anisotropy>1||n.get(s).__currentAnisotropy)&&(e.texParameterf(i,l.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(s.anisotropy,r.getMaxAnisotropy())),n.get(s).__currentAnisotropy=s.anisotropy)}}function N(t,i){let n=!1;void 0===t.__webglInit&&(t.__webglInit=!0,i.addEventListener("dispose",E));let r=i.source,s=g.get(r);void 0===s&&(s={},g.set(r,s));let o=function(e){let t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.encoding),t.join()}(i);if(o!==t.__cacheKey){void 0===s[o]&&(s[o]={texture:e.createTexture(),usedTimes:0},a.memory.textures++,n=!0),s[o].usedTimes++;let l=s[t.__cacheKey];void 0!==l&&(s[t.__cacheKey].usedTimes--,0===l.usedTimes&&C(i)),t.__cacheKey=o,t.__webglTexture=s[o].texture}return n}function F(t,n,r){let a=3553;n.isDataArrayTexture&&(a=35866),n.isData3DTexture&&(a=32879);let l=N(t,n),u=n.source;if(i.activeTexture(33984+r),i.bindTexture(a,t.__webglTexture),u.version!==u.__currentVersion||!0===l){var c;e.pixelStorei(37440,n.flipY),e.pixelStorei(37441,n.premultiplyAlpha),e.pixelStorei(3317,n.unpackAlignment),e.pixelStorei(37443,0);let d=(c=n,!o&&(c.wrapS!==eu||c.wrapT!==eu||c.minFilter!==ec&&c.minFilter!==eg)&&!1===_(n.image)),p=y(n.image,d,!1,h);p=k(n,p);let f=_(p)||o,m=s.convert(n.format,n.encoding),g=s.convert(n.type),$=w(n.internalFormat,m,g,n.encoding,n.isVideoTexture);I(a,n,f);let x,v=n.mipmaps,T=o&&!0!==n.isVideoTexture,E=void 0===u.__currentVersion||!0===l,A=M(n,p,f);if(n.isDepthTexture)$=6402,o?$=n.type===eT?36012:n.type===eM?33190:n.type===e0?35056:33189:n.type===eT&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),n.format===eI&&6402===$&&n.type!==eS&&n.type!==eM&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=eM,g=s.convert(n.type)),n.format===eN&&6402===$&&($=34041,n.type!==e0&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=e0,g=s.convert(n.type))),E&&(T?i.texStorage2D(3553,1,$,p.width,p.height):i.texImage2D(3553,0,$,p.width,p.height,0,m,g,null));else if(n.isDataTexture){if(v.length>0&&f){T&&E&&i.texStorage2D(3553,A,$,v[0].width,v[0].height);for(let C=0,L=v.length;C<L;C++)x=v[C],T?i.texSubImage2D(3553,C,0,0,x.width,x.height,m,g,x.data):i.texImage2D(3553,C,$,x.width,x.height,0,m,g,x.data);n.generateMipmaps=!1}else T?(E&&i.texStorage2D(3553,A,$,p.width,p.height),i.texSubImage2D(3553,0,0,0,p.width,p.height,m,g,p.data)):i.texImage2D(3553,0,$,p.width,p.height,0,m,g,p.data)}else if(n.isCompressedTexture){T&&E&&i.texStorage2D(3553,A,$,v[0].width,v[0].height);for(let R=0,P=v.length;R<P;R++)x=v[R],n.format!==eR?null!==m?T?i.compressedTexSubImage2D(3553,R,0,0,x.width,x.height,m,x.data):i.compressedTexImage2D(3553,R,$,x.width,x.height,0,x.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):T?i.texSubImage2D(3553,R,0,0,x.width,x.height,m,g,x.data):i.texImage2D(3553,R,$,x.width,x.height,0,m,g,x.data)}else if(n.isDataArrayTexture)T?(E&&i.texStorage3D(35866,A,$,p.width,p.height,p.depth),i.texSubImage3D(35866,0,0,0,0,p.width,p.height,p.depth,m,g,p.data)):i.texImage3D(35866,0,$,p.width,p.height,p.depth,0,m,g,p.data);else if(n.isData3DTexture)T?(E&&i.texStorage3D(32879,A,$,p.width,p.height,p.depth),i.texSubImage3D(32879,0,0,0,0,p.width,p.height,p.depth,m,g,p.data)):i.texImage3D(32879,0,$,p.width,p.height,p.depth,0,m,g,p.data);else if(n.isFramebufferTexture){if(E){if(T)i.texStorage2D(3553,A,$,p.width,p.height);else{let D=p.width,F=p.height;for(let z=0;z<A;z++)i.texImage2D(3553,z,$,D,F,0,m,g,null),D>>=1,F>>=1}}}else if(v.length>0&&f){T&&E&&i.texStorage2D(3553,A,$,v[0].width,v[0].height);for(let O=0,B=v.length;O<B;O++)x=v[O],T?i.texSubImage2D(3553,O,0,0,m,g,x):i.texImage2D(3553,O,$,m,g,x);n.generateMipmaps=!1}else T?(E&&i.texStorage2D(3553,A,$,p.width,p.height),i.texSubImage2D(3553,0,0,0,m,g,p)):i.texImage2D(3553,0,$,m,g,p);b(n,f)&&S(a),u.__currentVersion=u.version,n.onUpdate&&n.onUpdate(n)}t.__version=n.version}function z(t,r,a,o,l){let u=s.convert(a.format,a.encoding),h=s.convert(a.type),c=w(a.internalFormat,u,h,a.encoding),p=n.get(r);p.__hasExternalTextures||(32879===l||35866===l?i.texImage3D(l,0,c,r.width,r.height,r.depth,0,u,h,null):i.texImage2D(l,0,c,r.width,r.height,0,u,h,null)),i.bindFramebuffer(36160,t),G(r)?d.framebufferTexture2DMultisampleEXT(36160,o,l,n.get(a).__webglTexture,0,U(r)):e.framebufferTexture2D(36160,o,l,n.get(a).__webglTexture,0),i.bindFramebuffer(36160,null)}function O(t,i,n){if(e.bindRenderbuffer(36161,t),i.depthBuffer&&!i.stencilBuffer){let r=33189;if(n||G(i)){let a=i.depthTexture;a&&a.isDepthTexture&&(a.type===eT?r=36012:a.type===eM&&(r=33190));let o=U(i);G(i)?d.renderbufferStorageMultisampleEXT(36161,o,r,i.width,i.height):e.renderbufferStorageMultisample(36161,o,r,i.width,i.height)}else e.renderbufferStorage(36161,r,i.width,i.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(i.depthBuffer&&i.stencilBuffer){let l=U(i);n&&!1===G(i)?e.renderbufferStorageMultisample(36161,l,35056,i.width,i.height):G(i)?d.renderbufferStorageMultisampleEXT(36161,l,35056,i.width,i.height):e.renderbufferStorage(36161,34041,i.width,i.height),e.framebufferRenderbuffer(36160,33306,36161,t)}else{let u=!0===i.isWebGLMultipleRenderTargets?i.texture:[i.texture];for(let h=0;h<u.length;h++){let c=u[h],p=s.convert(c.format,c.encoding),f=s.convert(c.type),m=w(c.internalFormat,p,f,c.encoding),g=U(i);n&&!1===G(i)?e.renderbufferStorageMultisample(36161,g,m,i.width,i.height):G(i)?d.renderbufferStorageMultisampleEXT(36161,g,m,i.width,i.height):e.renderbufferStorage(36161,m,i.width,i.height)}}e.bindRenderbuffer(36161,null)}function B(t){let r=n.get(t),s=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!r.__autoAllocateDepthBuffer){if(s)throw Error("target.depthTexture not supported in Cube render targets");!function(t,r){let s=r&&r.isWebGLCubeRenderTarget;if(s)throw Error("Depth Texture with cube render targets is not supported");if(i.bindFramebuffer(36160,t),!(r.depthTexture&&r.depthTexture.isDepthTexture))throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");n.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),R(r.depthTexture,0);let a=n.get(r.depthTexture).__webglTexture,o=U(r);if(r.depthTexture.format===eI)G(r)?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,a,0,o):e.framebufferTexture2D(36160,36096,3553,a,0);else if(r.depthTexture.format===eN)G(r)?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,a,0,o):e.framebufferTexture2D(36160,33306,3553,a,0);else throw Error("Unknown depthTexture format")}(r.__webglFramebuffer,t)}else if(s){r.__webglDepthbuffer=[];for(let a=0;a<6;a++)i.bindFramebuffer(36160,r.__webglFramebuffer[a]),r.__webglDepthbuffer[a]=e.createRenderbuffer(),O(r.__webglDepthbuffer[a],t,!1)}else i.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=e.createRenderbuffer(),O(r.__webglDepthbuffer,t,!1);i.bindFramebuffer(36160,null)}function U(e){return Math.min(c,e.samples)}function G(e){let i=n.get(e);return o&&e.samples>0&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==i.__useRenderToTexture}function k(e,i){let n=e.encoding,r=e.format,s=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||e.format===tq||n!==t8&&(n===ty?!1===o?!0===t.has("EXT_sRGB")&&r===eR?(e.format=tq,e.minFilter=eg,e.generateMipmaps=!1):i=i1.sRGBToLinear(i):(r!==eR||s!==ey)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",n)),i}this.allocateTextureUnit=function(){let e=L;return e>=l&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+l),L+=1,e},this.resetTextureUnits=function(){L=0},this.setTexture2D=R,this.setTexture2DArray=function(e,t){let r=n.get(e);if(e.version>0&&r.__version!==e.version){F(r,e,t);return}i.activeTexture(33984+t),i.bindTexture(35866,r.__webglTexture)},this.setTexture3D=function(e,t){let r=n.get(e);if(e.version>0&&r.__version!==e.version){F(r,e,t);return}i.activeTexture(33984+t),i.bindTexture(32879,r.__webglTexture)},this.setTextureCube=function(t,r){let a=n.get(t);if(t.version>0&&a.__version!==t.version){(function(t,n,r){if(6!==n.image.length)return;let a=N(t,n),l=n.source;if(i.activeTexture(33984+r),i.bindTexture(34067,t.__webglTexture),l.version!==l.__currentVersion||!0===a){e.pixelStorei(37440,n.flipY),e.pixelStorei(37441,n.premultiplyAlpha),e.pixelStorei(3317,n.unpackAlignment),e.pixelStorei(37443,0);let h=n.isCompressedTexture||n.image[0].isCompressedTexture,c=n.image[0]&&n.image[0].isDataTexture,d=[];for(let p=0;p<6;p++)h||c?d[p]=c?n.image[p].image:n.image[p]:d[p]=y(n.image[p],!1,!0,u),d[p]=k(n,d[p]);let f=d[0],m=_(f)||o,g=s.convert(n.format,n.encoding),$=s.convert(n.type),x=w(n.internalFormat,g,$,n.encoding),v=o&&!0!==n.isVideoTexture,T=void 0===l.__currentVersion||!0===a,E=M(n,f,m);I(34067,n,m);let A;if(h){v&&T&&i.texStorage2D(34067,E,x,f.width,f.height);for(let C=0;C<6;C++){A=d[C].mipmaps;for(let L=0;L<A.length;L++){let R=A[L];n.format!==eR?null!==g?v?i.compressedTexSubImage2D(34069+C,L,0,0,R.width,R.height,g,R.data):i.compressedTexImage2D(34069+C,L,x,R.width,R.height,0,R.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):v?i.texSubImage2D(34069+C,L,0,0,R.width,R.height,g,$,R.data):i.texImage2D(34069+C,L,x,R.width,R.height,0,g,$,R.data)}}}else{A=n.mipmaps,v&&T&&(A.length>0&&E++,i.texStorage2D(34067,E,x,d[0].width,d[0].height));for(let P=0;P<6;P++)if(c){v?i.texSubImage2D(34069+P,0,0,0,d[P].width,d[P].height,g,$,d[P].data):i.texImage2D(34069+P,0,x,d[P].width,d[P].height,0,g,$,d[P].data);for(let D=0;D<A.length;D++){let F=A[D],z=F.image[P].image;v?i.texSubImage2D(34069+P,D+1,0,0,z.width,z.height,g,$,z.data):i.texImage2D(34069+P,D+1,x,z.width,z.height,0,g,$,z.data)}}else{v?i.texSubImage2D(34069+P,0,0,0,g,$,d[P]):i.texImage2D(34069+P,0,x,g,$,d[P]);for(let O=0;O<A.length;O++){let B=A[O];v?i.texSubImage2D(34069+P,O+1,0,0,g,$,B.image[P]):i.texImage2D(34069+P,O+1,x,g,$,B.image[P])}}}b(n,m)&&S(34067),l.__currentVersion=l.version,n.onUpdate&&n.onUpdate(n)}t.__version=n.version})(a,t,r);return}i.activeTexture(33984+r),i.bindTexture(34067,a.__webglTexture)},this.rebindTextures=function(e,t,i){let r=n.get(e);void 0!==t&&z(r.__webglFramebuffer,e,e.texture,36064,3553),void 0!==i&&B(e)},this.setupRenderTarget=function(t){let l=t.texture,u=n.get(t),h=n.get(l);t.addEventListener("dispose",A),!0!==t.isWebGLMultipleRenderTargets&&(void 0===h.__webglTexture&&(h.__webglTexture=e.createTexture()),h.__version=l.version,a.memory.textures++);let c=!0===t.isWebGLCubeRenderTarget,d=!0===t.isWebGLMultipleRenderTargets,p=_(t)||o;if(c){u.__webglFramebuffer=[];for(let f=0;f<6;f++)u.__webglFramebuffer[f]=e.createFramebuffer()}else{if(u.__webglFramebuffer=e.createFramebuffer(),d){if(r.drawBuffers){let m=t.texture;for(let g=0,$=m.length;g<$;g++){let x=n.get(m[g]);void 0===x.__webglTexture&&(x.__webglTexture=e.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.")}if(o&&t.samples>0&&!1===G(t)){let v=d?l:[l];u.__webglMultisampledFramebuffer=e.createFramebuffer(),u.__webglColorRenderbuffer=[],i.bindFramebuffer(36160,u.__webglMultisampledFramebuffer);for(let y=0;y<v.length;y++){let M=v[y];u.__webglColorRenderbuffer[y]=e.createRenderbuffer(),e.bindRenderbuffer(36161,u.__webglColorRenderbuffer[y]);let T=s.convert(M.format,M.encoding),E=s.convert(M.type),C=w(M.internalFormat,T,E,M.encoding),L=U(t);e.renderbufferStorageMultisample(36161,L,C,t.width,t.height),e.framebufferRenderbuffer(36160,36064+y,36161,u.__webglColorRenderbuffer[y])}e.bindRenderbuffer(36161,null),t.depthBuffer&&(u.__webglDepthRenderbuffer=e.createRenderbuffer(),O(u.__webglDepthRenderbuffer,t,!0)),i.bindFramebuffer(36160,null)}}if(c){i.bindTexture(34067,h.__webglTexture),I(34067,l,p);for(let R=0;R<6;R++)z(u.__webglFramebuffer[R],t,l,36064,34069+R);b(l,p)&&S(34067),i.unbindTexture()}else if(d){let P=t.texture;for(let D=0,N=P.length;D<N;D++){let F=P[D],k=n.get(F);i.bindTexture(3553,k.__webglTexture),I(3553,F,p),z(u.__webglFramebuffer,t,F,36064+D,3553),b(F,p)&&S(3553)}i.unbindTexture()}else{let V=3553;(t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(o?V=t.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),i.bindTexture(V,h.__webglTexture),I(V,l,p),z(u.__webglFramebuffer,t,l,36064,V),b(l,p)&&S(V),i.unbindTexture()}t.depthBuffer&&B(t)},this.updateRenderTargetMipmap=function(e){let t=_(e)||o,r=!0===e.isWebGLMultipleRenderTargets?e.texture:[e.texture];for(let s=0,a=r.length;s<a;s++){let l=r[s];if(b(l,t)){let u=e.isWebGLCubeRenderTarget?34067:3553,h=n.get(l).__webglTexture;i.bindTexture(u,h),S(u),i.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(o&&t.samples>0&&!1===G(t)){let r=t.isWebGLMultipleRenderTargets?t.texture:[t.texture],s=t.width,a=t.height,l=16384,u=[],h=t.stencilBuffer?33306:36096,c=n.get(t),d=!0===t.isWebGLMultipleRenderTargets;if(d)for(let f=0;f<r.length;f++)i.bindFramebuffer(36160,c.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064+f,36161,null),i.bindFramebuffer(36160,c.__webglFramebuffer),e.framebufferTexture2D(36009,36064+f,3553,null,0);i.bindFramebuffer(36008,c.__webglMultisampledFramebuffer),i.bindFramebuffer(36009,c.__webglFramebuffer);for(let m=0;m<r.length;m++){u.push(36064+m),t.depthBuffer&&u.push(h);let g=void 0!==c.__ignoreDepthValues&&c.__ignoreDepthValues;if(!1===g&&(t.depthBuffer&&(l|=256),t.stencilBuffer&&(l|=1024)),d&&e.framebufferRenderbuffer(36008,36064,36161,c.__webglColorRenderbuffer[m]),!0===g&&(e.invalidateFramebuffer(36008,[h]),e.invalidateFramebuffer(36009,[h])),d){let $=n.get(r[m]).__webglTexture;e.framebufferTexture2D(36009,36064,3553,$,0)}e.blitFramebuffer(0,0,s,a,0,0,s,a,l,9728),p&&e.invalidateFramebuffer(36008,u)}if(i.bindFramebuffer(36008,null),i.bindFramebuffer(36009,null),d)for(let x=0;x<r.length;x++){i.bindFramebuffer(36160,c.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064+x,36161,c.__webglColorRenderbuffer[x]);let v=n.get(r[x]).__webglTexture;i.bindFramebuffer(36160,c.__webglFramebuffer),e.framebufferTexture2D(36009,36064+x,3553,v,0)}i.bindFramebuffer(36009,c.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=B,this.setupFrameBufferTexture=z,this.useMultisampledRTT=G}function aB(e,t,i){let n=i.isWebGL2;return{convert:function(i,r=null){let s;if(i===ey)return 5121;if(i===eA)return 32819;if(i===e1)return 32820;if(i===e_)return 5120;if(i===eb)return 5122;if(i===eS)return 5123;if(i===ew)return 5124;if(i===eM)return 5125;if(i===eT)return 5126;if(i===eE)return n?5131:null!==(s=t.get("OES_texture_half_float"))?s.HALF_FLOAT_OES:null;if(i===eC)return 6406;if(i===eR)return 6408;if(i===eP)return 6409;if(i===eD)return 6410;if(i===eI)return 6402;if(i===eN)return 34041;if(i===eF)return 6403;if(i===eL)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(i===tq)return null!==(s=t.get("EXT_sRGB"))?s.SRGB_ALPHA_EXT:null;if(i===ez)return 36244;if(i===eO)return 33319;if(i===eB)return 33320;if(i===eU)return 36249;if(i===e2||i===e3||i===eG||i===ek){if(r===ty){if(null===(s=t.get("WEBGL_compressed_texture_s3tc_srgb")))return null;if(i===e2)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===e3)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===eG)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===ek)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(null===(s=t.get("WEBGL_compressed_texture_s3tc")))return null;if(i===e2)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===e3)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===eG)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===ek)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}}if(i===eV||i===eH||i===e4||i===eW){if(null===(s=t.get("WEBGL_compressed_texture_pvrtc")))return null;if(i===eV)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===eH)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===e4)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===eW)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(i===e6)return null!==(s=t.get("WEBGL_compressed_texture_etc1"))?s.COMPRESSED_RGB_ETC1_WEBGL:null;if(i===e7||i===e5){if(null===(s=t.get("WEBGL_compressed_texture_etc")))return null;if(i===e7)return r===ty?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(i===e5)return r===ty?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}if(i===ej||i===eq||i===eX||i===eY||i===eZ||i===eJ||i===eK||i===e9||i===eQ||i===te||i===tt||i===ti||i===tn||i===tr){if(null===(s=t.get("WEBGL_compressed_texture_astc")))return null;if(i===ej)return r===ty?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===eq)return r===ty?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===eX)return r===ty?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===eY)return r===ty?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===eZ)return r===ty?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===eJ)return r===ty?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===eK)return r===ty?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===e9)return r===ty?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===eQ)return r===ty?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===te)return r===ty?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===tt)return r===ty?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===ti)return r===ty?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===tn)return r===ty?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===tr)return r===ty?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}if(i===ts){if(null===(s=t.get("EXT_texture_compression_bptc")))return null;if(i===ts)return r===ty?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT}return i===e0?n?34042:null!==(s=t.get("WEBGL_depth_texture"))?s.UNSIGNED_INT_24_8_WEBGL:null:void 0!==e[i]?e[i]:null}}}class aU extends rC{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class a2 extends nP{constructor(){super(),this.isGroup=!0,this.type="Group"}}let a3={type:"move"};class aG{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new a2,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new a2,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new iU,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new iU),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new a2,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new iU,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new iU),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,i){let n=null,r=null,s=null,a=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(l&&e.hand){for(let u of(s=!0,e.hand.values())){let h=t.getJointPose(u,i);if(void 0===l.joints[u.jointName]){let c=new a2;c.matrixAutoUpdate=!1,c.visible=!1,l.joints[u.jointName]=c,l.add(c)}let d=l.joints[u.jointName];null!==h&&(d.matrix.fromArray(h.transform.matrix),d.matrix.decompose(d.position,d.rotation,d.scale),d.jointRadius=h.radius),d.visible=null!==h}let p=l.joints["index-finger-tip"],f=l.joints["thumb-tip"],m=p.position.distanceTo(f.position);l.inputState.pinching&&m>.025?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&m<=.015&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&null!==(r=t.getPose(e.gripSpace,i))&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1);null!==a&&(null===(n=t.getPose(e.targetRaySpace,i))&&null!==r&&(n=r),null!==n&&(a.matrix.fromArray(n.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),n.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(n.linearVelocity)):a.hasLinearVelocity=!1,n.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(n.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(a3)))}return null!==a&&(a.visible=null!==n),null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==s),this}}class ak extends iR{constructor(e,t,i,n,r,s,a,o,l,u){if((u=void 0!==u?u:eI)!==eI&&u!==eN)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&u===eI&&(i=eM),void 0===i&&u===eN&&(i=e0),super(null,n,r,s,a,o,u,i,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=void 0!==a?a:ec,this.minFilter=void 0!==o?o:ec,this.flipY=!1,this.generateMipmaps=!1}}class aV extends tX{constructor(e,t){super();let i=this,n=null,r=1,s=null,a="local-floor",o=null,l=null,u=null,h=null,c=null,d=null,p=t.getContextAttributes(),f=null,m=null,g=[],$=[],x=new rC;x.layers.enable(1),x.viewport=new iP;let v=new rC;v.layers.enable(2),v.viewport=new iP;let y=[x,v],_=new aU;_.layers.enable(1),_.layers.enable(2);let b=null,S=null;function w(e){let t=$.indexOf(e.inputSource);if(-1===t)return;let i=g[t];void 0!==i&&i.dispatchEvent({type:e.type,data:e.inputSource})}function M(){n.removeEventListener("select",w),n.removeEventListener("selectstart",w),n.removeEventListener("selectend",w),n.removeEventListener("squeeze",w),n.removeEventListener("squeezestart",w),n.removeEventListener("squeezeend",w),n.removeEventListener("end",M),n.removeEventListener("inputsourceschange",T);for(let t=0;t<g.length;t++){let r=$[t];null!==r&&($[t]=null,g[t].disconnect(r))}b=null,S=null,e.setRenderTarget(f),c=null,h=null,u=null,n=null,m=null,R.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}function T(e){for(let t=0;t<e.removed.length;t++){let i=e.removed[t],n=$.indexOf(i);n>=0&&($[n]=null,g[n].dispatchEvent({type:"disconnected",data:i}))}for(let r=0;r<e.added.length;r++){let s=e.added[r],a=$.indexOf(s);if(-1===a){for(let o=0;o<g.length;o++){if(o>=$.length){$.push(s),a=o;break}if(null===$[o]){$[o]=s,a=o;break}}if(-1===a)break}let l=g[a];l&&l.dispatchEvent({type:"connected",data:s})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=g[e];return void 0===t&&(t=new aG,g[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=g[e];return void 0===t&&(t=new aG,g[e]=t),t.getGripSpace()},this.getHand=function(e){let t=g[e];return void 0===t&&(t=new aG,g[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){r=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){a=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o||s},this.setReferenceSpace=function(e){o=e},this.getBaseLayer=function(){return null!==h?h:c},this.getBinding=function(){return u},this.getFrame=function(){return d},this.getSession=function(){return n},this.setSession=async function(l){if(null!==(n=l)){if(f=e.getRenderTarget(),n.addEventListener("select",w),n.addEventListener("selectstart",w),n.addEventListener("selectend",w),n.addEventListener("squeeze",w),n.addEventListener("squeezestart",w),n.addEventListener("squeezeend",w),n.addEventListener("end",M),n.addEventListener("inputsourceschange",T),!0!==p.xrCompatible&&await t.makeXRCompatible(),void 0===n.renderState.layers||!1===e.capabilities.isWebGL2){let d={antialias:void 0!==n.renderState.layers||p.antialias,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:r};c=new XRWebGLLayer(n,t,d),n.updateRenderState({baseLayer:c}),m=new iD(c.framebufferWidth,c.framebufferHeight,{format:eR,type:ey,encoding:e.outputEncoding,stencilBuffer:p.stencil})}else{let g=null,$=null,x=null;p.depth&&(x=p.stencil?35056:33190,g=p.stencil?eN:eI,$=p.stencil?e0:eM);let v={colorFormat:32856,depthFormat:x,scaleFactor:r};h=(u=new XRWebGLBinding(n,t)).createProjectionLayer(v),n.updateRenderState({layers:[h]}),m=new iD(h.textureWidth,h.textureHeight,{format:eR,type:ey,depthTexture:new ak(h.textureWidth,h.textureHeight,$,void 0,void 0,void 0,void 0,void 0,void 0,g),stencilBuffer:p.stencil,encoding:e.outputEncoding,samples:p.antialias?4:0});let y=e.properties.get(m);y.__ignoreDepthValues=h.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(1),o=null,s=await n.requestReferenceSpace(a),R.setContext(n),R.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}};let E=new iU,A=new iU;function C(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===n)return;_.near=v.near=x.near=e.near,_.far=v.far=x.far=e.far,(b!==_.near||S!==_.far)&&(n.updateRenderState({depthNear:_.near,depthFar:_.far}),b=_.near,S=_.far);let t=e.parent,i=_.cameras;C(_,t);for(let r=0;r<i.length;r++)C(i[r],t);_.matrixWorld.decompose(_.position,_.quaternion,_.scale),e.matrix.copy(_.matrix),e.matrix.decompose(e.position,e.quaternion,e.scale);let s=e.children;for(let a=0,o=s.length;a<o;a++)s[a].updateMatrixWorld(!0);2===i.length?function(e,t,i){E.setFromMatrixPosition(t.matrixWorld),A.setFromMatrixPosition(i.matrixWorld);let n=E.distanceTo(A),r=t.projectionMatrix.elements,s=i.projectionMatrix.elements,a=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],u=(r[9]-1)/r[5],h=(r[8]-1)/r[0],c=(s[8]+1)/s[0],d=n/(-h+c),p=-(d*h);t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(p),e.translateZ(d),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();let f=a+d,m=o+d;e.projectionMatrix.makePerspective(a*h-p,a*c+(n-p),l*o/m*f,u*o/m*f,f,m)}(_,x,v):_.projectionMatrix.copy(x.projectionMatrix)},this.getCamera=function(){return _},this.getFoveation=function(){return null!==h?h.fixedFoveation:null!==c?c.fixedFoveation:void 0},this.setFoveation=function(e){null!==h&&(h.fixedFoveation=e),null!==c&&void 0!==c.fixedFoveation&&(c.fixedFoveation=e)};let L=null,R=new rU;R.setAnimationLoop(function(t,i){if(l=i.getViewerPose(o||s),d=i,null!==l){let n=l.views;null!==c&&(e.setRenderTargetFramebuffer(m,c.framebuffer),e.setRenderTarget(m));let r=!1;n.length!==_.cameras.length&&(_.cameras.length=0,r=!0);for(let a=0;a<n.length;a++){let p=n[a],f=null;if(null!==c)f=c.getViewport(p);else{let x=u.getViewSubImage(h,p);f=x.viewport,0===a&&(e.setRenderTargetTextures(m,x.colorTexture,h.ignoreDepthValues?void 0:x.depthStencilTexture),e.setRenderTarget(m))}let v=y[a];void 0===v&&((v=new rC).layers.enable(a),v.viewport=new iP,y[a]=v),v.matrix.fromArray(p.transform.matrix),v.projectionMatrix.fromArray(p.projectionMatrix),v.viewport.set(f.x,f.y,f.width,f.height),0===a&&_.matrix.copy(v.matrix),!0===r&&_.cameras.push(v)}}for(let b=0;b<g.length;b++){let S=$[b],w=g[b];null!==S&&void 0!==w&&w.update(S,i,o||s)}L&&L(t,i),d=null}),this.setAnimationLoop=function(e){L=e},this.dispose=function(){}}}function aH(e,t){function i(i,n){i.opacity.value=n.opacity,n.color&&i.diffuse.value.copy(n.color),n.emissive&&i.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(i.map.value=n.map),n.alphaMap&&(i.alphaMap.value=n.alphaMap),n.bumpMap&&(i.bumpMap.value=n.bumpMap,i.bumpScale.value=n.bumpScale,n.side===m&&(i.bumpScale.value*=-1)),n.displacementMap&&(i.displacementMap.value=n.displacementMap,i.displacementScale.value=n.displacementScale,i.displacementBias.value=n.displacementBias),n.emissiveMap&&(i.emissiveMap.value=n.emissiveMap),n.normalMap&&(i.normalMap.value=n.normalMap,i.normalScale.value.copy(n.normalScale),n.side===m&&i.normalScale.value.negate()),n.specularMap&&(i.specularMap.value=n.specularMap),n.alphaTest>0&&(i.alphaTest.value=n.alphaTest);let r=t.get(n).envMap;if(r&&(i.envMap.value=r,i.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,i.reflectivity.value=n.reflectivity,i.ior.value=n.ior,i.refractionRatio.value=n.refractionRatio),n.lightMap){i.lightMap.value=n.lightMap;let s=!0!==e.physicallyCorrectLights?Math.PI:1;i.lightMapIntensity.value=n.lightMapIntensity*s}n.aoMap&&(i.aoMap.value=n.aoMap,i.aoMapIntensity.value=n.aoMapIntensity);let a;n.map?a=n.map:n.specularMap?a=n.specularMap:n.displacementMap?a=n.displacementMap:n.normalMap?a=n.normalMap:n.bumpMap?a=n.bumpMap:n.roughnessMap?a=n.roughnessMap:n.metalnessMap?a=n.metalnessMap:n.alphaMap?a=n.alphaMap:n.emissiveMap?a=n.emissiveMap:n.clearcoatMap?a=n.clearcoatMap:n.clearcoatNormalMap?a=n.clearcoatNormalMap:n.clearcoatRoughnessMap?a=n.clearcoatRoughnessMap:n.iridescenceMap?a=n.iridescenceMap:n.iridescenceThicknessMap?a=n.iridescenceThicknessMap:n.specularIntensityMap?a=n.specularIntensityMap:n.specularColorMap?a=n.specularColorMap:n.transmissionMap?a=n.transmissionMap:n.thicknessMap?a=n.thicknessMap:n.sheenColorMap?a=n.sheenColorMap:n.sheenRoughnessMap&&(a=n.sheenRoughnessMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),i.uvTransform.value.copy(a.matrix));let o;n.aoMap?o=n.aoMap:n.lightMap&&(o=n.lightMap),void 0!==o&&(o.isWebGLRenderTarget&&(o=o.texture),!0===o.matrixAutoUpdate&&o.updateMatrix(),i.uv2Transform.value.copy(o.matrix))}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,n,r,s,a){var o,l,u,h,c,d,p,f,g,$,x,v,y,_,b,S,w,M,T,E,A;let C,L;n.isMeshBasicMaterial?i(e,n):n.isMeshLambertMaterial?i(e,n):n.isMeshToonMaterial?(i(e,n),o=e,(l=n).gradientMap&&(o.gradientMap.value=l.gradientMap)):n.isMeshPhongMaterial?(i(e,n),u=e,h=n,u.specular.value.copy(h.specular),u.shininess.value=Math.max(h.shininess,1e-4)):n.isMeshStandardMaterial?(i(e,n),function(e,i){e.roughness.value=i.roughness,e.metalness.value=i.metalness,i.roughnessMap&&(e.roughnessMap.value=i.roughnessMap),i.metalnessMap&&(e.metalnessMap.value=i.metalnessMap);let n=t.get(i).envMap;n&&(e.envMapIntensity.value=i.envMapIntensity)}(e,n),n.isMeshPhysicalMaterial&&(c=e,d=n,p=a,c.ior.value=d.ior,d.sheen>0&&(c.sheenColor.value.copy(d.sheenColor).multiplyScalar(d.sheen),c.sheenRoughness.value=d.sheenRoughness,d.sheenColorMap&&(c.sheenColorMap.value=d.sheenColorMap),d.sheenRoughnessMap&&(c.sheenRoughnessMap.value=d.sheenRoughnessMap)),d.clearcoat>0&&(c.clearcoat.value=d.clearcoat,c.clearcoatRoughness.value=d.clearcoatRoughness,d.clearcoatMap&&(c.clearcoatMap.value=d.clearcoatMap),d.clearcoatRoughnessMap&&(c.clearcoatRoughnessMap.value=d.clearcoatRoughnessMap),d.clearcoatNormalMap&&(c.clearcoatNormalScale.value.copy(d.clearcoatNormalScale),c.clearcoatNormalMap.value=d.clearcoatNormalMap,d.side===m&&c.clearcoatNormalScale.value.negate())),d.iridescence>0&&(c.iridescence.value=d.iridescence,c.iridescenceIOR.value=d.iridescenceIOR,c.iridescenceThicknessMinimum.value=d.iridescenceThicknessRange[0],c.iridescenceThicknessMaximum.value=d.iridescenceThicknessRange[1],d.iridescenceMap&&(c.iridescenceMap.value=d.iridescenceMap),d.iridescenceThicknessMap&&(c.iridescenceThicknessMap.value=d.iridescenceThicknessMap)),d.transmission>0&&(c.transmission.value=d.transmission,c.transmissionSamplerMap.value=p.texture,c.transmissionSamplerSize.value.set(p.width,p.height),d.transmissionMap&&(c.transmissionMap.value=d.transmissionMap),c.thickness.value=d.thickness,d.thicknessMap&&(c.thicknessMap.value=d.thicknessMap),c.attenuationDistance.value=d.attenuationDistance,c.attenuationColor.value.copy(d.attenuationColor)),c.specularIntensity.value=d.specularIntensity,c.specularColor.value.copy(d.specularColor),d.specularIntensityMap&&(c.specularIntensityMap.value=d.specularIntensityMap),d.specularColorMap&&(c.specularColorMap.value=d.specularColorMap))):n.isMeshMatcapMaterial?(i(e,n),f=e,(g=n).matcap&&(f.matcap.value=g.matcap)):n.isMeshDepthMaterial?i(e,n):n.isMeshDistanceMaterial?(i(e,n),$=e,x=n,$.referencePosition.value.copy(x.referencePosition),$.nearDistance.value=x.nearDistance,$.farDistance.value=x.farDistance):n.isMeshNormalMaterial?i(e,n):n.isLineBasicMaterial?(v=e,y=n,v.diffuse.value.copy(y.color),v.opacity.value=y.opacity,n.isLineDashedMaterial&&(_=e,b=n,_.dashSize.value=b.dashSize,_.totalSize.value=b.dashSize+b.gapSize,_.scale.value=b.scale)):n.isPointsMaterial?(S=e,w=n,M=r,T=s,S.diffuse.value.copy(w.color),S.opacity.value=w.opacity,S.size.value=w.size*M,S.scale.value=.5*T,w.map&&(S.map.value=w.map),w.alphaMap&&(S.alphaMap.value=w.alphaMap),w.alphaTest>0&&(S.alphaTest.value=w.alphaTest),w.map?C=w.map:w.alphaMap&&(C=w.alphaMap),void 0!==C&&(!0===C.matrixAutoUpdate&&C.updateMatrix(),S.uvTransform.value.copy(C.matrix))):n.isSpriteMaterial?(E=e,A=n,E.diffuse.value.copy(A.color),E.opacity.value=A.opacity,E.rotation.value=A.rotation,A.map&&(E.map.value=A.map),A.alphaMap&&(E.alphaMap.value=A.alphaMap),A.alphaTest>0&&(E.alphaTest.value=A.alphaTest),A.map?L=A.map:A.alphaMap&&(L=A.alphaMap),void 0!==L&&(!0===L.matrixAutoUpdate&&L.updateMatrix(),E.uvTransform.value.copy(L.matrix))):n.isShadowMaterial?(e.color.value.copy(n.color),e.opacity.value=n.opacity):n.isShaderMaterial&&(n.uniformsNeedUpdate=!1)}}}function a4(e,t,i,n){let r={},s={},a=[],o=i.isWebGL2?e.getParameter(35375):0;function l(e,t,i){let n=e.value;if(void 0===i[t])return"number"==typeof n?i[t]=n:i[t]=n.clone(),!0;if("number"==typeof n){if(i[t]!==n)return i[t]=n,!0}else{let r=i[t];if(!1===r.equals(n))return r.copy(n),!0}return!1}function u(e){let t=e.value,i={boundary:0,storage:0};return"number"==typeof t?(i.boundary=4,i.storage=4):t.isVector2?(i.boundary=8,i.storage=8):t.isVector3||t.isColor?(i.boundary=16,i.storage=12):t.isVector4?(i.boundary=16,i.storage=16):t.isMatrix3?(i.boundary=48,i.storage=48):t.isMatrix4?(i.boundary=64,i.storage=64):t.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",t),i}function h(t){let i=t.target;i.removeEventListener("dispose",h);let n=a.indexOf(i.__bindingPointIndex);a.splice(n,1),e.deleteBuffer(r[i.id]),delete r[i.id],delete s[i.id]}return{bind:function(e,t){let i=t.program;n.uniformBlockBinding(e,i)},update:function(i,c){let d=r[i.id];void 0===d&&(function(e){let t=e.uniforms,i=0,n=0;for(let r=0,s=t.length;r<s;r++){let a=t[r],o=u(a);if(a.__data=new Float32Array(o.storage/Float32Array.BYTES_PER_ELEMENT),a.__offset=i,r>0){n=i%16;let l=16-n;0!==n&&l-o.boundary<0&&(i+=16-n,a.__offset=i)}i+=o.storage}(n=i%16)>0&&(i+=16-n),e.__size=i,e.__cache={},this}(i),d=function(t){let i=function(){for(let e=0;e<o;e++)if(-1===a.indexOf(e))return a.push(e),e;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();t.__bindingPointIndex=i;let n=e.createBuffer(),r=t.__size,s=t.usage;return e.bindBuffer(35345,n),e.bufferData(35345,r,s),e.bindBuffer(35345,null),e.bindBufferBase(35345,i,n),n}(i),r[i.id]=d,i.addEventListener("dispose",h));let p=c.program;n.updateUBOMapping(i,p);let f=t.render.frame;s[i.id]!==f&&(function(t){let i=r[t.id],n=t.uniforms,s=t.__cache;e.bindBuffer(35345,i);for(let a=0,o=n.length;a<o;a++){let u=n[a];if(!0===l(u,a,s)){let h=u.value,c=u.__offset;"number"==typeof h?(u.__data[0]=h,e.bufferSubData(35345,c,u.__data)):(u.value.isMatrix3?(u.__data[0]=u.value.elements[0],u.__data[1]=u.value.elements[1],u.__data[2]=u.value.elements[2],u.__data[3]=u.value.elements[0],u.__data[4]=u.value.elements[3],u.__data[5]=u.value.elements[4],u.__data[6]=u.value.elements[5],u.__data[7]=u.value.elements[0],u.__data[8]=u.value.elements[6],u.__data[9]=u.value.elements[7],u.__data[10]=u.value.elements[8],u.__data[11]=u.value.elements[0]):h.toArray(u.__data),e.bufferSubData(35345,c,u.__data))}}e.bindBuffer(35345,null)}(i),s[i.id]=f)},dispose:function(){for(let t in r)e.deleteBuffer(r[t]);a=[],r={},s={}}}}function aW(e={}){this.isWebGLRenderer=!0;let t=void 0!==e.canvas?e.canvas:function(){let e=i$("canvas");return e.style.display="block",e}(),i=void 0!==e.context?e.context:null,r=void 0===e.depth||e.depth,s=void 0===e.stencil||e.stencil,a=void 0!==e.antialias&&e.antialias,o=void 0===e.premultipliedAlpha||e.premultipliedAlpha,l=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,u=void 0!==e.powerPreference?e.powerPreference:"default",h=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat,c;c=null!==i?i.getContextAttributes().alpha:void 0!==e.alpha&&e.alpha;let d=null,p=null,$=[],x=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=t8,this.physicallyCorrectLights=!1,this.toneMapping=Z,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});let v=this,y=!1,_=0,b=0,S=null,w=-1,M=null,T=new iP,E=new iP,A=null,C=t.width,L=t.height,R=1,P=null,D=null,I=new iP(0,0,C,L),N=new iP(0,0,C,L),F=!1,z=new rB,O=!1,B=!1,U=null,G=new nh,k=new ic,V=new iU,H={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function W(){return null===S?R:1}let j=i;function q(e,i){for(let n=0;n<e.length;n++){let r=e[n],s=t.getContext(r,i);if(null!==s)return s}return null}try{if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${n}`),t.addEventListener("webglcontextlost",ew,!1),t.addEventListener("webglcontextrestored",eM,!1),t.addEventListener("webglcontextcreationerror",eA,!1),null===j){let X=["webgl2","webgl","experimental-webgl"];if(!0===v.isWebGL1Renderer&&X.shift(),j=q(X,{alpha:!0,depth:r,stencil:s,antialias:a,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:u,failIfMajorPerformanceCaveat:h}),null===j){if(q(X))throw Error("Error creating WebGL context with your selected attributes.");throw Error("Error creating WebGL context.")}}void 0===j.getShaderPrecisionFormat&&(j.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(Y){throw console.error("THREE.WebGLRenderer: "+Y.message),Y}let J,K,Q,ee,et,ei,en,er,es,ea,eo,el,eu,eh,ec,ed,ep,ef,em,eg,e$,ex,e8,e_;function eb(){J=new sa(j),K=new r6(j,J,e),J.init(K),ex=new aB(j,J,K),Q=new az(j,J,K),ee=new su,et=new aM,ei=new aO(j,J,Q,et,K,ex,ee),en=new r5(v),er=new ss(v),es=new r2(j,K),e8=new r4(j,J,es,K),ea=new so(j,es,ee,e8),eo=new sp(j,ea,es,ee),em=new sd(j,K,ei),ed=new r7(et),el=new aw(v,en,er,J,K,e8,ed),eu=new aH(v,et),eh=new a1,ec=new aD(J,K),ef=new rH(v,en,Q,eo,c,o),ep=new aF(v,eo,K),e_=new a4(j,ee,K,Q),eg=new rW(j,J,ee,K),e$=new sl(j,J,ee,K),ee.programs=el.programs,v.capabilities=K,v.extensions=J,v.properties=et,v.renderLists=eh,v.shadowMap=ep,v.state=Q,v.info=ee}eb();let eS=new aV(v,j);function ew(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),y=!0}function eM(){console.log("THREE.WebGLRenderer: Context Restored."),y=!1;let e=ee.autoReset,t=ep.enabled,i=ep.autoUpdate,n=ep.needsUpdate,r=ep.type;eb(),ee.autoReset=e,ep.enabled=t,ep.autoUpdate=i,ep.needsUpdate=n,ep.type=r}function eA(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function e1(e){var t;let i=e.target;i.removeEventListener("dispose",e1),function(e){let t=et.get(e).programs;void 0!==t&&(t.forEach(function(e){el.releaseProgram(e)}),e.isShaderMaterial&&el.releaseShaderCache(e))}(t=i),et.remove(t)}this.xr=eS,this.getContext=function(){return j},this.getContextAttributes=function(){return j.getContextAttributes()},this.forceContextLoss=function(){let e=J.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){let e=J.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return R},this.setPixelRatio=function(e){void 0!==e&&(R=e,this.setSize(C,L,!1))},this.getSize=function(e){return e.set(C,L)},this.setSize=function(e,i,n){if(eS.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}C=e,L=i,t.width=Math.floor(e*R),t.height=Math.floor(i*R),!1!==n&&(t.style.width=e+"px",t.style.height=i+"px"),this.setViewport(0,0,e,i)},this.getDrawingBufferSize=function(e){return e.set(C*R,L*R).floor()},this.setDrawingBufferSize=function(e,i,n){C=e,L=i,R=n,t.width=Math.floor(e*n),t.height=Math.floor(i*n),this.setViewport(0,0,e,i)},this.getCurrentViewport=function(e){return e.copy(T)},this.getViewport=function(e){return e.copy(I)},this.setViewport=function(e,t,i,n){e.isVector4?I.set(e.x,e.y,e.z,e.w):I.set(e,t,i,n),Q.viewport(T.copy(I).multiplyScalar(R).floor())},this.getScissor=function(e){return e.copy(N)},this.setScissor=function(e,t,i,n){e.isVector4?N.set(e.x,e.y,e.z,e.w):N.set(e,t,i,n),Q.scissor(E.copy(N).multiplyScalar(R).floor())},this.getScissorTest=function(){return F},this.setScissorTest=function(e){Q.setScissorTest(F=e)},this.setOpaqueSort=function(e){P=e},this.setTransparentSort=function(e){D=e},this.getClearColor=function(e){return e.copy(ef.getClearColor())},this.setClearColor=function(){ef.setClearColor.apply(ef,arguments)},this.getClearAlpha=function(){return ef.getClearAlpha()},this.setClearAlpha=function(){ef.setClearAlpha.apply(ef,arguments)},this.clear=function(e=!0,t=!0,i=!0){let n=0;e&&(n|=16384),t&&(n|=256),i&&(n|=1024),j.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",ew,!1),t.removeEventListener("webglcontextrestored",eM,!1),t.removeEventListener("webglcontextcreationerror",eA,!1),eh.dispose(),ec.dispose(),et.dispose(),en.dispose(),er.dispose(),eo.dispose(),e8.dispose(),e_.dispose(),el.dispose(),eS.dispose(),eS.removeEventListener("sessionstart",eC),eS.removeEventListener("sessionend",eL),U&&(U.dispose(),U=null),eP.stop()},this.renderBufferDirect=function(e,t,i,n,r,s){null===t&&(t=H);let a=r.isMesh&&0>r.matrixWorld.determinant(),o=function(e,t,i,n,r){var s,a;!0!==t.isScene&&(t=H),ei.resetTextureUnits();let o=t.fog,l=n.isMeshStandardMaterial?t.environment:null,u=null===S?v.outputEncoding:!0===S.isXRRenderTarget?S.texture.encoding:t8,h=(n.isMeshStandardMaterial?er:en).get(n.envMap||l),c=!0===n.vertexColors&&!!i.attributes.color&&4===i.attributes.color.itemSize,d=!!n.normalMap&&!!i.attributes.tangent,f=!!i.morphAttributes.position,m=!!i.morphAttributes.normal,g=!!i.morphAttributes.color,$=n.toneMapped?v.toneMapping:Z,x=i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color,y=void 0!==x?x.length:0,_=et.get(n),b=p.state.lights;if(!0===O&&(!0===B||e!==M)){let T=e===M&&n.id===w;ed.setState(n,e,T)}let E=!1;n.version===_.__version?_.needsLights&&_.lightsStateVersion!==b.state.version?E=!0:_.outputEncoding!==u?E=!0:r.isInstancedMesh&&!1===_.instancing?E=!0:r.isInstancedMesh||!0!==_.instancing?r.isSkinnedMesh&&!1===_.skinning?E=!0:r.isSkinnedMesh||!0!==_.skinning?_.envMap!==h?E=!0:!0===n.fog&&_.fog!==o?E=!0:void 0!==_.numClippingPlanes&&(_.numClippingPlanes!==ed.numPlanes||_.numIntersection!==ed.numIntersection)?E=!0:_.vertexAlphas!==c?E=!0:_.vertexTangents!==d?E=!0:_.morphTargets!==f?E=!0:_.morphNormals!==m?E=!0:_.morphColors!==g?E=!0:_.toneMapping!==$?E=!0:!0===K.isWebGL2&&_.morphTargetsCount!==y&&(E=!0):E=!0:E=!0:(E=!0,_.__version=n.version);let A=_.currentProgram;!0===E&&(A=eF(n,t,r));let C=!1,P=!1,D=!1,I=A.getUniforms(),N=_.uniforms;if(Q.useProgram(A.program)&&(C=!0,P=!0,D=!0),n.id!==w&&(w=n.id,P=!0),C||M!==e){if(I.setValue(j,"projectionMatrix",e.projectionMatrix),K.logarithmicDepthBuffer&&I.setValue(j,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),M!==e&&(M=e,P=!0,D=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){let F=I.map.cameraPosition;void 0!==F&&F.setValue(j,V.setFromMatrixPosition(e.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&I.setValue(j,"isOrthographic",!0===e.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||r.isSkinnedMesh)&&I.setValue(j,"viewMatrix",e.matrixWorldInverse)}if(r.isSkinnedMesh){I.setOptional(j,r,"bindMatrix"),I.setOptional(j,r,"bindMatrixInverse");let z=r.skeleton;z&&(K.floatVertexTextures?(null===z.boneTexture&&z.computeBoneTexture(),I.setValue(j,"boneTexture",z.boneTexture,ei),I.setValue(j,"boneTextureSize",z.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}let G=i.morphAttributes;if((void 0!==G.position||void 0!==G.normal||void 0!==G.color&&!0===K.isWebGL2)&&em.update(r,i,n,A),(P||_.receiveShadow!==r.receiveShadow)&&(_.receiveShadow=r.receiveShadow,I.setValue(j,"receiveShadow",r.receiveShadow)),n.isMeshGouraudMaterial&&null!==n.envMap&&(N.envMap.value=h,N.flipEnvMap.value=h.isCubeTexture&&!1===h.isRenderTargetTexture?-1:1),P&&(I.setValue(j,"toneMappingExposure",v.toneMappingExposure),_.needsLights&&(s=N,a=D,s.ambientLightColor.needsUpdate=a,s.lightProbe.needsUpdate=a,s.directionalLights.needsUpdate=a,s.directionalLightShadows.needsUpdate=a,s.pointLights.needsUpdate=a,s.pointLightShadows.needsUpdate=a,s.spotLights.needsUpdate=a,s.spotLightShadows.needsUpdate=a,s.rectAreaLights.needsUpdate=a,s.hemisphereLights.needsUpdate=a),o&&!0===n.fog&&eu.refreshFogUniforms(N,o),eu.refreshMaterialUniforms(N,n,R,L,U),ao.upload(j,_.uniformsList,N,ei)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(ao.upload(j,_.uniformsList,N,ei),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&I.setValue(j,"center",r.center),I.setValue(j,"modelViewMatrix",r.modelViewMatrix),I.setValue(j,"normalMatrix",r.normalMatrix),I.setValue(j,"modelMatrix",r.matrixWorld),n.isShaderMaterial||n.isRawShaderMaterial){let k=n.uniformsGroups;for(let W=0,q=k.length;W<q;W++)if(K.isWebGL2){let X=k[W];e_.update(X,A),e_.bind(X,A)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return A}(e,t,i,n,r);Q.setMaterial(n,a);let l=i.index,u=i.attributes.position;if(null===l){if(void 0===u||0===u.count)return}else if(0===l.count)return;let h=1;!0===n.wireframe&&(l=ea.getWireframeAttribute(i),h=2),e8.setup(r,n,o,i,l);let c,d=eg;null!==l&&(c=es.get(l),(d=e$).setIndex(c));let f=null!==l?l.count:u.count,m=i.drawRange.start*h,g=i.drawRange.count*h,$=null!==s?s.start*h:0,x=null!==s?s.count*h:1/0,y=Math.max(m,$),_=Math.max(0,Math.min(f,m+g,$+x)-1-y+1);if(0!==_){if(r.isMesh)!0===n.wireframe?(Q.setLineWidth(n.wireframeLinewidth*W()),d.setMode(1)):d.setMode(4);else if(r.isLine){let b=n.linewidth;void 0===b&&(b=1),Q.setLineWidth(b*W()),r.isLineSegments?d.setMode(1):r.isLineLoop?d.setMode(2):d.setMode(3)}else r.isPoints?d.setMode(0):r.isSprite&&d.setMode(4);if(r.isInstancedMesh)d.renderInstances(y,_,r.count);else if(i.isInstancedBufferGeometry){let T=Math.min(i.instanceCount,i._maxInstanceCount);d.renderInstances(y,_,T)}else d.render(y,_)}},this.compile=function(e,t){function i(e,t,i){!0===e.transparent&&e.side===g?(e.side=m,e.needsUpdate=!0,eF(e,t,i),e.side=f,e.needsUpdate=!0,eF(e,t,i),e.side=g):eF(e,t,i)}(p=ec.get(e)).init(),x.push(p),e.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(p.pushLight(e),e.castShadow&&p.pushShadow(e))}),p.setupLights(v.physicallyCorrectLights),e.traverse(function(t){let n=t.material;if(n){if(Array.isArray(n))for(let r=0;r<n.length;r++){let s=n[r];i(s,e,t)}else i(n,e,t)}}),x.pop(),p=null};let e0=null;function eC(){eP.stop()}function eL(){eP.start()}let eP=new rU;function eD(e,t,i,n){let r=e.opaque,s=e.transmissive,o=e.transparent;p.setupLightsView(i),s.length>0&&function(e,t,i){let n=K.isWebGL2;null===U&&(U=new iD(1,1,{generateMipmaps:!0,type:J.has("EXT_color_buffer_half_float")?eE:ey,minFilter:ev,samples:n&&!0===a?4:0})),v.getDrawingBufferSize(k),n?U.setSize(k.x,k.y):U.setSize(io(k.x),io(k.y));let r=v.getRenderTarget();v.setRenderTarget(U),v.clear();let s=v.toneMapping;v.toneMapping=Z,eI(e,t,i),v.toneMapping=s,ei.updateMultisampleRenderTarget(U),ei.updateRenderTargetMipmap(U),v.setRenderTarget(r)}(r,t,i),n&&Q.viewport(T.copy(n)),r.length>0&&eI(r,t,i),s.length>0&&eI(s,t,i),o.length>0&&eI(o,t,i),Q.buffers.depth.setTest(!0),Q.buffers.depth.setMask(!0),Q.buffers.color.setMask(!0),Q.setPolygonOffset(!1)}function eI(e,t,i){let n=!0===t.isScene?t.overrideMaterial:null;for(let r=0,s=e.length;r<s;r++){let a=e[r],o=a.object,l=a.geometry,u=null===n?a.material:n,h=a.group;o.layers.test(i.layers)&&eN(o,t,i,l,u,h)}}function eN(e,t,i,n,r,s){e.onBeforeRender(v,t,i,n,r,s),e.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),r.onBeforeRender(v,t,i,n,e,s),!0===r.transparent&&r.side===g?(r.side=m,r.needsUpdate=!0,v.renderBufferDirect(i,t,n,r,e,s),r.side=f,r.needsUpdate=!0,v.renderBufferDirect(i,t,n,r,e,s),r.side=g):v.renderBufferDirect(i,t,n,r,e,s),e.onAfterRender(v,t,i,n,r,s)}function eF(e,t,i){var n;!0!==t.isScene&&(t=H);let r=et.get(e),s=p.state.lights,a=p.state.shadowsArray,o=s.state.version,l=el.getParameters(e,s.state,a,t,i),u=el.getProgramCacheKey(l),h=r.programs;r.environment=e.isMeshStandardMaterial?t.environment:null,r.fog=t.fog,r.envMap=(e.isMeshStandardMaterial?er:en).get(e.envMap||r.environment),void 0===h&&(e.addEventListener("dispose",e1),h=new Map,r.programs=h);let c=h.get(u);if(void 0!==c){if(r.currentProgram===c&&r.lightsStateVersion===o)return ez(e,l),c}else l.uniforms=el.getUniforms(e),e.onBuild(i,l,v),e.onBeforeCompile(l,v),c=el.acquireProgram(l,u),h.set(u,c),r.uniforms=l.uniforms;let d=r.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(d.clippingPlanes=ed.uniform),ez(e,l),r.needsLights=(n=e,n.isMeshLambertMaterial||n.isMeshToonMaterial||n.isMeshPhongMaterial||n.isMeshStandardMaterial||n.isShadowMaterial||n.isShaderMaterial&&!0===n.lights),r.lightsStateVersion=o,r.needsLights&&(d.ambientLightColor.value=s.state.ambient,d.lightProbe.value=s.state.probe,d.directionalLights.value=s.state.directional,d.directionalLightShadows.value=s.state.directionalShadow,d.spotLights.value=s.state.spot,d.spotLightShadows.value=s.state.spotShadow,d.rectAreaLights.value=s.state.rectArea,d.ltc_1.value=s.state.rectAreaLTC1,d.ltc_2.value=s.state.rectAreaLTC2,d.pointLights.value=s.state.point,d.pointLightShadows.value=s.state.pointShadow,d.hemisphereLights.value=s.state.hemi,d.directionalShadowMap.value=s.state.directionalShadowMap,d.directionalShadowMatrix.value=s.state.directionalShadowMatrix,d.spotShadowMap.value=s.state.spotShadowMap,d.spotLightMatrix.value=s.state.spotLightMatrix,d.spotLightMap.value=s.state.spotLightMap,d.pointShadowMap.value=s.state.pointShadowMap,d.pointShadowMatrix.value=s.state.pointShadowMatrix);let f=c.getUniforms(),m=ao.seqWithValue(f.seq,d);return r.currentProgram=c,r.uniformsList=m,c}function ez(e,t){let i=et.get(e);i.outputEncoding=t.outputEncoding,i.instancing=t.instancing,i.skinning=t.skinning,i.morphTargets=t.morphTargets,i.morphNormals=t.morphNormals,i.morphColors=t.morphColors,i.morphTargetsCount=t.morphTargetsCount,i.numClippingPlanes=t.numClippingPlanes,i.numIntersection=t.numClipIntersection,i.vertexAlphas=t.vertexAlphas,i.vertexTangents=t.vertexTangents,i.toneMapping=t.toneMapping}eP.setAnimationLoop(function(e){e0&&e0(e)}),"undefined"!=typeof self&&eP.setContext(self),this.setAnimationLoop=function(e){e0=e,eS.setAnimationLoop(e),null===e?eP.stop():eP.start()},eS.addEventListener("sessionstart",eC),eS.addEventListener("sessionend",eL),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(!0===y)return;!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===eS.enabled&&!0===eS.isPresenting&&(!0===eS.cameraAutoUpdate&&eS.updateCamera(t),t=eS.getCamera()),!0===e.isScene&&e.onBeforeRender(v,e,t,S),(p=ec.get(e,x.length)).init(),x.push(p),G.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),z.setFromProjectionMatrix(G),B=this.localClippingEnabled,O=ed.init(this.clippingPlanes,B,t),(d=eh.get(e,$.length)).init(),$.push(d),function e(t,i,n,r){if(!1===t.visible)return;let s=t.layers.test(i.layers);if(s){if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(i);else if(t.isLight)p.pushLight(t),t.castShadow&&p.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||z.intersectsSprite(t)){r&&V.setFromMatrixPosition(t.matrixWorld).applyMatrix4(G);let a=eo.update(t),o=t.material;o.visible&&d.push(t,a,o,n,V.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==ee.render.frame&&(t.skeleton.update(),t.skeleton.frame=ee.render.frame),!t.frustumCulled||z.intersectsObject(t))){r&&V.setFromMatrixPosition(t.matrixWorld).applyMatrix4(G);let l=eo.update(t),u=t.material;if(Array.isArray(u)){let h=l.groups;for(let c=0,f=h.length;c<f;c++){let m=h[c],g=u[m.materialIndex];g&&g.visible&&d.push(t,l,g,n,V.z,m)}}else u.visible&&d.push(t,l,u,n,V.z,null)}}let $=t.children;for(let x=0,v=$.length;x<v;x++)e($[x],i,n,r)}(e,t,0,v.sortObjects),d.finish(),!0===v.sortObjects&&d.sort(P,D),!0===O&&ed.beginShadows();let i=p.state.shadowsArray;if(ep.render(i,e,t),!0===O&&ed.endShadows(),!0===this.info.autoReset&&this.info.reset(),ef.render(d,e),p.setupLights(v.physicallyCorrectLights),t.isArrayCamera){let n=t.cameras;for(let r=0,s=n.length;r<s;r++){let a=n[r];eD(d,e,a,a.viewport)}}else eD(d,e,t);null!==S&&(ei.updateMultisampleRenderTarget(S),ei.updateRenderTargetMipmap(S)),!0===e.isScene&&e.onAfterRender(v,e,t),e8.resetDefaultState(),w=-1,M=null,x.pop(),p=x.length>0?x[x.length-1]:null,$.pop(),d=$.length>0?$[$.length-1]:null},this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return b},this.getRenderTarget=function(){return S},this.setRenderTargetTextures=function(e,t,i){et.get(e.texture).__webglTexture=t,et.get(e.depthTexture).__webglTexture=i;let n=et.get(e);n.__hasExternalTextures=!0,n.__hasExternalTextures&&(n.__autoAllocateDepthBuffer=void 0===i,n.__autoAllocateDepthBuffer||!0!==J.has("WEBGL_multisampled_render_to_texture")||(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),n.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(e,t){let i=et.get(e);i.__webglFramebuffer=t,i.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e,t=0,i=0){S=e,_=t,b=i;let n=!0;if(e){let r=et.get(e);void 0!==r.__useDefaultFramebuffer?(Q.bindFramebuffer(36160,null),n=!1):void 0===r.__webglFramebuffer?ei.setupRenderTarget(e):r.__hasExternalTextures&&ei.rebindTextures(e,et.get(e.texture).__webglTexture,et.get(e.depthTexture).__webglTexture)}let s=null,a=!1,o=!1;if(e){let l=e.texture;(l.isData3DTexture||l.isDataArrayTexture)&&(o=!0);let u=et.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(s=u[t],a=!0):s=K.isWebGL2&&e.samples>0&&!1===ei.useMultisampledRTT(e)?et.get(e).__webglMultisampledFramebuffer:u,T.copy(e.viewport),E.copy(e.scissor),A=e.scissorTest}else T.copy(I).multiplyScalar(R).floor(),E.copy(N).multiplyScalar(R).floor(),A=F;let h=Q.bindFramebuffer(36160,s);if(h&&K.drawBuffers&&n&&Q.drawBuffers(e,s),Q.viewport(T),Q.scissor(E),Q.setScissorTest(A),a){let c=et.get(e.texture);j.framebufferTexture2D(36160,36064,34069+t,c.__webglTexture,i)}else if(o){let d=et.get(e.texture);j.framebufferTextureLayer(36160,36064,d.__webglTexture,i||0,t||0)}w=-1},this.readRenderTargetPixels=function(e,t,i,n,r,s,a){if(!(e&&e.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let o=et.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==a&&(o=o[a]),o){Q.bindFramebuffer(36160,o);try{let l=e.texture,u=l.format,h=l.type;if(u!==eR&&ex.convert(u)!==j.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}let c=h===eE&&(J.has("EXT_color_buffer_half_float")||K.isWebGL2&&J.has("EXT_color_buffer_float"));if(h!==ey&&ex.convert(h)!==j.getParameter(35738)&&!(h===eT&&(K.isWebGL2||J.has("OES_texture_float")||J.has("WEBGL_color_buffer_float")))&&!c){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}t>=0&&t<=e.width-n&&i>=0&&i<=e.height-r&&j.readPixels(t,i,n,r,ex.convert(u),ex.convert(h),s)}finally{let d=null!==S?et.get(S).__webglFramebuffer:null;Q.bindFramebuffer(36160,d)}}},this.copyFramebufferToTexture=function(e,t,i=0){let n=Math.pow(2,-i),r=Math.floor(t.image.width*n),s=Math.floor(t.image.height*n);ei.setTexture2D(t,0),j.copyTexSubImage2D(3553,i,0,0,e.x,e.y,r,s),Q.unbindTexture()},this.copyTextureToTexture=function(e,t,i,n=0){let r=t.image.width,s=t.image.height,a=ex.convert(i.format),o=ex.convert(i.type);ei.setTexture2D(i,0),j.pixelStorei(37440,i.flipY),j.pixelStorei(37441,i.premultiplyAlpha),j.pixelStorei(3317,i.unpackAlignment),t.isDataTexture?j.texSubImage2D(3553,n,e.x,e.y,r,s,a,o,t.image.data):t.isCompressedTexture?j.compressedTexSubImage2D(3553,n,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,a,t.mipmaps[0].data):j.texSubImage2D(3553,n,e.x,e.y,a,o,t.image),0===n&&i.generateMipmaps&&j.generateMipmap(3553),Q.unbindTexture()},this.copyTextureToTexture3D=function(e,t,i,n,r=0){if(v.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}let s=e.max.x-e.min.x+1,a=e.max.y-e.min.y+1,o=e.max.z-e.min.z+1,l=ex.convert(n.format),u=ex.convert(n.type),h;if(n.isData3DTexture)ei.setTexture3D(n,0),h=32879;else if(n.isDataArrayTexture)ei.setTexture2DArray(n,0),h=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}j.pixelStorei(37440,n.flipY),j.pixelStorei(37441,n.premultiplyAlpha),j.pixelStorei(3317,n.unpackAlignment);let c=j.getParameter(3314),d=j.getParameter(32878),p=j.getParameter(3316),f=j.getParameter(3315),m=j.getParameter(32877),g=i.isCompressedTexture?i.mipmaps[0]:i.image;j.pixelStorei(3314,g.width),j.pixelStorei(32878,g.height),j.pixelStorei(3316,e.min.x),j.pixelStorei(3315,e.min.y),j.pixelStorei(32877,e.min.z),i.isDataTexture||i.isData3DTexture?j.texSubImage3D(h,r,t.x,t.y,t.z,s,a,o,l,u,g.data):i.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),j.compressedTexSubImage3D(h,r,t.x,t.y,t.z,s,a,o,l,g.data)):j.texSubImage3D(h,r,t.x,t.y,t.z,s,a,o,l,u,g),j.pixelStorei(3314,c),j.pixelStorei(32878,d),j.pixelStorei(3316,p),j.pixelStorei(3315,f),j.pixelStorei(32877,m),0===r&&n.generateMipmaps&&j.generateMipmap(h),Q.unbindTexture()},this.initTexture=function(e){e.isCubeTexture?ei.setTextureCube(e,0):e.isData3DTexture?ei.setTexture3D(e,0):e.isDataArrayTexture?ei.setTexture2DArray(e,0):ei.setTexture2D(e,0),Q.unbindTexture()},this.resetState=function(){_=0,b=0,S=null,Q.reset(),e8.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class a6 extends aW{}a6.prototype.isWebGL1Renderer=!0;class a7{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new iE(e),this.density=t}clone(){return new a7(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class a5{constructor(e,t=1,i=1e3){this.isFog=!0,this.name="",this.color=new iE(e),this.near=t,this.far=i}clone(){return new a5(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class aj extends nP{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){let t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class aq{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=t3,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=t9()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let n=0,r=this.stride;n<r;n++)this.array[e+n]=t.array[i+n];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=t9()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);let t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=t9()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}let aX=new iU;class aY{constructor(e,t,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=!0===n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)aX.fromBufferAttribute(this,t),aX.applyMatrix4(e),this.setXYZ(t,aX.x,aX.y,aX.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)aX.fromBufferAttribute(this,t),aX.applyNormalMatrix(e),this.setXYZ(t,aX.x,aX.y,aX.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)aX.fromBufferAttribute(this,t),aX.transformDirection(e),this.setXYZ(t,aX.x,aX.y,aX.z);return this}setX(e,t){return this.normalized&&(t=iu(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=iu(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=iu(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=iu(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=il(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=il(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=il(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=il(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=iu(t,this.array),i=iu(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=iu(t,this.array),i=iu(i,this.array),n=iu(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this}setXYZW(e,t,i,n,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=iu(t,this.array),i=iu(i,this.array),n=iu(n,this.array),r=iu(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this.data.array[e+3]=r,this}clone(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new aY(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data.");let t=[];for(let i=0;i<this.count;i++){let n=i*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[n+r])}return new n6(new this.array.constructor(t),this.itemSize,this.normalized)}}toJSON(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data.");let t=[];for(let i=0;i<this.count;i++){let n=i*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[n+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}}}class aZ extends nV{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new iE(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let aJ,aK=new iU,a9=new iU,aQ=new iU,oe=new ic,ot=new ic,oi=new nh,on=new iU,or=new iU,os=new iU,oa=new ic,oo=new ic,ol=new ic;class ou extends nP{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",void 0===aJ){aJ=new ra;let t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new aq(t,5);aJ.setIndex([0,1,2,0,2,3]),aJ.setAttribute("position",new aY(i,3,0,!1)),aJ.setAttribute("uv",new aY(i,2,3,!1))}this.geometry=aJ,this.material=void 0!==e?e:new aZ,this.center=new ic(.5,.5)}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),a9.setFromMatrixScale(this.matrixWorld),oi.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),aQ.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&a9.multiplyScalar(-aQ.z);let i=this.material.rotation,n,r;0!==i&&(r=Math.cos(i),n=Math.sin(i));let s=this.center;oh(on.set(-.5,-.5,0),aQ,s,a9,n,r),oh(or.set(.5,-.5,0),aQ,s,a9,n,r),oh(os.set(.5,.5,0),aQ,s,a9,n,r),oa.set(0,0),oo.set(1,0),ol.set(1,1);let a=e.ray.intersectTriangle(on,or,os,!1,aK);if(null===a&&(oh(or.set(-.5,.5,0),aQ,s,a9,n,r),oo.set(0,1),null===(a=e.ray.intersectTriangle(on,os,or,!1,aK))))return;let o=e.ray.origin.distanceTo(aK);o<e.near||o>e.far||t.push({distance:o,point:aK.clone(),uv:nG.getUV(aK,on,or,os,oa,oo,ol,new ic),face:null,object:this})}copy(e,t){return super.copy(e,t),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function oh(e,t,i,n,r,s){oe.subVectors(e,i).addScalar(.5).multiply(n),void 0!==r?(ot.x=s*oe.x-r*oe.y,ot.y=r*oe.x+s*oe.y):ot.copy(oe),e.copy(t),e.x+=ot.x,e.y+=ot.y,e.applyMatrix4(oi)}let oc=new iU,od=new iU;class op extends nP{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);let t=e.levels;for(let i=0,n=t.length;i<n;i++){let r=t[i];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);let i=this.levels,n;for(n=0;n<i.length&&!(t<i[n].distance);n++);return i.splice(n,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){let t=this.levels;if(t.length>0){let i,n;for(i=1,n=t.length;i<n&&!(e<t[i].distance);i++);return t[i-1].object}return null}raycast(e,t){let i=this.levels;if(i.length>0){oc.setFromMatrixPosition(this.matrixWorld);let n=e.ray.origin.distanceTo(oc);this.getObjectForDistance(n).raycast(e,t)}}update(e){let t=this.levels;if(t.length>1){oc.setFromMatrixPosition(e.matrixWorld),od.setFromMatrixPosition(this.matrixWorld);let i=oc.distanceTo(od)/e.zoom;t[0].object.visible=!0;let n,r;for(n=1,r=t.length;n<r;n++)if(i>=t[n].distance)t[n-1].object.visible=!1,t[n].object.visible=!0;else break;for(this._currentLevel=n-1;n<r;n++)t[n].object.visible=!1}}toJSON(e){let t=super.toJSON(e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];let i=this.levels;for(let n=0,r=i.length;n<r;n++){let s=i[n];t.object.levels.push({object:s.object.uuid,distance:s.distance})}return t}}let of=new iU,om=new iP,og=new iP,o$=new iU,ox=new nh;class ov extends rS{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new nh,this.bindMatrixInverse=new nh}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){let e=new iP,t=this.geometry.attributes.skinWeight;for(let i=0,n=t.count;i<n;i++){e.fromBufferAttribute(t,i);let r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){let i=this.skeleton,n=this.geometry;om.fromBufferAttribute(n.attributes.skinIndex,e),og.fromBufferAttribute(n.attributes.skinWeight,e),of.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){let s=og.getComponent(r);if(0!==s){let a=om.getComponent(r);ox.multiplyMatrices(i.bones[a].matrixWorld,i.boneInverses[a]),t.addScaledVector(o$.copy(of).applyMatrix4(ox),s)}}return t.applyMatrix4(this.bindMatrixInverse)}}class o8 extends nP{constructor(){super(),this.isBone=!0,this.type="Bone"}}class oy extends iR{constructor(e=null,t=1,i=1,n,r,s,a,o,l=ec,u=ec,h,c){super(null,s,a,o,l,u,n,r,h,c),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}let o_=new nh,ob=new nh;class oS{constructor(e=[],t=[]){this.uuid=t9(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){let e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,n=this.bones.length;i<n;i++)this.boneInverses.push(new nh)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){let i=new nh;this.bones[e]&&i.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(i)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){let i=this.bones[e];i&&i.matrixWorld.copy(this.boneInverses[e]).invert()}for(let n=0,r=this.bones.length;n<r;n++){let s=this.bones[n];s&&(s.parent&&s.parent.isBone?(s.matrix.copy(s.parent.matrixWorld).invert(),s.matrix.multiply(s.matrixWorld)):s.matrix.copy(s.matrixWorld),s.matrix.decompose(s.position,s.quaternion,s.scale))}}update(){let e=this.bones,t=this.boneInverses,i=this.boneMatrices,n=this.boneTexture;for(let r=0,s=e.length;r<s;r++){let a=e[r]?e[r].matrixWorld:ob;o_.multiplyMatrices(a,t[r]),o_.toArray(i,16*r)}null!==n&&(n.needsUpdate=!0)}clone(){return new oS(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(4*this.bones.length);e=Math.max(e=ia(e),4);let t=new Float32Array(e*e*4);t.set(this.boneMatrices);let i=new oy(t,e,e,eR,eT);return i.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=i,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,i=this.bones.length;t<i;t++){let n=this.bones[t];if(n.name===e)return n}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let i=0,n=e.bones.length;i<n;i++){let r=e.bones[i],s=t[r];void 0===s&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),s=new o8),this.bones.push(s),this.boneInverses.push(new nh().fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){let e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;let t=this.bones,i=this.boneInverses;for(let n=0,r=t.length;n<r;n++){let s=t[n];e.bones.push(s.uuid);let a=i[n];e.boneInverses.push(a.toArray())}return e}}class ow extends n6{constructor(e,t,i,n=1){super(e,t,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){let e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}let oM=new nh,oT=new nh,oE=[],oA=new rS;class o1 extends rS{constructor(e,t,i){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new ow(new Float32Array(16*i),16),this.instanceColor=null,this.count=i,this.frustumCulled=!1}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,t){let i=this.matrixWorld,n=this.count;if(oA.geometry=this.geometry,oA.material=this.material,void 0!==oA.material)for(let r=0;r<n;r++){this.getMatrixAt(r,oM),oT.multiplyMatrices(i,oM),oA.matrixWorld=oT,oA.raycast(e,oE);for(let s=0,a=oE.length;s<a;s++){let o=oE[s];o.instanceId=r,o.object=this,t.push(o)}oE.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new ow(new Float32Array(3*this.instanceMatrix.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class o0 extends nV{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new iE(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}let oC=new iU,oL=new iU,oR=new nh,oP=new nu,oD=new nt;class oI extends nP{constructor(e=new ra,t=new o0){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){let e=this.geometry;if(null===e.index){let t=e.attributes.position,i=[0];for(let n=1,r=t.count;n<r;n++)oC.fromBufferAttribute(t,n-1),oL.fromBufferAttribute(t,n),i[n]=i[n-1],i[n]+=oC.distanceTo(oL);e.setAttribute("lineDistance",new nK(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){let i=this.geometry,n=this.matrixWorld,r=e.params.Line.threshold,s=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),oD.copy(i.boundingSphere),oD.applyMatrix4(n),oD.radius+=r,!1===e.ray.intersectsSphere(oD))return;oR.copy(n).invert(),oP.copy(e.ray).applyMatrix4(oR);let a=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=new iU,u=new iU,h=new iU,c=new iU,d=this.isLineSegments?2:1,p=i.index,f=i.attributes,m=f.position;if(null!==p){let g=Math.max(0,s.start),$=Math.min(p.count,s.start+s.count);for(let x=g,v=$-1;x<v;x+=d){let y=p.getX(x),_=p.getX(x+1);l.fromBufferAttribute(m,y),u.fromBufferAttribute(m,_);let b=oP.distanceSqToSegment(l,u,c,h);if(b>o)continue;c.applyMatrix4(this.matrixWorld);let S=e.ray.origin.distanceTo(c);S<e.near||S>e.far||t.push({distance:S,point:h.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}else{let w=Math.max(0,s.start),M=Math.min(m.count,s.start+s.count);for(let T=w,E=M-1;T<E;T+=d){l.fromBufferAttribute(m,T),u.fromBufferAttribute(m,T+1);let A=oP.distanceSqToSegment(l,u,c,h);if(A>o)continue;c.applyMatrix4(this.matrixWorld);let C=e.ray.origin.distanceTo(c);C<e.near||C>e.far||t.push({distance:C,point:h.clone().applyMatrix4(this.matrixWorld),index:T,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){let e=this.geometry,t=e.morphAttributes,i=Object.keys(t);if(i.length>0){let n=t[i[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=n.length;r<s;r++){let a=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}let oN=new iU,oF=new iU;class oz extends oI{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){let e=this.geometry;if(null===e.index){let t=e.attributes.position,i=[];for(let n=0,r=t.count;n<r;n+=2)oN.fromBufferAttribute(t,n),oF.fromBufferAttribute(t,n+1),i[n]=0===n?0:i[n-1],i[n+1]=i[n]+oN.distanceTo(oF);e.setAttribute("lineDistance",new nK(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class oO extends oI{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class oB extends nV{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new iE(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let oU=new nh,o2=new nu,o3=new nt,oG=new iU;class ok extends nP{constructor(e=new ra,t=new oB){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){let i=this.geometry,n=this.matrixWorld,r=e.params.Points.threshold,s=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),o3.copy(i.boundingSphere),o3.applyMatrix4(n),o3.radius+=r,!1===e.ray.intersectsSphere(o3))return;oU.copy(n).invert(),o2.copy(e.ray).applyMatrix4(oU);let a=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=i.index,u=i.attributes,h=u.position;if(null!==l){let c=Math.max(0,s.start),d=Math.min(l.count,s.start+s.count);for(let p=c,f=d;p<f;p++){let m=l.getX(p);oG.fromBufferAttribute(h,m),oV(oG,m,o,n,e,t,this)}}else{let g=Math.max(0,s.start),$=Math.min(h.count,s.start+s.count);for(let x=g,v=$;x<v;x++)oG.fromBufferAttribute(h,x),oV(oG,x,o,n,e,t,this)}}updateMorphTargets(){let e=this.geometry,t=e.morphAttributes,i=Object.keys(t);if(i.length>0){let n=t[i[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=n.length;r<s;r++){let a=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function oV(e,t,i,n,r,s,a){let o=o2.distanceSqToPoint(e);if(o<i){let l=new iU;o2.closestPointToPoint(e,l),l.applyMatrix4(n);let u=r.ray.origin.distanceTo(l);if(u<r.near||u>r.far)return;s.push({distance:u,distanceToRay:Math.sqrt(o),point:l,index:t,face:null,object:a})}}class oH extends iR{constructor(e,t,i,n,r,s,a,o,l){super(e,t,i,n,r,s,a,o,l),this.isVideoTexture=!0,this.minFilter=void 0!==s?s:eg,this.magFilter=void 0!==r?r:eg,this.generateMipmaps=!1;let u=this;function h(){u.needsUpdate=!0,e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(h)}clone(){return new this.constructor(this.image).copy(this)}update(){let e=this.image;!1=="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class o4 extends iR{constructor(e,t,i){super({width:e,height:t}),this.isFramebufferTexture=!0,this.format=i,this.magFilter=ec,this.minFilter=ec,this.generateMipmaps=!1,this.needsUpdate=!0}}class oW extends iR{constructor(e,t,i,n,r,s,a,o,l,u,h,c){super(null,s,a,o,l,u,n,r,h,c),this.isCompressedTexture=!0,this.image={width:t,height:i},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class o6 extends iR{constructor(e,t,i,n,r,s,a,o,l){super(e,t,i,n,r,s,a,o,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}class o7{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){let i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){let t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){let t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){let e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let t=[],i,n=this.getPoint(0),r=0;t.push(0);for(let s=1;s<=e;s++)t.push(r+=(i=this.getPoint(s/e)).distanceTo(n)),n=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){let i=this.getLengths(),n=0,r=i.length,s;s=t||e*i[r-1];let a=0,o=r-1,l;for(;a<=o;)if((l=i[n=Math.floor(a+(o-a)/2)]-s)<0)a=n+1;else if(l>0)o=n-1;else{o=n;break}if(i[n=o]===s)return n/(r-1);let u=i[n],h=i[n+1],c=(s-u)/(h-u),d=(n+c)/(r-1);return d}getTangent(e,t){let i=e-1e-4,n=e+1e-4;i<0&&(i=0),n>1&&(n=1);let r=this.getPoint(i),s=this.getPoint(n),a=t||(r.isVector2?new ic:new iU);return a.copy(s).sub(r).normalize(),a}getTangentAt(e,t){let i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t){let i=new iU,n=[],r=[],s=[],a=new iU,o=new nh;for(let l=0;l<=e;l++){let u=l/e;n[l]=this.getTangentAt(u,new iU)}r[0]=new iU,s[0]=new iU;let h=Number.MAX_VALUE,c=Math.abs(n[0].x),d=Math.abs(n[0].y),p=Math.abs(n[0].z);c<=h&&(h=c,i.set(1,0,0)),d<=h&&(h=d,i.set(0,1,0)),p<=h&&i.set(0,0,1),a.crossVectors(n[0],i).normalize(),r[0].crossVectors(n[0],a),s[0].crossVectors(n[0],r[0]);for(let f=1;f<=e;f++){if(r[f]=r[f-1].clone(),s[f]=s[f-1].clone(),a.crossVectors(n[f-1],n[f]),a.length()>Number.EPSILON){a.normalize();let m=Math.acos(tQ(n[f-1].dot(n[f]),-1,1));r[f].applyMatrix4(o.makeRotationAxis(a,m))}s[f].crossVectors(n[f],r[f])}if(!0===t){let g=Math.acos(tQ(r[0].dot(r[e]),-1,1));g/=e,n[0].dot(a.crossVectors(r[0],r[e]))>0&&(g=-g);for(let $=1;$<=e;$++)r[$].applyMatrix4(o.makeRotationAxis(n[$],g*$)),s[$].crossVectors(n[$],r[$])}return{tangents:n,normals:r,binormals:s}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){let e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class o5 extends o7{constructor(e=0,t=0,i=1,n=1,r=0,s=2*Math.PI,a=!1,o=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=n,this.aStartAngle=r,this.aEndAngle=s,this.aClockwise=a,this.aRotation=o}getPoint(e,t){let i=t||new ic,n=2*Math.PI,r=this.aEndAngle-this.aStartAngle,s=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=n;for(;r>n;)r-=n;r<Number.EPSILON&&(r=s?0:n),!0!==this.aClockwise||s||(r===n?r=-n:r-=n);let a=this.aStartAngle+e*r,o=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){let u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),c=o-this.aX,d=l-this.aY;o=c*u-d*h+this.aX,l=c*h+d*u+this.aY}return i.set(o,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){let e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class oj extends o5{constructor(e,t,i,n,r,s){super(e,t,i,i,n,r,s),this.isArcCurve=!0,this.type="ArcCurve"}}function oq(){let e=0,t=0,i=0,n=0;function r(r,s,a,o){e=r,t=a,i=-3*r+3*s-2*a-o,n=2*r-2*s+a+o}return{initCatmullRom:function(e,t,i,n,s){r(t,i,s*(i-e),s*(n-t))},initNonuniformCatmullRom:function(e,t,i,n,s,a,o){let l=(t-e)/s-(i-e)/(s+a)+(i-t)/a,u=(i-t)/a-(n-t)/(a+o)+(n-i)/o;r(t,i,l*=a,u*=a)},calc:function(r){let s=r*r;return e+t*r+i*s+n*(s*r)}}}let oX=new iU,oY=new oq,oZ=new oq,oJ=new oq;class oK extends o7{constructor(e=[],t=!1,i="centripetal",n=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=n}getPoint(e,t=new iU){let i=t,n=this.points,r=n.length,s=(r-(this.closed?0:1))*e,a=Math.floor(s),o=s-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/r)+1)*r:0===o&&a===r-1&&(a=r-2,o=1);let l,u;this.closed||a>0?l=n[(a-1)%r]:(oX.subVectors(n[0],n[1]).add(n[0]),l=oX);let h=n[a%r],c=n[(a+1)%r];if(this.closed||a+2<r?u=n[(a+2)%r]:(oX.subVectors(n[r-1],n[r-2]).add(n[r-1]),u=oX),"centripetal"===this.curveType||"chordal"===this.curveType){let d="chordal"===this.curveType?.5:.25,p=Math.pow(l.distanceToSquared(h),d),f=Math.pow(h.distanceToSquared(c),d),m=Math.pow(c.distanceToSquared(u),d);f<1e-4&&(f=1),p<1e-4&&(p=f),m<1e-4&&(m=f),oY.initNonuniformCatmullRom(l.x,h.x,c.x,u.x,p,f,m),oZ.initNonuniformCatmullRom(l.y,h.y,c.y,u.y,p,f,m),oJ.initNonuniformCatmullRom(l.z,h.z,c.z,u.z,p,f,m)}else"catmullrom"===this.curveType&&(oY.initCatmullRom(l.x,h.x,c.x,u.x,this.tension),oZ.initCatmullRom(l.y,h.y,c.y,u.y,this.tension),oJ.initCatmullRom(l.z,h.z,c.z,u.z,this.tension));return i.set(oY.calc(o),oZ.calc(o),oJ.calc(o)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let n=e.points[t];this.points.push(n.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){let n=this.points[t];e.points.push(n.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let n=e.points[t];this.points.push(new iU().fromArray(n))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function o9(e,t,i,n,r){let s=(n-t)*.5,a=(r-i)*.5,o=e*e;return(2*i-2*n+s+a)*(e*o)+(-3*i+3*n-2*s-a)*o+s*e+i}function oQ(e,t,i,n){var r,s,a,o;return function(e,t){let i=1-e;return i*i*t}(e,t)+(r=e,2*(1-r)*r*(s=i))+(a=e,a*a*(o=n))}function le(e,t,i,n,r){var s,a,o,l;return function(e,t){let i=1-e;return i*i*i*t}(e,t)+function(e,t){let i=1-e;return 3*i*i*e*t}(e,i)+(s=e,3*(1-s)*s*s*(a=n))+(o=e,o*o*o*(l=r))}class lt extends o7{constructor(e=new ic,t=new ic,i=new ic,n=new ic){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new ic){let i=t,n=this.v0,r=this.v1,s=this.v2,a=this.v3;return i.set(le(e,n.x,r.x,s.x,a.x),le(e,n.y,r.y,s.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class li extends o7{constructor(e=new iU,t=new iU,i=new iU,n=new iU){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new iU){let i=t,n=this.v0,r=this.v1,s=this.v2,a=this.v3;return i.set(le(e,n.x,r.x,s.x,a.x),le(e,n.y,r.y,s.y,a.y),le(e,n.z,r.z,s.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class ln extends o7{constructor(e=new ic,t=new ic){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ic){let i=t;return 1===e?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){let i=t||new ic;return i.copy(this.v2).sub(this.v1).normalize(),i}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class lr extends o7{constructor(e=new iU,t=new iU){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new iU){let i=t;return 1===e?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ls extends o7{constructor(e=new ic,t=new ic,i=new ic){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new ic){let i=t,n=this.v0,r=this.v1,s=this.v2;return i.set(oQ(e,n.x,r.x,s.x),oQ(e,n.y,r.y,s.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class la extends o7{constructor(e=new iU,t=new iU,i=new iU){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new iU){let i=t,n=this.v0,r=this.v1,s=this.v2;return i.set(oQ(e,n.x,r.x,s.x),oQ(e,n.y,r.y,s.y),oQ(e,n.z,r.z,s.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class lo extends o7{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new ic){let i=t,n=this.points,r=(n.length-1)*e,s=Math.floor(r),a=r-s,o=n[0===s?s:s-1],l=n[s],u=n[s>n.length-2?n.length-1:s+1],h=n[s>n.length-3?n.length-1:s+2];return i.set(o9(a,o.x,l.x,u.x,h.x),o9(a,o.y,l.y,u.y,h.y)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let n=e.points[t];this.points.push(n.clone())}return this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){let n=this.points[t];e.points.push(n.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let n=e.points[t];this.points.push(new ic().fromArray(n))}return this}}var ll=Object.freeze({__proto__:null,ArcCurve:oj,CatmullRomCurve3:oK,CubicBezierCurve:lt,CubicBezierCurve3:li,EllipseCurve:o5,LineCurve:ln,LineCurve3:lr,QuadraticBezierCurve:ls,QuadraticBezierCurve3:la,SplineCurve:lo});class lu extends o7{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){let e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new ln(t,e))}getPoint(e,t){let i=e*this.getLength(),n=this.getCurveLengths(),r=0;for(;r<n.length;){if(n[r]>=i){let s=n[r]-i,a=this.curves[r],o=a.getLength(),l=0===o?0:1-s/o;return a.getPointAt(l,t)}r++}return null}getLength(){let e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;let e=[],t=0;for(let i=0,n=this.curves.length;i<n;i++)e.push(t+=this.curves[i].getLength());return this.cacheLengths=e,e}getSpacedPoints(e=40){let t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){let t=[],i;for(let n=0,r=this.curves;n<r.length;n++){let s=r[n],a=s.isEllipseCurve?2*e:s.isLineCurve||s.isLineCurve3?1:s.isSplineCurve?e*s.points.length:e,o=s.getPoints(a);for(let l=0;l<o.length;l++){let u=o[l];i&&i.equals(u)||(t.push(u),i=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){let n=e.curves[t];this.curves.push(n.clone())}return this.autoClose=e.autoClose,this}toJSON(){let e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){let n=this.curves[t];e.curves.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){let n=e.curves[t];this.curves.push(new ll[n.type]().fromJSON(n))}return this}}class lh extends lu{constructor(e){super(),this.type="Path",this.currentPoint=new ic,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){let i=new ln(this.currentPoint.clone(),new ic(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,n){let r=new ls(this.currentPoint.clone(),new ic(e,t),new ic(i,n));return this.curves.push(r),this.currentPoint.set(i,n),this}bezierCurveTo(e,t,i,n,r,s){let a=new lt(this.currentPoint.clone(),new ic(e,t),new ic(i,n),new ic(r,s));return this.curves.push(a),this.currentPoint.set(r,s),this}splineThru(e){let t=[this.currentPoint.clone()].concat(e),i=new lo(t);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,n,r,s){let a=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+a,t+o,i,n,r,s),this}absarc(e,t,i,n,r,s){return this.absellipse(e,t,i,i,n,r,s),this}ellipse(e,t,i,n,r,s,a,o){let l=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+l,t+u,i,n,r,s,a,o),this}absellipse(e,t,i,n,r,s,a,o){let l=new o5(e,t,i,n,r,s,a,o);if(this.curves.length>0){let u=l.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(l);let h=l.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){let e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class lc extends ra{constructor(e=[new ic(0,-.5),new ic(.5,0),new ic(0,.5)],t=12,i=0,n=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:n},t=Math.floor(t),n=tQ(n,0,2*Math.PI);let r=[],s=[],a=[],o=[],l=[],u=1/t,h=new iU,c=new ic,d=new iU,p=new iU,f=new iU,m=0,g=0;for(let $=0;$<=e.length-1;$++)switch($){case 0:m=e[$+1].x-e[$].x,g=e[$+1].y-e[$].y,d.x=1*g,d.y=-m,d.z=0*g,f.copy(d),d.normalize(),o.push(d.x,d.y,d.z);break;case e.length-1:o.push(f.x,f.y,f.z);break;default:m=e[$+1].x-e[$].x,g=e[$+1].y-e[$].y,d.x=1*g,d.y=-m,d.z=0*g,p.copy(d),d.x+=f.x,d.y+=f.y,d.z+=f.z,d.normalize(),o.push(d.x,d.y,d.z),f.copy(p)}for(let x=0;x<=t;x++){let v=i+x*u*n,y=Math.sin(v),_=Math.cos(v);for(let b=0;b<=e.length-1;b++){h.x=e[b].x*y,h.y=e[b].y,h.z=e[b].x*_,s.push(h.x,h.y,h.z),c.x=x/t,c.y=b/(e.length-1),a.push(c.x,c.y);let S=o[3*b+0]*y,w=o[3*b+1],M=o[3*b+0]*_;l.push(S,w,M)}}for(let T=0;T<t;T++)for(let E=0;E<e.length-1;E++){let A=E+T*e.length,C=A,L=A+e.length,R=A+e.length+1,P=A+1;r.push(C,L,P),r.push(R,P,L)}this.setIndex(r),this.setAttribute("position",new nK(s,3)),this.setAttribute("uv",new nK(a,2)),this.setAttribute("normal",new nK(l,3))}static fromJSON(e){return new lc(e.points,e.segments,e.phiStart,e.phiLength)}}class ld extends lc{constructor(e=1,t=1,i=4,n=8){let r=new lh;r.absarc(0,-t/2,e,1.5*Math.PI,0),r.absarc(0,t/2,e,0,.5*Math.PI),super(r.getPoints(i),n),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:i,radialSegments:n}}static fromJSON(e){return new ld(e.radius,e.length,e.capSegments,e.radialSegments)}}class lp extends ra{constructor(e=1,t=8,i=0,n=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:n},t=Math.max(3,t);let r=[],s=[],a=[],o=[],l=new iU,u=new ic;s.push(0,0,0),a.push(0,0,1),o.push(.5,.5);for(let h=0,c=3;h<=t;h++,c+=3){let d=i+h/t*n;l.x=e*Math.cos(d),l.y=e*Math.sin(d),s.push(l.x,l.y,l.z),a.push(0,0,1),u.x=(s[c]/e+1)/2,u.y=(s[c+1]/e+1)/2,o.push(u.x,u.y)}for(let p=1;p<=t;p++)r.push(p,p+1,0);this.setIndex(r),this.setAttribute("position",new nK(s,3)),this.setAttribute("normal",new nK(a,3)),this.setAttribute("uv",new nK(o,2))}static fromJSON(e){return new lp(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class lf extends ra{constructor(e=1,t=1,i=1,n=8,r=1,s=!1,a=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:n,heightSegments:r,openEnded:s,thetaStart:a,thetaLength:o};let l=this;n=Math.floor(n),r=Math.floor(r);let u=[],h=[],c=[],d=[],p=0,f=[],m=i/2,g=0;function $(i){let r=p,s=new ic,f=new iU,$=0,x=!0===i?e:t,v=!0===i?1:-1;for(let y=1;y<=n;y++)h.push(0,m*v,0),c.push(0,v,0),d.push(.5,.5),p++;let _=p;for(let b=0;b<=n;b++){let S=b/n,w=S*o+a,M=Math.cos(w),T=Math.sin(w);f.x=x*T,f.y=m*v,f.z=x*M,h.push(f.x,f.y,f.z),c.push(0,v,0),s.x=.5*M+.5,s.y=.5*T*v+.5,d.push(s.x,s.y),p++}for(let E=0;E<n;E++){let A=r+E,C=_+E;!0===i?u.push(C,C+1,A):u.push(C+1,C,A),$+=3}l.addGroup(g,$,!0===i?1:2),g+=$}(function(){let s=new iU,$=new iU,x=0,v=(t-e)/i;for(let y=0;y<=r;y++){let _=[],b=y/r,S=b*(t-e)+e;for(let w=0;w<=n;w++){let M=w/n,T=M*o+a,E=Math.sin(T),A=Math.cos(T);$.x=S*E,$.y=-b*i+m,$.z=S*A,h.push($.x,$.y,$.z),s.set(E,v,A).normalize(),c.push(s.x,s.y,s.z),d.push(M,1-b),_.push(p++)}f.push(_)}for(let C=0;C<n;C++)for(let L=0;L<r;L++){let R=f[L][C],P=f[L+1][C],D=f[L+1][C+1],I=f[L][C+1];u.push(R,P,I),u.push(P,D,I),x+=6}l.addGroup(g,x,0),g+=x})(),!1===s&&(e>0&&$(!0),t>0&&$(!1)),this.setIndex(u),this.setAttribute("position",new nK(h,3)),this.setAttribute("normal",new nK(c,3)),this.setAttribute("uv",new nK(d,2))}static fromJSON(e){return new lf(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class lm extends lf{constructor(e=1,t=1,i=8,n=1,r=!1,s=0,a=2*Math.PI){super(0,e,t,i,n,r,s,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:s,thetaLength:a}}static fromJSON(e){return new lm(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class lg extends ra{constructor(e=[],t=[],i=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:n};let r=[],s=[];function a(e,t,i,n){let r=n+1,s=[];for(let a=0;a<=r;a++){s[a]=[];let l=e.clone().lerp(i,a/r),u=t.clone().lerp(i,a/r),h=r-a;for(let c=0;c<=h;c++)0===c&&a===r?s[a][c]=l:s[a][c]=l.clone().lerp(u,c/h)}for(let d=0;d<r;d++)for(let p=0;p<2*(r-d)-1;p++){let f=Math.floor(p/2);p%2==0?(o(s[d][f+1]),o(s[d+1][f]),o(s[d][f])):(o(s[d][f+1]),o(s[d+1][f+1]),o(s[d+1][f]))}}function o(e){r.push(e.x,e.y,e.z)}function l(t,i){let n=3*t;i.x=e[n+0],i.y=e[n+1],i.z=e[n+2]}function u(e,t,i,n){n<0&&1===e.x&&(s[t]=e.x-1),0===i.x&&0===i.z&&(s[t]=n/2/Math.PI+.5)}function h(e){return Math.atan2(e.z,-e.x)}function c(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}(function(e){let i=new iU,n=new iU,r=new iU;for(let s=0;s<t.length;s+=3)l(t[s+0],i),l(t[s+1],n),l(t[s+2],r),a(i,n,r,e)})(n),function(e){let t=new iU;for(let i=0;i<r.length;i+=3)t.x=r[i+0],t.y=r[i+1],t.z=r[i+2],t.normalize().multiplyScalar(e),r[i+0]=t.x,r[i+1]=t.y,r[i+2]=t.z}(i),function(){let e=new iU;for(let t=0;t<r.length;t+=3){e.x=r[t+0],e.y=r[t+1],e.z=r[t+2];let i=h(e)/2/Math.PI+.5,n=c(e)/Math.PI+.5;s.push(i,1-n)}(function(){let e=new iU,t=new iU,i=new iU,n=new iU,a=new ic,o=new ic,l=new ic;for(let c=0,d=0;c<r.length;c+=9,d+=6){e.set(r[c+0],r[c+1],r[c+2]),t.set(r[c+3],r[c+4],r[c+5]),i.set(r[c+6],r[c+7],r[c+8]),a.set(s[d+0],s[d+1]),o.set(s[d+2],s[d+3]),l.set(s[d+4],s[d+5]),n.copy(e).add(t).add(i).divideScalar(3);let p=h(n);u(a,d+0,e,p),u(o,d+2,t,p),u(l,d+4,i,p)}})(),function(){for(let e=0;e<s.length;e+=6){let t=s[e+0],i=s[e+2],n=s[e+4],r=Math.max(t,i,n),a=Math.min(t,i,n);r>.9&&a<.1&&(t<.2&&(s[e+0]+=1),i<.2&&(s[e+2]+=1),n<.2&&(s[e+4]+=1))}}()}(),this.setAttribute("position",new nK(r,3)),this.setAttribute("normal",new nK(r.slice(),3)),this.setAttribute("uv",new nK(s,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(e){return new lg(e.vertices,e.indices,e.radius,e.details)}}class l$ extends lg{constructor(e=1,t=0){let i=(1+Math.sqrt(5))/2,n=1/i;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new l$(e.radius,e.detail)}}let lx=new iU,lv=new iU,l8=new iU,ly=new nG;class l_ extends ra{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},null!==e){let i=Math.cos(tJ*t),n=e.getIndex(),r=e.getAttribute("position"),s=n?n.count:r.count,a=[0,0,0],o=["a","b","c"],l=[,,,],u={},h=[];for(let c=0;c<s;c+=3){n?(a[0]=n.getX(c),a[1]=n.getX(c+1),a[2]=n.getX(c+2)):(a[0]=c,a[1]=c+1,a[2]=c+2);let{a:d,b:p,c:f}=ly;if(d.fromBufferAttribute(r,a[0]),p.fromBufferAttribute(r,a[1]),f.fromBufferAttribute(r,a[2]),ly.getNormal(l8),l[0]=`${Math.round(1e4*d.x)},${Math.round(1e4*d.y)},${Math.round(1e4*d.z)}`,l[1]=`${Math.round(1e4*p.x)},${Math.round(1e4*p.y)},${Math.round(1e4*p.z)}`,l[2]=`${Math.round(1e4*f.x)},${Math.round(1e4*f.y)},${Math.round(1e4*f.z)}`,l[0]!==l[1]&&l[1]!==l[2]&&l[2]!==l[0])for(let m=0;m<3;m++){let g=(m+1)%3,$=l[m],x=l[g],v=ly[o[m]],y=ly[o[g]],_=`${$}_${x}`,b=`${x}_${$}`;b in u&&u[b]?(l8.dot(u[b].normal)<=i&&(h.push(v.x,v.y,v.z),h.push(y.x,y.y,y.z)),u[b]=null):_ in u||(u[_]={index0:a[m],index1:a[g],normal:l8.clone()})}}for(let S in u)if(u[S]){let{index0:w,index1:M}=u[S];lx.fromBufferAttribute(r,w),lv.fromBufferAttribute(r,M),h.push(lx.x,lx.y,lx.z),h.push(lv.x,lv.y,lv.z)}this.setAttribute("position",new nK(h,3))}}}class lb extends lh{constructor(e){super(e),this.uuid=t9(),this.type="Shape",this.holes=[]}getPointsHoles(e){let t=[];for(let i=0,n=this.holes.length;i<n;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){let n=e.holes[t];this.holes.push(n.clone())}return this}toJSON(){let e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){let n=this.holes[t];e.holes.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){let n=e.holes[t];this.holes.push(new lh().fromJSON(n))}return this}}let lS={triangulate:function(e,t,i=2){let n=t&&t.length,r=n?t[0]*i:e.length,s=lw(e,0,r,i,!0),a=[];if(!s||s.next===s.prev)return a;let o,l,u,h,c,d,p;if(n&&(s=function(e,t,i,n){let r=[],s,a,o,l,u;for(s=0,a=t.length;s<a;s++)o=t[s]*n,l=s<a-1?t[s+1]*n:e.length,(u=lw(e,o,l,n,!1))===u.next&&(u.steiner=!0),r.push(lD(u));for(r.sort(lC),s=0;s<r.length;s++)lL(r[s],i),i=lM(i,i.next);return i}(e,t,s,i)),e.length>80*i){o=u=e[0],l=h=e[1];for(let f=i;f<r;f+=i)c=e[f],d=e[f+1],c<o&&(o=c),d<l&&(l=d),c>u&&(u=c),d>h&&(h=d);p=0!==(p=Math.max(u-o,h-l))?1/p:0}return lT(s,a,i,o,l,p),a}};function lw(e,t,i,n,r){let s,a;if(r===function(e,t,i,n){let r=0;for(let s=t,a=i-n;s<i;s+=n)r+=(e[a]-e[s])*(e[s+1]+e[a+1]),a=s;return r}(e,t,i,n)>0)for(s=t;s<i;s+=n)a=lG(s,e[s],e[s+1],a);else for(s=i-n;s>=t;s-=n)a=lG(s,e[s],e[s+1],a);return a&&lz(a,a.next)&&(lk(a),a=a.next),a}function lM(e,t){if(!e)return e;t||(t=e);let i=e,n;do if(n=!1,!i.steiner&&(lz(i,i.next)||0===lF(i.prev,i,i.next))){if(lk(i),(i=t=i.prev)===i.next)break;n=!0}else i=i.next;while(n||i!==t);return t}function lT(e,t,i,n,r,s,a){if(!e)return;!a&&s&&function(e,t,i,n){let r=e;do null===r.z&&(r.z=lP(r.x,r.y,t,i,n)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==e);r.prevZ.nextZ=null,r.prevZ=null,function(e){let t,i,n,r,s,a,o,l,u=1;do{for(i=e,e=null,s=null,a=0;i;){for(a++,n=i,o=0,t=0;t<u&&(o++,n=n.nextZ);t++);for(l=u;o>0||l>0&&n;)0!==o&&(0===l||!n||i.z<=n.z)?(r=i,i=i.nextZ,o--):(r=n,n=n.nextZ,l--),s?s.nextZ=r:e=r,r.prevZ=s,s=r;i=n}s.nextZ=null,u*=2}while(a>1)}(r)}(e,n,r,s);let o=e,l,u;for(;e.prev!==e.next;){if(l=e.prev,u=e.next,s?lA(e,n,r,s):lE(e)){t.push(l.i/i),t.push(e.i/i),t.push(u.i/i),lk(e),e=u.next,o=u.next;continue}if((e=u)===o){a?1===a?lT(e=l1(lM(e),t,i),t,i,n,r,s,2):2===a&&l0(e,t,i,n,r,s):lT(lM(e),t,i,n,r,s,1);break}}}function lE(e){let t=e.prev,i=e,n=e.next;if(lF(t,i,n)>=0)return!1;let r=e.next.next;for(;r!==e.prev;){if(lI(t.x,t.y,i.x,i.y,n.x,n.y,r.x,r.y)&&lF(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function lA(e,t,i,n){let r=e.prev,s=e,a=e.next;if(lF(r,s,a)>=0)return!1;let o=r.x<s.x?r.x<a.x?r.x:a.x:s.x<a.x?s.x:a.x,l=r.y<s.y?r.y<a.y?r.y:a.y:s.y<a.y?s.y:a.y,u=r.x>s.x?r.x>a.x?r.x:a.x:s.x>a.x?s.x:a.x,h=r.y>s.y?r.y>a.y?r.y:a.y:s.y>a.y?s.y:a.y,c=lP(o,l,t,i,n),d=lP(u,h,t,i,n),p=e.prevZ,f=e.nextZ;for(;p&&p.z>=c&&f&&f.z<=d;){if(p!==e.prev&&p!==e.next&&lI(r.x,r.y,s.x,s.y,a.x,a.y,p.x,p.y)&&lF(p.prev,p,p.next)>=0||(p=p.prevZ,f!==e.prev&&f!==e.next&&lI(r.x,r.y,s.x,s.y,a.x,a.y,f.x,f.y)&&lF(f.prev,f,f.next)>=0))return!1;f=f.nextZ}for(;p&&p.z>=c;){if(p!==e.prev&&p!==e.next&&lI(r.x,r.y,s.x,s.y,a.x,a.y,p.x,p.y)&&lF(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;f&&f.z<=d;){if(f!==e.prev&&f!==e.next&&lI(r.x,r.y,s.x,s.y,a.x,a.y,f.x,f.y)&&lF(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function l1(e,t,i){let n=e;do{let r=n.prev,s=n.next.next;!lz(r,s)&&lO(r,n,n.next,s)&&l2(r,s)&&l2(s,r)&&(t.push(r.i/i),t.push(n.i/i),t.push(s.i/i),lk(n),lk(n.next),n=e=s),n=n.next}while(n!==e);return lM(n)}function l0(e,t,i,n,r,s){let a=e;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&lN(a,o)){let l=l3(a,o);a=lM(a,a.next),l=lM(l,l.next),lT(a,t,i,n,r,s),lT(l,t,i,n,r,s);return}o=o.next}a=a.next}while(a!==e)}function lC(e,t){return e.x-t.x}function lL(e,t){if(t=function(e,t){let i=t,n=e.x,r=e.y,s=-1/0,a;do{if(r<=i.y&&r>=i.next.y&&i.next.y!==i.y){let o=i.x+(r-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(o<=n&&o>s){if(s=o,o===n){if(r===i.y)return i;if(r===i.next.y)return i.next}a=i.x<i.next.x?i:i.next}}i=i.next}while(i!==t);if(!a)return null;if(n===s)return a;let l=a,u=a.x,h=a.y,c=1/0,d;i=a;do n>=i.x&&i.x>=u&&n!==i.x&&lI(r<h?n:s,r,u,h,r<h?s:n,r,i.x,i.y)&&(d=Math.abs(r-i.y)/(n-i.x),l2(i,e)&&(d<c||d===c&&(i.x>a.x||i.x===a.x&&lR(a,i)))&&(a=i,c=d)),i=i.next;while(i!==l);return a}(e,t)){let i=l3(t,e);lM(t,t.next),lM(i,i.next)}}function lR(e,t){return 0>lF(e.prev,e,t.prev)&&0>lF(t.next,e,e.next)}function lP(e,t,i,n,r){return(e=((e=((e=((e=((e=32767*(e-i)*r)|e<<8)&16711935)|e<<4)&252645135)|e<<2)&858993459)|e<<1)&1431655765)|(t=((t=((t=((t=((t=32767*(t-n)*r)|t<<8)&16711935)|t<<4)&252645135)|t<<2)&858993459)|t<<1)&1431655765)<<1}function lD(e){let t=e,i=e;do(t.x<i.x||t.x===i.x&&t.y<i.y)&&(i=t),t=t.next;while(t!==e);return i}function lI(e,t,i,n,r,s,a,o){return(r-a)*(t-o)-(e-a)*(s-o)>=0&&(e-a)*(n-o)-(i-a)*(t-o)>=0&&(i-a)*(s-o)-(r-a)*(n-o)>=0}function lN(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){let i=e;do{if(i.i!==e.i&&i.next.i!==e.i&&i.i!==t.i&&i.next.i!==t.i&&lO(i,i.next,e,t))return!0;i=i.next}while(i!==e);return!1}(e,t)&&(l2(e,t)&&l2(t,e)&&function(e,t){let i=e,n=!1,r=(e.x+t.x)/2,s=(e.y+t.y)/2;do i.y>s!=i.next.y>s&&i.next.y!==i.y&&r<(i.next.x-i.x)*(s-i.y)/(i.next.y-i.y)+i.x&&(n=!n),i=i.next;while(i!==e);return n}(e,t)&&(lF(e.prev,e,t.prev)||lF(e,t.prev,t))||lz(e,t)&&lF(e.prev,e,e.next)>0&&lF(t.prev,t,t.next)>0)}function lF(e,t,i){return(t.y-e.y)*(i.x-t.x)-(t.x-e.x)*(i.y-t.y)}function lz(e,t){return e.x===t.x&&e.y===t.y}function lO(e,t,i,n){let r=lU(lF(e,t,i)),s=lU(lF(e,t,n)),a=lU(lF(i,n,e)),o=lU(lF(i,n,t));return!!(r!==s&&a!==o||0===r&&lB(e,i,t)||0===s&&lB(e,n,t)||0===a&&lB(i,e,n)||0===o&&lB(i,t,n))}function lB(e,t,i){return t.x<=Math.max(e.x,i.x)&&t.x>=Math.min(e.x,i.x)&&t.y<=Math.max(e.y,i.y)&&t.y>=Math.min(e.y,i.y)}function lU(e){return e>0?1:e<0?-1:0}function l2(e,t){return 0>lF(e.prev,e,e.next)?lF(e,t,e.next)>=0&&lF(e,e.prev,t)>=0:0>lF(e,t,e.prev)||0>lF(e,e.next,t)}function l3(e,t){let i=new lV(e.i,e.x,e.y),n=new lV(t.i,t.x,t.y),r=e.next,s=t.prev;return e.next=t,t.prev=e,i.next=r,r.prev=i,n.next=i,i.prev=n,s.next=n,n.prev=s,n}function lG(e,t,i,n){let r=new lV(e,t,i);return n?(r.next=n.next,r.prev=n,n.next.prev=r,n.next=r):(r.prev=r,r.next=r),r}function lk(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function lV(e,t,i){this.i=e,this.x=t,this.y=i,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class lH{static area(e){let t=e.length,i=0;for(let n=t-1,r=0;r<t;n=r++)i+=e[n].x*e[r].y-e[r].x*e[n].y;return .5*i}static isClockWise(e){return 0>lH.area(e)}static triangulateShape(e,t){let i=[],n=[],r=[];l4(e),lW(i,e);let s=e.length;t.forEach(l4);for(let a=0;a<t.length;a++)n.push(s),s+=t[a].length,lW(i,t[a]);let o=lS.triangulate(i,n);for(let l=0;l<o.length;l+=3)r.push(o.slice(l,l+3));return r}}function l4(e){let t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function lW(e,t){for(let i=0;i<t.length;i++)e.push(t[i].x),e.push(t[i].y)}class l6 extends ra{constructor(e=new lb([new ic(.5,.5),new ic(-.5,.5),new ic(-.5,-.5),new ic(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];let i=this,n=[],r=[];for(let s=0,a=e.length;s<a;s++){let o=e[s];l(o)}function l(e){let s=[],a=void 0!==t.curveSegments?t.curveSegments:12,o=void 0!==t.steps?t.steps:1,l=void 0!==t.depth?t.depth:1,u=void 0===t.bevelEnabled||t.bevelEnabled,h=void 0!==t.bevelThickness?t.bevelThickness:.2,c=void 0!==t.bevelSize?t.bevelSize:h-.1,d=void 0!==t.bevelOffset?t.bevelOffset:0,p=void 0!==t.bevelSegments?t.bevelSegments:3,f=t.extrudePath,m=void 0!==t.UVGenerator?t.UVGenerator:l7,g,$=!1,x,v,y,_;f&&(g=f.getSpacedPoints(o),$=!0,u=!1,x=f.computeFrenetFrames(o,!1),v=new iU,y=new iU,_=new iU),u||(p=0,h=0,c=0,d=0);let b=e.extractPoints(a),S=b.shape,w=b.holes,M=!lH.isClockWise(S);if(M){S=S.reverse();for(let T=0,E=w.length;T<E;T++){let A=w[T];lH.isClockWise(A)&&(w[T]=A.reverse())}}let C=lH.triangulateShape(S,w),L=S;for(let R=0,P=w.length;R<P;R++){let D=w[R];S=S.concat(D)}function I(e,t,i){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(i).add(e)}let N=S.length,F=C.length;function z(e,t,i){let n,r,s,a=e.x-t.x,o=e.y-t.y,l=i.x-e.x,u=i.y-e.y,h=a*a+o*o;if(Math.abs(a*u-o*l)>Number.EPSILON){let c=Math.sqrt(h),d=Math.sqrt(l*l+u*u),p=t.x-o/c,f=t.y+a/c,m=i.x-u/d,g=i.y+l/d,$=((m-p)*u-(g-f)*l)/(a*u-o*l);n=p+a*$-e.x,r=f+o*$-e.y;let x=n*n+r*r;if(x<=2)return new ic(n,r);s=Math.sqrt(x/2)}else{let v=!1;a>Number.EPSILON?l>Number.EPSILON&&(v=!0):a<-Number.EPSILON?l<-Number.EPSILON&&(v=!0):Math.sign(o)===Math.sign(u)&&(v=!0),v?(n=-o,r=a,s=Math.sqrt(h)):(n=a,r=o,s=Math.sqrt(h/2))}return new ic(n/s,r/s)}let O=[];for(let B=0,U=L.length,G=U-1,k=B+1;B<U;B++,G++,k++)G===U&&(G=0),k===U&&(k=0),O[B]=z(L[B],L[G],L[k]);let V=[],H,W=O.concat();for(let j=0,q=w.length;j<q;j++){let X=w[j];H=[];for(let Y=0,Z=X.length,J=Z-1,K=Y+1;Y<Z;Y++,J++,K++)J===Z&&(J=0),K===Z&&(K=0),H[Y]=z(X[Y],X[J],X[K]);V.push(H),W=W.concat(H)}for(let Q=0;Q<p;Q++){let ee=Q/p,et=h*Math.cos(ee*Math.PI/2),ei=c*Math.sin(ee*Math.PI/2)+d;for(let en=0,er=L.length;en<er;en++){let es=I(L[en],O[en],ei);eC(es.x,es.y,-et)}for(let ea=0,eo=w.length;ea<eo;ea++){let el=w[ea];H=V[ea];for(let eu=0,eh=el.length;eu<eh;eu++){let ec=I(el[eu],H[eu],ei);eC(ec.x,ec.y,-et)}}}let ed=c+d;for(let ep=0;ep<N;ep++){let ef=u?I(S[ep],W[ep],ed):S[ep];$?(y.copy(x.normals[0]).multiplyScalar(ef.x),v.copy(x.binormals[0]).multiplyScalar(ef.y),_.copy(g[0]).add(y).add(v),eC(_.x,_.y,_.z)):eC(ef.x,ef.y,0)}for(let em=1;em<=o;em++)for(let eg=0;eg<N;eg++){let e$=u?I(S[eg],W[eg],ed):S[eg];$?(y.copy(x.normals[em]).multiplyScalar(e$.x),v.copy(x.binormals[em]).multiplyScalar(e$.y),_.copy(g[em]).add(y).add(v),eC(_.x,_.y,_.z)):eC(e$.x,e$.y,l/o*em)}for(let ex=p-1;ex>=0;ex--){let ev=ex/p,e8=h*Math.cos(ev*Math.PI/2),ey=c*Math.sin(ev*Math.PI/2)+d;for(let e_=0,eb=L.length;e_<eb;e_++){let eS=I(L[e_],O[e_],ey);eC(eS.x,eS.y,l+e8)}for(let ew=0,eM=w.length;ew<eM;ew++){let eT=w[ew];H=V[ew];for(let eE=0,eA=eT.length;eE<eA;eE++){let e1=I(eT[eE],H[eE],ey);$?eC(e1.x,e1.y+g[o-1].y,g[o-1].x+e8):eC(e1.x,e1.y,l+e8)}}}function e0(e,t){let i=e.length;for(;--i>=0;){let n=i,r=i-1;r<0&&(r=e.length-1);for(let s=0,a=o+2*p;s<a;s++){let l=N*s,u=N*(s+1),h=t+n+l,c=t+r+l,d=t+r+u,f=t+n+u;eR(h,c,d,f)}}}function eC(e,t,i){s.push(e),s.push(t),s.push(i)}function eL(e,t,r){eP(e),eP(t),eP(r);let s=n.length/3,a=m.generateTopUV(i,n,s-3,s-2,s-1);eD(a[0]),eD(a[1]),eD(a[2])}function eR(e,t,r,s){eP(e),eP(t),eP(s),eP(t),eP(r),eP(s);let a=n.length/3,o=m.generateSideWallUV(i,n,a-6,a-3,a-2,a-1);eD(o[0]),eD(o[1]),eD(o[3]),eD(o[1]),eD(o[2]),eD(o[3])}function eP(e){n.push(s[3*e+0]),n.push(s[3*e+1]),n.push(s[3*e+2])}function eD(e){r.push(e.x),r.push(e.y)}(function(){let e=n.length/3;if(u){let t=0,r=N*t;for(let s=0;s<F;s++){let a=C[s];eL(a[2]+r,a[1]+r,a[0]+r)}r=N*(t=o+2*p);for(let l=0;l<F;l++){let h=C[l];eL(h[0]+r,h[1]+r,h[2]+r)}}else{for(let c=0;c<F;c++){let d=C[c];eL(d[2],d[1],d[0])}for(let f=0;f<F;f++){let m=C[f];eL(m[0]+N*o,m[1]+N*o,m[2]+N*o)}}i.addGroup(e,n.length/3-e,0)})(),function(){let e=n.length/3,t=0;e0(L,t),t+=L.length;for(let r=0,s=w.length;r<s;r++){let a=w[r];e0(a,t),t+=a.length}i.addGroup(e,n.length/3-e,1)}()}this.setAttribute("position",new nK(n,3)),this.setAttribute("uv",new nK(r,2)),this.computeVertexNormals()}toJSON(){let e=super.toJSON(),t=this.parameters.shapes,i=this.parameters.options;return function(e,t,i){if(i.shapes=[],Array.isArray(e))for(let n=0,r=e.length;n<r;n++){let s=e[n];i.shapes.push(s.uuid)}else i.shapes.push(e.uuid);return i.options=Object.assign({},t),void 0!==t.extrudePath&&(i.options.extrudePath=t.extrudePath.toJSON()),i}(t,i,e)}static fromJSON(e,t){let i=[];for(let n=0,r=e.shapes.length;n<r;n++){let s=t[e.shapes[n]];i.push(s)}let a=e.options.extrudePath;return void 0!==a&&(e.options.extrudePath=new ll[a.type]().fromJSON(a)),new l6(i,e.options)}}let l7={generateTopUV:function(e,t,i,n,r){let s=t[3*i],a=t[3*i+1],o=t[3*n],l=t[3*n+1],u=t[3*r],h=t[3*r+1];return[new ic(s,a),new ic(o,l),new ic(u,h)]},generateSideWallUV:function(e,t,i,n,r,s){let a=t[3*i],o=t[3*i+1],l=t[3*i+2],u=t[3*n],h=t[3*n+1],c=t[3*n+2],d=t[3*r],p=t[3*r+1],f=t[3*r+2],m=t[3*s],g=t[3*s+1],$=t[3*s+2];return Math.abs(o-h)<Math.abs(a-u)?[new ic(a,1-l),new ic(u,1-c),new ic(d,1-f),new ic(m,1-$)]:[new ic(o,1-l),new ic(h,1-c),new ic(p,1-f),new ic(g,1-$)]}};class l5 extends lg{constructor(e=1,t=0){let i=(1+Math.sqrt(5))/2;super([-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new l5(e.radius,e.detail)}}class lj extends lg{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new lj(e.radius,e.detail)}}class lq extends ra{constructor(e=.5,t=1,i=8,n=1,r=0,s=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:s},i=Math.max(3,i),n=Math.max(1,n);let a=[],o=[],l=[],u=[],h=e,c=(t-e)/n,d=new iU,p=new ic;for(let f=0;f<=n;f++){for(let m=0;m<=i;m++){let g=r+m/i*s;d.x=h*Math.cos(g),d.y=h*Math.sin(g),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,u.push(p.x,p.y)}h+=c}for(let $=0;$<n;$++){let x=$*(i+1);for(let v=0;v<i;v++){let y=v+x,_=y,b=y+i+1,S=y+i+2,w=y+1;a.push(_,b,w),a.push(b,S,w)}}this.setIndex(a),this.setAttribute("position",new nK(o,3)),this.setAttribute("normal",new nK(l,3)),this.setAttribute("uv",new nK(u,2))}static fromJSON(e){return new lq(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class lX extends ra{constructor(e=new lb([new ic(0,.5),new ic(-.5,-.5),new ic(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};let i=[],n=[],r=[],s=[],a=0,o=0;if(!1===Array.isArray(e))u(e);else for(let l=0;l<e.length;l++)u(e[l]),this.addGroup(a,o,l),a+=o,o=0;function u(e){let a=n.length/3,l=e.extractPoints(t),u=l.shape,h=l.holes;!1===lH.isClockWise(u)&&(u=u.reverse());for(let c=0,d=h.length;c<d;c++){let p=h[c];!0===lH.isClockWise(p)&&(h[c]=p.reverse())}let f=lH.triangulateShape(u,h);for(let m=0,g=h.length;m<g;m++){let $=h[m];u=u.concat($)}for(let x=0,v=u.length;x<v;x++){let y=u[x];n.push(y.x,y.y,0),r.push(0,0,1),s.push(y.x,y.y)}for(let _=0,b=f.length;_<b;_++){let S=f[_],w=S[0]+a,M=S[1]+a,T=S[2]+a;i.push(w,M,T),o+=3}}this.setIndex(i),this.setAttribute("position",new nK(n,3)),this.setAttribute("normal",new nK(r,3)),this.setAttribute("uv",new nK(s,2))}toJSON(){let e=super.toJSON(),t=this.parameters.shapes;return function(e,t){if(t.shapes=[],Array.isArray(e))for(let i=0,n=e.length;i<n;i++){let r=e[i];t.shapes.push(r.uuid)}else t.shapes.push(e.uuid);return t}(t,e)}static fromJSON(e,t){let i=[];for(let n=0,r=e.shapes.length;n<r;n++){let s=t[e.shapes[n]];i.push(s)}return new lX(i,e.curveSegments)}}class lY extends ra{constructor(e=1,t=32,i=16,n=0,r=2*Math.PI,s=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:r,thetaStart:s,thetaLength:a},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));let o=Math.min(s+a,Math.PI),l=0,u=[],h=new iU,c=new iU,d=[],p=[],f=[],m=[];for(let g=0;g<=i;g++){let $=[],x=g/i,v=0;0==g&&0==s?v=.5/t:g==i&&o==Math.PI&&(v=-.5/t);for(let y=0;y<=t;y++){let _=y/t;h.x=-e*Math.cos(n+_*r)*Math.sin(s+x*a),h.y=e*Math.cos(s+x*a),h.z=e*Math.sin(n+_*r)*Math.sin(s+x*a),p.push(h.x,h.y,h.z),c.copy(h).normalize(),f.push(c.x,c.y,c.z),m.push(_+v,1-x),$.push(l++)}u.push($)}for(let b=0;b<i;b++)for(let S=0;S<t;S++){let w=u[b][S+1],M=u[b][S],T=u[b+1][S],E=u[b+1][S+1];(0!==b||s>0)&&d.push(w,M,E),(b!==i-1||o<Math.PI)&&d.push(M,T,E)}this.setIndex(d),this.setAttribute("position",new nK(p,3)),this.setAttribute("normal",new nK(f,3)),this.setAttribute("uv",new nK(m,2))}static fromJSON(e){return new lY(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class lZ extends lg{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new lZ(e.radius,e.detail)}}class lJ extends ra{constructor(e=1,t=.4,i=8,n=6,r=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:n,arc:r},i=Math.floor(i),n=Math.floor(n);let s=[],a=[],o=[],l=[],u=new iU,h=new iU,c=new iU;for(let d=0;d<=i;d++)for(let p=0;p<=n;p++){let f=p/n*r,m=d/i*Math.PI*2;h.x=(e+t*Math.cos(m))*Math.cos(f),h.y=(e+t*Math.cos(m))*Math.sin(f),h.z=t*Math.sin(m),a.push(h.x,h.y,h.z),u.x=e*Math.cos(f),u.y=e*Math.sin(f),c.subVectors(h,u).normalize(),o.push(c.x,c.y,c.z),l.push(p/n),l.push(d/i)}for(let g=1;g<=i;g++)for(let $=1;$<=n;$++){let x=(n+1)*g+$-1,v=(n+1)*(g-1)+$-1,y=(n+1)*(g-1)+$,_=(n+1)*g+$;s.push(x,v,_),s.push(v,y,_)}this.setIndex(s),this.setAttribute("position",new nK(a,3)),this.setAttribute("normal",new nK(o,3)),this.setAttribute("uv",new nK(l,2))}static fromJSON(e){return new lJ(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class lK extends ra{constructor(e=1,t=.4,i=64,n=8,r=2,s=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:n,p:r,q:s},i=Math.floor(i),n=Math.floor(n);let a=[],o=[],l=[],u=[],h=new iU,c=new iU,d=new iU,p=new iU,f=new iU,m=new iU,g=new iU;for(let $=0;$<=i;++$){let x=$/i*r*Math.PI*2;C(x,r,s,e,d),C(x+.01,r,s,e,p),m.subVectors(p,d),g.addVectors(p,d),f.crossVectors(m,g),g.crossVectors(f,m),f.normalize(),g.normalize();for(let v=0;v<=n;++v){let y=v/n*Math.PI*2,_=-t*Math.cos(y),b=t*Math.sin(y);h.x=d.x+(_*g.x+b*f.x),h.y=d.y+(_*g.y+b*f.y),h.z=d.z+(_*g.z+b*f.z),o.push(h.x,h.y,h.z),c.subVectors(h,d).normalize(),l.push(c.x,c.y,c.z),u.push($/i),u.push(v/n)}}for(let S=1;S<=i;S++)for(let w=1;w<=n;w++){let M=(n+1)*(S-1)+(w-1),T=(n+1)*S+(w-1),E=(n+1)*S+w,A=(n+1)*(S-1)+w;a.push(M,T,A),a.push(T,E,A)}function C(e,t,i,n,r){let s=i/t*e,a=Math.cos(s);r.x=n*(2+a)*.5*Math.cos(e),r.y=n*(2+a)*Math.sin(e)*.5,r.z=n*Math.sin(s)*.5}this.setIndex(a),this.setAttribute("position",new nK(o,3)),this.setAttribute("normal",new nK(l,3)),this.setAttribute("uv",new nK(u,2))}static fromJSON(e){return new lK(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class l9 extends ra{constructor(e=new la(new iU(-1,-1,0),new iU(-1,1,0),new iU(1,1,0)),t=64,i=1,n=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:n,closed:r};let s=e.computeFrenetFrames(t,r);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;let a=new iU,o=new iU,l=new ic,u=new iU,h=[],c=[],d=[],p=[];function f(r){u=e.getPointAt(r/t,u);let l=s.normals[r],d=s.binormals[r];for(let p=0;p<=n;p++){let f=p/n*Math.PI*2,m=Math.sin(f),g=-Math.cos(f);o.x=g*l.x+m*d.x,o.y=g*l.y+m*d.y,o.z=g*l.z+m*d.z,o.normalize(),c.push(o.x,o.y,o.z),a.x=u.x+i*o.x,a.y=u.y+i*o.y,a.z=u.z+i*o.z,h.push(a.x,a.y,a.z)}}(function(){for(let e=0;e<t;e++)f(e);f(!1===r?t:0),function(){for(let e=0;e<=t;e++)for(let i=0;i<=n;i++)l.x=e/t,l.y=i/n,d.push(l.x,l.y)}(),function(){for(let e=1;e<=t;e++)for(let i=1;i<=n;i++){let r=(n+1)*(e-1)+(i-1),s=(n+1)*e+(i-1),a=(n+1)*e+i,o=(n+1)*(e-1)+i;p.push(r,s,o),p.push(s,a,o)}}()})(),this.setIndex(p),this.setAttribute("position",new nK(h,3)),this.setAttribute("normal",new nK(c,3)),this.setAttribute("uv",new nK(d,2))}toJSON(){let e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new l9(new ll[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class lQ extends ra{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},null!==e){let t=[],i=new Set,n=new iU,r=new iU;if(null!==e.index){let s=e.attributes.position,a=e.index,o=e.groups;0===o.length&&(o=[{start:0,count:a.count,materialIndex:0}]);for(let l=0,u=o.length;l<u;++l){let h=o[l],c=h.start,d=h.count;for(let p=c,f=c+d;p<f;p+=3)for(let m=0;m<3;m++){let g=a.getX(p+m),$=a.getX(p+(m+1)%3);n.fromBufferAttribute(s,g),r.fromBufferAttribute(s,$),!0===ue(n,r,i)&&(t.push(n.x,n.y,n.z),t.push(r.x,r.y,r.z))}}}else{let x=e.attributes.position;for(let v=0,y=x.count/3;v<y;v++)for(let _=0;_<3;_++){let b=3*v+_,S=3*v+(_+1)%3;n.fromBufferAttribute(x,b),r.fromBufferAttribute(x,S),!0===ue(n,r,i)&&(t.push(n.x,n.y,n.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new nK(t,3))}}}function ue(e,t,i){let n=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`,r=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`;return!0!==i.has(n)&&!0!==i.has(r)&&(i.add(n),i.add(r),!0)}var ut=Object.freeze({__proto__:null,BoxGeometry:rM,CapsuleGeometry:ld,CircleGeometry:lp,ConeGeometry:lm,CylinderGeometry:lf,DodecahedronGeometry:l$,EdgesGeometry:l_,ExtrudeGeometry:l6,IcosahedronGeometry:l5,LatheGeometry:lc,OctahedronGeometry:lj,PlaneGeometry:r3,PolyhedronGeometry:lg,RingGeometry:lq,ShapeGeometry:lX,SphereGeometry:lY,TetrahedronGeometry:lZ,TorusGeometry:lJ,TorusKnotGeometry:lK,TubeGeometry:l9,WireframeGeometry:lQ});class ui extends nV{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new iE(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class un extends r1{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class ur extends nV{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new iE(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new iE(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tS,this.normalScale=new ic(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class us extends ur{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ic(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return tQ(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new iE(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new iE(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new iE(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class ua extends nV{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new iE(16777215),this.specular=new iE(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new iE(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tS,this.normalScale=new ic(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=q,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class uo extends nV{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new iE(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new iE(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tS,this.normalScale=new ic(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class ul extends nV{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tS,this.normalScale=new ic(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class uu extends nV{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new iE(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new iE(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tS,this.normalScale=new ic(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=q,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class uh extends nV{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new iE(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=tS,this.normalScale=new ic(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class uc extends o0{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function ud(e,t,i){return uf(e)?new e.constructor(e.subarray(t,void 0!==i?i:e.length)):e.slice(t,i)}function up(e,t,i){return e&&(i||e.constructor!==t)?"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e):e}function uf(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}function um(e){let t=e.length,i=Array(t);for(let n=0;n!==t;++n)i[n]=n;return i.sort(function(t,i){return e[t]-e[i]}),i}function ug(e,t,i){let n=e.length,r=new e.constructor(n);for(let s=0,a=0;a!==n;++s){let o=i[s]*t;for(let l=0;l!==t;++l)r[a++]=e[o+l]}return r}function u$(e,t,i,n){let r=1,s=e[0];for(;void 0!==s&&void 0===s[n];)s=e[r++];if(void 0===s)return;let a=s[n];if(void 0!==a){if(Array.isArray(a))do void 0!==(a=s[n])&&(t.push(s.time),i.push.apply(i,a)),s=e[r++];while(void 0!==s);else if(void 0!==a.toArray)do void 0!==(a=s[n])&&(t.push(s.time),a.toArray(i,i.length)),s=e[r++];while(void 0!==s);else do void 0!==(a=s[n])&&(t.push(s.time),i.push(a)),s=e[r++];while(void 0!==s)}}var ux=Object.freeze({__proto__:null,arraySlice:ud,convertArray:up,isTypedArray:uf,getKeyframeOrder:um,sortedArray:ug,flattenJSON:u$,subclip:function(e,t,i,n,r=30){let s=e.clone();s.name=t;let a=[];for(let o=0;o<s.tracks.length;++o){let l=s.tracks[o],u=l.getValueSize(),h=[],c=[];for(let d=0;d<l.times.length;++d){let p=l.times[d]*r;if(!(p<i)&&!(p>=n)){h.push(l.times[d]);for(let f=0;f<u;++f)c.push(l.values[d*u+f])}}0!==h.length&&(l.times=up(h,l.times.constructor),l.values=up(c,l.values.constructor),a.push(l))}s.tracks=a;let m=1/0;for(let g=0;g<s.tracks.length;++g)m>s.tracks[g].times[0]&&(m=s.tracks[g].times[0]);for(let $=0;$<s.tracks.length;++$)s.tracks[$].shift(-1*m);return s.resetDuration(),s},makeClipAdditive:function(e,t=0,i=e,n=30){n<=0&&(n=30);let r=i.tracks.length,s=t/n;for(let a=0;a<r;++a){let o=i.tracks[a],l=o.ValueTypeName;if("bool"===l||"string"===l)continue;let u=e.tracks.find(function(e){return e.name===o.name&&e.ValueTypeName===l});if(void 0===u)continue;let h=0,c=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=c/3);let d=0,p=u.getValueSize();u.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=p/3);let f=o.times.length-1,m;if(s<=o.times[0]){let g=h,$=c-h;m=ud(o.values,g,$)}else if(s>=o.times[f]){let x=f*c+h,v=x+c-h;m=ud(o.values,x,v)}else{let y=o.createInterpolant(),_=h,b=c-h;y.evaluate(s),m=ud(y.resultBuffer,_,b)}if("quaternion"===l){let S=new iB().fromArray(m).normalize().conjugate();S.toArray(m)}let w=u.times.length;for(let M=0;M<w;++M){let T=M*p+d;if("quaternion"===l)iB.multiplyQuaternionsFlat(u.values,T,m,0,u.values,T);else{let E=p-2*d;for(let A=0;A<E;++A)u.values[T+A]-=m[A]}}}return e.blendMode=tg,e}});class uv{constructor(e,t,i,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){let t=this.parameterPositions,i=this._cachedIndex,n=t[i],r=t[i-1];validate_interval:{seek:{let s;linear_scan:{forward_scan:if(!(e<n)){for(let a=i+2;;){if(void 0===n){if(e<r)break forward_scan;return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===a)break;if(r=n,e<(n=t[++i]))break seek}s=t.length;break linear_scan}if(!(e>=r)){let o=t[1];e<o&&(i=2,r=o);for(let l=i-2;;){if(void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(i===l)break;if(n=r,e>=(r=t[--i-1]))break seek}s=i,i=0;break linear_scan}break validate_interval}for(;i<s;){let u=i+s>>>1;e<t[u]?s=u:i=u+1}if(n=t[i],void 0===(r=t[i-1]))return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===n)return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,r,n)}return this.interpolate_(i,r,e,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){let t=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=e*n;for(let s=0;s!==n;++s)t[s]=i[r+s];return t}interpolate_(){throw Error("call to abstract method")}intervalChanged_(){}}class u8 extends uv{constructor(e,t,i,n){super(e,t,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:td,endingEnd:td}}intervalChanged_(e,t,i){let n=this.parameterPositions,r=e-2,s=e+1,a=n[r],o=n[s];if(void 0===a)switch(this.getSettings_().endingStart){case tp:r=e,a=2*t-i;break;case tf:a=t+n[r=n.length-2]-n[r+1];break;default:r=e,a=i}if(void 0===o)switch(this.getSettings_().endingEnd){case tp:s=e,o=2*i-t;break;case tf:s=1,o=i+n[1]-n[0];break;default:s=e-1,o=t}let l=(i-t)*.5,u=this.valueSize;this._weightPrev=l/(t-a),this._weightNext=l/(o-i),this._offsetPrev=r*u,this._offsetNext=s*u}interpolate_(e,t,i,n){let r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=e*a,l=o-a,u=this._offsetPrev,h=this._offsetNext,c=this._weightPrev,d=this._weightNext,p=(i-t)/(n-t),f=p*p,m=f*p,g=-c*m+2*c*f-c*p,$=(1+c)*m+(-1.5-2*c)*f+(-.5+c)*p+1,x=(-1-d)*m+(1.5+d)*f+.5*p,v=d*m-d*f;for(let y=0;y!==a;++y)r[y]=g*s[u+y]+$*s[l+y]+x*s[o+y]+v*s[h+y];return r}}class uy extends uv{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){let r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=e*a,l=o-a,u=(i-t)/(n-t),h=1-u;for(let c=0;c!==a;++c)r[c]=s[l+c]*h+s[o+c]*u;return r}}class u_ extends uv{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e){return this.copySampleValue_(e-1)}}class ub{constructor(e,t,i,n){if(void 0===e)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=up(t,this.TimeBufferType),this.values=up(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(e){let t=e.constructor,i;if(t.toJSON!==this.toJSON)i=t.toJSON(e);else{i={name:e.name,times:up(e.times,Array),values:up(e.values,Array)};let n=e.getInterpolation();n!==e.DefaultInterpolation&&(i.interpolation=n)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new u_(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new uy(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new u8(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case tu:t=this.InterpolantFactoryMethodDiscrete;break;case th:t=this.InterpolantFactoryMethodLinear;break;case tc:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){let i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(i)}return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return tu;case this.InterpolantFactoryMethodLinear:return th;case this.InterpolantFactoryMethodSmooth:return tc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){let t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]+=e}return this}scale(e){if(1!==e){let t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]*=e}return this}trim(e,t){let i=this.times,n=i.length,r=0,s=n-1;for(;r!==n&&i[r]<e;)++r;for(;-1!==s&&i[s]>t;)--s;if(++s,0!==r||s!==n){r>=s&&(r=(s=Math.max(s,1))-1);let a=this.getValueSize();this.times=ud(i,r,s),this.values=ud(this.values,r*a,s*a)}return this}validate(){let e=!0,t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);let i=this.times,n=this.values,r=i.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let s=null;for(let a=0;a!==r;a++){let o=i[a];if("number"==typeof o&&isNaN(o)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,o),e=!1;break}if(null!==s&&s>o){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,o,s),e=!1;break}s=o}if(void 0!==n&&uf(n))for(let l=0,u=n.length;l!==u;++l){let h=n[l];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,l,h),e=!1;break}}return e}optimize(){let e=ud(this.times),t=ud(this.values),i=this.getValueSize(),n=this.getInterpolation()===tc,r=e.length-1,s=1;for(let a=1;a<r;++a){let o=!1,l=e[a],u=e[a+1];if(l!==u&&(1!==a||l!==e[0])){if(n)o=!0;else{let h=a*i,c=h-i,d=h+i;for(let p=0;p!==i;++p){let f=t[h+p];if(f!==t[c+p]||f!==t[d+p]){o=!0;break}}}}if(o){if(a!==s){e[s]=e[a];let m=a*i,g=s*i;for(let $=0;$!==i;++$)t[g+$]=t[m+$]}++s}}if(r>0){e[s]=e[r];for(let x=r*i,v=s*i,y=0;y!==i;++y)t[v+y]=t[x+y];++s}return s!==e.length?(this.times=ud(e,0,s),this.values=ud(t,0,s*i)):(this.times=e,this.values=t),this}clone(){let e=ud(this.times,0),t=ud(this.values,0),i=this.constructor,n=new i(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}ub.prototype.TimeBufferType=Float32Array,ub.prototype.ValueBufferType=Float32Array,ub.prototype.DefaultInterpolation=th;class uS extends ub{}uS.prototype.ValueTypeName="bool",uS.prototype.ValueBufferType=Array,uS.prototype.DefaultInterpolation=tu,uS.prototype.InterpolantFactoryMethodLinear=void 0,uS.prototype.InterpolantFactoryMethodSmooth=void 0;class uw extends ub{}uw.prototype.ValueTypeName="color";class uM extends ub{}uM.prototype.ValueTypeName="number";class uT extends uv{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){let r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=(i-t)/(n-t),l=e*a;for(let u=l+a;l!==u;l+=4)iB.slerpFlat(r,0,s,l-a,s,l,o);return r}}class uE extends ub{InterpolantFactoryMethodLinear(e){return new uT(this.times,this.values,this.getValueSize(),e)}}uE.prototype.ValueTypeName="quaternion",uE.prototype.DefaultInterpolation=th,uE.prototype.InterpolantFactoryMethodSmooth=void 0;class uA extends ub{}uA.prototype.ValueTypeName="string",uA.prototype.ValueBufferType=Array,uA.prototype.DefaultInterpolation=tu,uA.prototype.InterpolantFactoryMethodLinear=void 0,uA.prototype.InterpolantFactoryMethodSmooth=void 0;class u1 extends ub{}u1.prototype.ValueTypeName="vector";class u0{constructor(e,t=-1,i,n=tm){this.name=e,this.tracks=i,this.duration=t,this.blendMode=n,this.uuid=t9(),this.duration<0&&this.resetDuration()}static parse(e){let t=[],i=e.tracks,n=1/(e.fps||1);for(let r=0,s=i.length;r!==s;++r)t.push(uC(i[r]).scale(n));let a=new this(e.name,e.duration,t,e.blendMode);return a.uuid=e.uuid,a}static toJSON(e){let t=[],i=e.tracks,n={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,s=i.length;r!==s;++r)t.push(ub.toJSON(i[r]));return n}static CreateFromMorphTargetSequence(e,t,i,n){let r=t.length,s=[];for(let a=0;a<r;a++){let o=[],l=[];o.push((a+r-1)%r,a,(a+1)%r),l.push(0,1,0);let u=um(o);o=ug(o,1,u),l=ug(l,1,u),n||0!==o[0]||(o.push(r),l.push(l[0])),s.push(new uM(".morphTargetInfluences["+t[a].name+"]",o,l).scale(1/i))}return new this(e,-1,s)}static findByName(e,t){let i=e;if(!Array.isArray(e)){let n=e;i=n.geometry&&n.geometry.animations||n.animations}for(let r=0;r<i.length;r++)if(i[r].name===t)return i[r];return null}static CreateClipsFromMorphTargetSequences(e,t,i){let n={},r=/^([\w-]*?)([\d]+)$/;for(let s=0,a=e.length;s<a;s++){let o=e[s],l=o.name.match(r);if(l&&l.length>1){let u=l[1],h=n[u];h||(n[u]=h=[]),h.push(o)}}let c=[];for(let d in n)c.push(this.CreateFromMorphTargetSequence(d,n[d],t,i));return c}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;let i=function(e,t,i,n,r){if(0!==i.length){let s=[],a=[];u$(i,s,a,n),0!==s.length&&r.push(new e(t,s,a))}},n=[],r=e.name||"default",s=e.fps||30,a=e.blendMode,o=e.length||-1,l=e.hierarchy||[];for(let u=0;u<l.length;u++){let h=l[u].keys;if(h&&0!==h.length){if(h[0].morphTargets){let c={},d;for(d=0;d<h.length;d++)if(h[d].morphTargets)for(let p=0;p<h[d].morphTargets.length;p++)c[h[d].morphTargets[p]]=-1;for(let f in c){let m=[],g=[];for(let $=0;$!==h[d].morphTargets.length;++$){let x=h[d];m.push(x.time),g.push(x.morphTarget===f?1:0)}n.push(new uM(".morphTargetInfluence["+f+"]",m,g))}o=c.length*s}else{let v=".bones["+t[u].name+"]";i(u1,v+".position",h,"pos",n),i(uE,v+".quaternion",h,"rot",n),i(u1,v+".scale",h,"scl",n)}}}if(0===n.length)return null;let y=new this(r,o,n,a);return y}resetDuration(){let e=this.tracks,t=0;for(let i=0,n=e.length;i!==n;++i){let r=this.tracks[i];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){let e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function uC(e){if(void 0===e.type)throw Error("THREE.KeyframeTrack: track type undefined, can not parse");let t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return uM;case"vector":case"vector2":case"vector3":case"vector4":return u1;case"color":return uw;case"quaternion":return uE;case"bool":case"boolean":return uS;case"string":return uA}throw Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){let i=[],n=[];u$(e.keys,i,n,"value"),e.times=i,e.values=n}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}let uL={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class uR{constructor(e,t,i){let n=this,r=!1,s=0,a=0,o,l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(e){a++,!1===r&&void 0!==n.onStart&&n.onStart(e,s,a),r=!0},this.itemEnd=function(e){s++,void 0!==n.onProgress&&n.onProgress(e,s,a),s===a&&(r=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(e){void 0!==n.onError&&n.onError(e)},this.resolveURL=function(e){return o?o(e):e},this.setURLModifier=function(e){return o=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){let t=l.indexOf(e);return -1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,i=l.length;t<i;t+=2){let n=l[t],r=l[t+1];if(n.global&&(n.lastIndex=0),n.test(e))return r}return null}}}let uP=new uR;class uD{constructor(e){this.manager=void 0!==e?e:uP,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){let i=this;return new Promise(function(n,r){i.load(e,n,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}let uI={};class uN extends Error{constructor(e,t){super(e),this.response=t}}class uF extends uD{constructor(e){super(e)}load(e,t,i,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let r=uL.get(e);if(void 0!==r)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(void 0!==uI[e]){uI[e].push({onLoad:t,onProgress:i,onError:n});return}uI[e]=[],uI[e].push({onLoad:t,onProgress:i,onError:n});let s=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,o=this.responseType;fetch(s).then(t=>{if(200===t.status||0===t.status){if(0===t.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===t.body||void 0===t.body.getReader)return t;let i=uI[e],n=t.body.getReader(),r=t.headers.get("Content-Length"),s=r?parseInt(r):0,a=0!==s,o=0,l=new ReadableStream({start(e){(function t(){n.read().then(({done:n,value:r})=>{if(n)e.close();else{o+=r.byteLength;let l=new ProgressEvent("progress",{lengthComputable:a,loaded:o,total:s});for(let u=0,h=i.length;u<h;u++){let c=i[u];c.onProgress&&c.onProgress(l)}e.enqueue(r),t()}})})()}});return new Response(l)}throw new uN(`fetch for "${t.url}" responded with ${t.status}: ${t.statusText}`,t)}).then(e=>{switch(o){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then(e=>{let t=new DOMParser;return t.parseFromString(e,a)});case"json":return e.json();default:if(void 0===a)return e.text();{let t=/charset="?([^;"\s]*)"?/i.exec(a),i=t&&t[1]?t[1].toLowerCase():void 0,n=new TextDecoder(i);return e.arrayBuffer().then(e=>n.decode(e))}}}).then(t=>{uL.add(e,t);let i=uI[e];delete uI[e];for(let n=0,r=i.length;n<r;n++){let s=i[n];s.onLoad&&s.onLoad(t)}}).catch(t=>{let i=uI[e];if(void 0===i)throw this.manager.itemError(e),t;delete uI[e];for(let n=0,r=i.length;n<r;n++){let s=i[n];s.onError&&s.onError(t)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class uz extends uD{constructor(e){super(e)}load(e,t,i,n){let r=this,s=new uF(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(i){try{t(r.parse(JSON.parse(i)))}catch(s){n?n(s):console.error(s),r.manager.itemError(e)}},i,n)}parse(e){let t=[];for(let i=0;i<e.length;i++){let n=u0.parse(e[i]);t.push(n)}return t}}class uO extends uD{constructor(e){super(e)}load(e,t,i,n){let r=this,s=[],a=new oW,o=new uF(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(r.withCredentials);let l=0;function u(u){o.load(e[u],function(e){let i=r.parse(e,!0);s[u]={width:i.width,height:i.height,format:i.format,mipmaps:i.mipmaps},6===(l+=1)&&(1===i.mipmapCount&&(a.minFilter=eg),a.image=s,a.format=i.format,a.needsUpdate=!0,t&&t(a))},i,n)}if(Array.isArray(e))for(let h=0,c=e.length;h<c;++h)u(h);else o.load(e,function(e){let i=r.parse(e,!0);if(i.isCubemap){let n=i.mipmaps.length/i.mipmapCount;for(let o=0;o<n;o++){s[o]={mipmaps:[]};for(let l=0;l<i.mipmapCount;l++)s[o].mipmaps.push(i.mipmaps[o*i.mipmapCount+l]),s[o].format=i.format,s[o].width=i.width,s[o].height=i.height}a.image=s}else a.image.width=i.width,a.image.height=i.height,a.mipmaps=i.mipmaps;1===i.mipmapCount&&(a.minFilter=eg),a.format=i.format,a.needsUpdate=!0,t&&t(a)},i,n);return a}}class uB extends uD{constructor(e){super(e)}load(e,t,i,n){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let r=this,s=uL.get(e);if(void 0!==s)return r.manager.itemStart(e),setTimeout(function(){t&&t(s),r.manager.itemEnd(e)},0),s;let a=i$("img");function o(){u(),uL.add(e,this),t&&t(this),r.manager.itemEnd(e)}function l(t){u(),n&&n(t),r.manager.itemError(e),r.manager.itemEnd(e)}function u(){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1)}return a.addEventListener("load",o,!1),a.addEventListener("error",l,!1),"data:"!==e.slice(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(e),a.src=e,a}}class uU extends uD{constructor(e){super(e)}load(e,t,i,n){let r=new rR,s=new uB(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let a=0;function o(i){s.load(e[i],function(e){r.images[i]=e,6==++a&&(r.needsUpdate=!0,t&&t(r))},void 0,n)}for(let l=0;l<e.length;++l)o(l);return r}}class u2 extends uD{constructor(e){super(e)}load(e,t,i,n){let r=this,s=new oy,a=new uF(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(r.withCredentials),a.load(e,function(e){let i=r.parse(e);i&&(void 0!==i.image?s.image=i.image:void 0!==i.data&&(s.image.width=i.width,s.image.height=i.height,s.image.data=i.data),s.wrapS=void 0!==i.wrapS?i.wrapS:eu,s.wrapT=void 0!==i.wrapT?i.wrapT:eu,s.magFilter=void 0!==i.magFilter?i.magFilter:eg,s.minFilter=void 0!==i.minFilter?i.minFilter:eg,s.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,void 0!==i.encoding&&(s.encoding=i.encoding),void 0!==i.flipY&&(s.flipY=i.flipY),void 0!==i.format&&(s.format=i.format),void 0!==i.type&&(s.type=i.type),void 0!==i.mipmaps&&(s.mipmaps=i.mipmaps,s.minFilter=ev),1===i.mipmapCount&&(s.minFilter=eg),void 0!==i.generateMipmaps&&(s.generateMipmaps=i.generateMipmaps),s.needsUpdate=!0,t&&t(s,i))},i,n),s}}class u3 extends uD{constructor(e){super(e)}load(e,t,i,n){let r=new iR,s=new uB(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(e,function(e){r.image=e,r.needsUpdate=!0,void 0!==t&&t(r)},i,n),r}}class uG extends nP{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new iE(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){let t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}class uk extends uG{constructor(e,t,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(nP.DefaultUp),this.updateMatrix(),this.groundColor=new iE(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}let uV=new nh,uH=new iU,u4=new iU;class uW{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ic(512,512),this.map=null,this.mapPass=null,this.matrix=new nh,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new rB,this._frameExtents=new ic(1,1),this._viewportCount=1,this._viewports=[new iP(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){let t=this.camera,i=this.matrix;uH.setFromMatrixPosition(e.matrixWorld),t.position.copy(uH),u4.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(u4),t.updateMatrixWorld(),uV.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(uV),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(t.projectionMatrix),i.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){let e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class u6 extends uG{constructor(e,t,i=0,n=Math.PI/3,r=0,s=1){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(nP.DefaultUp),this.updateMatrix(),this.target=new nP,this.distance=i,this.angle=n,this.penumbra=r,this.decay=s,this.map=null,this.shadow=new class extends uW{constructor(){super(new rC(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){let t=this.camera,i=2*tK*e.angle*this.focus,n=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(i!==t.fov||n!==t.aspect||r!==t.far)&&(t.fov=i,t.aspect=n,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}let u7=new nh,u5=new iU,uj=new iU;class uq extends uG{constructor(e,t,i=0,n=1){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new class extends uW{constructor(){super(new rC(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ic(4,2),this._viewportCount=6,this._viewports=[new iP(2,1,1,1),new iP(0,1,1,1),new iP(3,1,1,1),new iP(1,1,1,1),new iP(3,0,1,1),new iP(1,0,1,1)],this._cubeDirections=[new iU(1,0,0),new iU(-1,0,0),new iU(0,0,1),new iU(0,0,-1),new iU(0,1,0),new iU(0,-1,0)],this._cubeUps=[new iU(0,1,0),new iU(0,1,0),new iU(0,1,0),new iU(0,1,0),new iU(0,0,1),new iU(0,0,-1)]}updateMatrices(e,t=0){let i=this.camera,n=this.matrix,r=e.distance||i.far;r!==i.far&&(i.far=r,i.updateProjectionMatrix()),u5.setFromMatrixPosition(e.matrixWorld),i.position.copy(u5),uj.copy(i.position),uj.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(uj),i.updateMatrixWorld(),n.makeTranslation(-u5.x,-u5.y,-u5.z),u7.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(u7)}}}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class uX extends uG{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(nP.DefaultUp),this.updateMatrix(),this.target=new nP,this.shadow=new class extends uW{constructor(){super(new rj(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class uY extends uG{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class uZ extends uG{constructor(e,t,i=10,n=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=n}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){let t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class uJ{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new iU)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){let i=e.x,n=e.y,r=e.z,s=this.coefficients;return t.copy(s[0]).multiplyScalar(.282095),t.addScaledVector(s[1],.488603*n),t.addScaledVector(s[2],.488603*r),t.addScaledVector(s[3],.488603*i),t.addScaledVector(s[4],1.092548*(i*n)),t.addScaledVector(s[5],1.092548*(n*r)),t.addScaledVector(s[6],.315392*(3*r*r-1)),t.addScaledVector(s[7],1.092548*(i*r)),t.addScaledVector(s[8],.546274*(i*i-n*n)),t}getIrradianceAt(e,t){let i=e.x,n=e.y,r=e.z,s=this.coefficients;return t.copy(s[0]).multiplyScalar(.886227),t.addScaledVector(s[1],1.023328*n),t.addScaledVector(s[2],1.023328*r),t.addScaledVector(s[3],1.023328*i),t.addScaledVector(s[4],.858086*i*n),t.addScaledVector(s[5],.858086*n*r),t.addScaledVector(s[6],.743125*r*r-.247708),t.addScaledVector(s[7],.858086*i*r),t.addScaledVector(s[8],.429043*(i*i-n*n)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){let i=this.coefficients;for(let n=0;n<9;n++)i[n].fromArray(e,t+3*n);return this}toArray(e=[],t=0){let i=this.coefficients;for(let n=0;n<9;n++)i[n].toArray(e,t+3*n);return e}static getBasisAt(e,t){let i=e.x,n=e.y,r=e.z;t[0]=.282095,t[1]=.488603*n,t[2]=.488603*r,t[3]=.488603*i,t[4]=1.092548*i*n,t[5]=1.092548*n*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*i*r,t[8]=.546274*(i*i-n*n)}}class uK extends uG{constructor(e=new uJ,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){let t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class u9 extends uD{constructor(e){super(e),this.textures={}}load(e,t,i,n){let r=this,s=new uF(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,function(i){try{t(r.parse(JSON.parse(i)))}catch(s){n?n(s):console.error(s),r.manager.itemError(e)}},i,n)}parse(e){let t=this.textures;function i(e){return void 0===t[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]}let n=u9.createMaterialFromType(e.type);if(void 0!==e.uuid&&(n.uuid=e.uuid),void 0!==e.name&&(n.name=e.name),void 0!==e.color&&void 0!==n.color&&n.color.setHex(e.color),void 0!==e.roughness&&(n.roughness=e.roughness),void 0!==e.metalness&&(n.metalness=e.metalness),void 0!==e.sheen&&(n.sheen=e.sheen),void 0!==e.sheenColor&&(n.sheenColor=new iE().setHex(e.sheenColor)),void 0!==e.sheenRoughness&&(n.sheenRoughness=e.sheenRoughness),void 0!==e.emissive&&void 0!==n.emissive&&n.emissive.setHex(e.emissive),void 0!==e.specular&&void 0!==n.specular&&n.specular.setHex(e.specular),void 0!==e.specularIntensity&&(n.specularIntensity=e.specularIntensity),void 0!==e.specularColor&&void 0!==n.specularColor&&n.specularColor.setHex(e.specularColor),void 0!==e.shininess&&(n.shininess=e.shininess),void 0!==e.clearcoat&&(n.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(n.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.iridescence&&(n.iridescence=e.iridescence),void 0!==e.iridescenceIOR&&(n.iridescenceIOR=e.iridescenceIOR),void 0!==e.iridescenceThicknessRange&&(n.iridescenceThicknessRange=e.iridescenceThicknessRange),void 0!==e.transmission&&(n.transmission=e.transmission),void 0!==e.thickness&&(n.thickness=e.thickness),void 0!==e.attenuationDistance&&(n.attenuationDistance=e.attenuationDistance),void 0!==e.attenuationColor&&void 0!==n.attenuationColor&&n.attenuationColor.setHex(e.attenuationColor),void 0!==e.fog&&(n.fog=e.fog),void 0!==e.flatShading&&(n.flatShading=e.flatShading),void 0!==e.blending&&(n.blending=e.blending),void 0!==e.combine&&(n.combine=e.combine),void 0!==e.side&&(n.side=e.side),void 0!==e.shadowSide&&(n.shadowSide=e.shadowSide),void 0!==e.opacity&&(n.opacity=e.opacity),void 0!==e.transparent&&(n.transparent=e.transparent),void 0!==e.alphaTest&&(n.alphaTest=e.alphaTest),void 0!==e.depthTest&&(n.depthTest=e.depthTest),void 0!==e.depthWrite&&(n.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(n.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(n.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(n.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(n.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(n.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(n.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(n.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(n.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(n.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(n.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(n.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(n.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(n.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(n.rotation=e.rotation),1!==e.linewidth&&(n.linewidth=e.linewidth),void 0!==e.dashSize&&(n.dashSize=e.dashSize),void 0!==e.gapSize&&(n.gapSize=e.gapSize),void 0!==e.scale&&(n.scale=e.scale),void 0!==e.polygonOffset&&(n.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(n.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(n.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.dithering&&(n.dithering=e.dithering),void 0!==e.alphaToCoverage&&(n.alphaToCoverage=e.alphaToCoverage),void 0!==e.premultipliedAlpha&&(n.premultipliedAlpha=e.premultipliedAlpha),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.toneMapped&&(n.toneMapped=e.toneMapped),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?n.vertexColors=e.vertexColors>0:n.vertexColors=e.vertexColors),void 0!==e.uniforms)for(let r in e.uniforms){let s=e.uniforms[r];switch(n.uniforms[r]={},s.type){case"t":n.uniforms[r].value=i(s.value);break;case"c":n.uniforms[r].value=new iE().setHex(s.value);break;case"v2":n.uniforms[r].value=new ic().fromArray(s.value);break;case"v3":n.uniforms[r].value=new iU().fromArray(s.value);break;case"v4":n.uniforms[r].value=new iP().fromArray(s.value);break;case"m3":n.uniforms[r].value=new id().fromArray(s.value);break;case"m4":n.uniforms[r].value=new nh().fromArray(s.value);break;default:n.uniforms[r].value=s.value}}if(void 0!==e.defines&&(n.defines=e.defines),void 0!==e.vertexShader&&(n.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(n.fragmentShader=e.fragmentShader),void 0!==e.glslVersion&&(n.glslVersion=e.glslVersion),void 0!==e.extensions)for(let a in e.extensions)n.extensions[a]=e.extensions[a];if(void 0!==e.size&&(n.size=e.size),void 0!==e.sizeAttenuation&&(n.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(n.map=i(e.map)),void 0!==e.matcap&&(n.matcap=i(e.matcap)),void 0!==e.alphaMap&&(n.alphaMap=i(e.alphaMap)),void 0!==e.bumpMap&&(n.bumpMap=i(e.bumpMap)),void 0!==e.bumpScale&&(n.bumpScale=e.bumpScale),void 0!==e.normalMap&&(n.normalMap=i(e.normalMap)),void 0!==e.normalMapType&&(n.normalMapType=e.normalMapType),void 0!==e.normalScale){let o=e.normalScale;!1===Array.isArray(o)&&(o=[o,o]),n.normalScale=new ic().fromArray(o)}return void 0!==e.displacementMap&&(n.displacementMap=i(e.displacementMap)),void 0!==e.displacementScale&&(n.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(n.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(n.roughnessMap=i(e.roughnessMap)),void 0!==e.metalnessMap&&(n.metalnessMap=i(e.metalnessMap)),void 0!==e.emissiveMap&&(n.emissiveMap=i(e.emissiveMap)),void 0!==e.emissiveIntensity&&(n.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(n.specularMap=i(e.specularMap)),void 0!==e.specularIntensityMap&&(n.specularIntensityMap=i(e.specularIntensityMap)),void 0!==e.specularColorMap&&(n.specularColorMap=i(e.specularColorMap)),void 0!==e.envMap&&(n.envMap=i(e.envMap)),void 0!==e.envMapIntensity&&(n.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(n.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(n.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(n.lightMap=i(e.lightMap)),void 0!==e.lightMapIntensity&&(n.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(n.aoMap=i(e.aoMap)),void 0!==e.aoMapIntensity&&(n.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(n.gradientMap=i(e.gradientMap)),void 0!==e.clearcoatMap&&(n.clearcoatMap=i(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(n.clearcoatRoughnessMap=i(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(n.clearcoatNormalMap=i(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(n.clearcoatNormalScale=new ic().fromArray(e.clearcoatNormalScale)),void 0!==e.iridescenceMap&&(n.iridescenceMap=i(e.iridescenceMap)),void 0!==e.iridescenceThicknessMap&&(n.iridescenceThicknessMap=i(e.iridescenceThicknessMap)),void 0!==e.transmissionMap&&(n.transmissionMap=i(e.transmissionMap)),void 0!==e.thicknessMap&&(n.thicknessMap=i(e.thicknessMap)),void 0!==e.sheenColorMap&&(n.sheenColorMap=i(e.sheenColorMap)),void 0!==e.sheenRoughnessMap&&(n.sheenRoughnessMap=i(e.sheenRoughnessMap)),n}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){return new({ShadowMaterial:ui,SpriteMaterial:aZ,RawShaderMaterial:un,ShaderMaterial:r1,PointsMaterial:oB,MeshPhysicalMaterial:us,MeshStandardMaterial:ur,MeshPhongMaterial:ua,MeshToonMaterial:uo,MeshNormalMaterial:ul,MeshLambertMaterial:uu,MeshDepthMaterial:aI,MeshDistanceMaterial:aN,MeshBasicMaterial:nH,MeshMatcapMaterial:uh,LineDashedMaterial:uc,LineBasicMaterial:o0,Material:nV})[e]}}class uQ{static decodeText(e){if("undefined"!=typeof TextDecoder)return new TextDecoder().decode(e);let t="";for(let i=0,n=e.length;i<n;i++)t+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(t))}catch(r){return t}}static extractUrlBase(e){let t=e.lastIndexOf("/");return -1===t?"./":e.slice(0,t+1)}static resolveURL(e,t){return"string"!=typeof e||""===e?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e))?e:t+e}}class he extends ra{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){let e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class ht extends uD{constructor(e){super(e)}load(e,t,i,n){let r=this,s=new uF(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,function(i){try{t(r.parse(JSON.parse(i)))}catch(s){n?n(s):console.error(s),r.manager.itemError(e)}},i,n)}parse(e){let t={},i={};function n(e,n){if(void 0!==t[n])return t[n];let r=e.interleavedBuffers,s=r[n],a=function(e,t){if(void 0!==i[t])return i[t];let n=e.arrayBuffers,r=n[t],s=new Uint32Array(r).buffer;return i[t]=s,s}(e,s.buffer),o=ig(s.type,a),l=new aq(o,s.stride);return l.uuid=s.uuid,t[n]=l,l}let r=e.isInstancedBufferGeometry?new he:new ra,s=e.data.index;if(void 0!==s){let a=ig(s.type,s.array);r.setIndex(new n6(a,1))}let o=e.data.attributes;for(let l in o){let u=o[l],h;if(u.isInterleavedBufferAttribute){let c=n(e.data,u.data);h=new aY(c,u.itemSize,u.offset,u.normalized)}else{let d=ig(u.type,u.array),p=u.isInstancedBufferAttribute?ow:n6;h=new p(d,u.itemSize,u.normalized)}void 0!==u.name&&(h.name=u.name),void 0!==u.usage&&h.setUsage(u.usage),void 0!==u.updateRange&&(h.updateRange.offset=u.updateRange.offset,h.updateRange.count=u.updateRange.count),r.setAttribute(l,h)}let f=e.data.morphAttributes;if(f)for(let m in f){let g=f[m],$=[];for(let x=0,v=g.length;x<v;x++){let y=g[x],_;if(y.isInterleavedBufferAttribute){let b=n(e.data,y.data);_=new aY(b,y.itemSize,y.offset,y.normalized)}else{let S=ig(y.type,y.array);_=new n6(S,y.itemSize,y.normalized)}void 0!==y.name&&(_.name=y.name),$.push(_)}r.morphAttributes[m]=$}let w=e.data.morphTargetsRelative;w&&(r.morphTargetsRelative=!0);let M=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==M)for(let T=0,E=M.length;T!==E;++T){let A=M[T];r.addGroup(A.start,A.count,A.materialIndex)}let C=e.data.boundingSphere;if(void 0!==C){let L=new iU;void 0!==C.center&&L.fromArray(C.center),r.boundingSphere=new nt(L,C.radius)}return e.name&&(r.name=e.name),e.userData&&(r.userData=e.userData),r}}class hi extends uD{constructor(e){super(e)}load(e,t,i,n){let r=this,s=""===this.path?uQ.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||s;let a=new uF(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(i){let s=null;try{s=JSON.parse(i)}catch(a){void 0!==n&&n(a),console.error("THREE:ObjectLoader: Can't parse "+e+".",a.message);return}let o=s.metadata;if(void 0===o||void 0===o.type||"geometry"===o.type.toLowerCase()){console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(s,t)},i,n)}async loadAsync(e,t){let i=""===this.path?uQ.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;let n=new uF(this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials);let r=await n.loadAsync(e,t),s=JSON.parse(r),a=s.metadata;if(void 0===a||void 0===a.type||"geometry"===a.type.toLowerCase())throw Error("THREE.ObjectLoader: Can't load "+e);return await this.parseAsync(s)}parse(e,t){let i=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,n),s=this.parseImages(e.images,function(){void 0!==t&&t(l)}),a=this.parseTextures(e.textures,s),o=this.parseMaterials(e.materials,a),l=this.parseObject(e.object,r,o,a,i),u=this.parseSkeletons(e.skeletons,l);if(this.bindSkeletons(l,u),void 0!==t){let h=!1;for(let c in s)if(s[c].data instanceof HTMLImageElement){h=!0;break}!1===h&&t(l)}return l}async parseAsync(e){let t=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),n=this.parseGeometries(e.geometries,i),r=await this.parseImagesAsync(e.images),s=this.parseTextures(e.textures,r),a=this.parseMaterials(e.materials,s),o=this.parseObject(e.object,n,a,s,t),l=this.parseSkeletons(e.skeletons,o);return this.bindSkeletons(o,l),o}parseShapes(e){let t={};if(void 0!==e)for(let i=0,n=e.length;i<n;i++){let r=new lb().fromJSON(e[i]);t[r.uuid]=r}return t}parseSkeletons(e,t){let i={},n={};if(t.traverse(function(e){e.isBone&&(n[e.uuid]=e)}),void 0!==e)for(let r=0,s=e.length;r<s;r++){let a=new oS().fromJSON(e[r],n);i[a.uuid]=a}return i}parseGeometries(e,t){let i={};if(void 0!==e){let n=new ht;for(let r=0,s=e.length;r<s;r++){let a,o=e[r];switch(o.type){case"BufferGeometry":case"InstancedBufferGeometry":a=n.parse(o);break;default:o.type in ut?a=ut[o.type].fromJSON(o,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${o.type}"`)}a.uuid=o.uuid,void 0!==o.name&&(a.name=o.name),!0===a.isBufferGeometry&&void 0!==o.userData&&(a.userData=o.userData),i[o.uuid]=a}}return i}parseMaterials(e,t){let i={},n={};if(void 0!==e){let r=new u9;r.setTextures(t);for(let s=0,a=e.length;s<a;s++){let o=e[s];void 0===i[o.uuid]&&(i[o.uuid]=r.parse(o)),n[o.uuid]=i[o.uuid]}}return n}parseAnimations(e){let t={};if(void 0!==e)for(let i=0;i<e.length;i++){let n=e[i],r=u0.parse(n);t[r.uuid]=r}return t}parseImages(e,t){let i=this,n={},r;function s(e){if("string"==typeof e){var t;let n=e,s=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(n)?n:i.resourcePath+n;return t=s,i.manager.itemStart(t),r.load(t,function(){i.manager.itemEnd(t)},void 0,function(){i.manager.itemError(t),i.manager.itemEnd(t)})}return e.data?{data:ig(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){let a=new uR(t);(r=new uB(a)).setCrossOrigin(this.crossOrigin);for(let o=0,l=e.length;o<l;o++){let u=e[o],h=u.url;if(Array.isArray(h)){let c=[];for(let d=0,p=h.length;d<p;d++){let f=h[d],m=s(f);null!==m&&(m instanceof HTMLImageElement?c.push(m):c.push(new oy(m.data,m.width,m.height)))}n[u.uuid]=new i0(c)}else{let g=s(u.url);n[u.uuid]=new i0(g)}}}return n}async parseImagesAsync(e){let t=this,i={},n;async function r(e){if("string"==typeof e){let i=e,r=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(i)?i:t.resourcePath+i;return await n.loadAsync(r)}return e.data?{data:ig(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){(n=new uB(this.manager)).setCrossOrigin(this.crossOrigin);for(let s=0,a=e.length;s<a;s++){let o=e[s],l=o.url;if(Array.isArray(l)){let u=[];for(let h=0,c=l.length;h<c;h++){let d=l[h],p=await r(d);null!==p&&(p instanceof HTMLImageElement?u.push(p):u.push(new oy(p.data,p.width,p.height)))}i[o.uuid]=new i0(u)}else{let f=await r(o.url);i[o.uuid]=new i0(f)}}}return i}parseTextures(e,t){function i(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}let n={};if(void 0!==e)for(let r=0,s=e.length;r<s;r++){let a=e[r];void 0===a.image&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),void 0===t[a.image]&&console.warn("THREE.ObjectLoader: Undefined image",a.image);let o=t[a.image],l=o.data,u;Array.isArray(l)?(u=new rR,6===l.length&&(u.needsUpdate=!0)):(u=l&&l.data?new oy:new iR,l&&(u.needsUpdate=!0)),u.source=o,u.uuid=a.uuid,void 0!==a.name&&(u.name=a.name),void 0!==a.mapping&&(u.mapping=i(a.mapping,hn)),void 0!==a.offset&&u.offset.fromArray(a.offset),void 0!==a.repeat&&u.repeat.fromArray(a.repeat),void 0!==a.center&&u.center.fromArray(a.center),void 0!==a.rotation&&(u.rotation=a.rotation),void 0!==a.wrap&&(u.wrapS=i(a.wrap[0],hr),u.wrapT=i(a.wrap[1],hr)),void 0!==a.format&&(u.format=a.format),void 0!==a.type&&(u.type=a.type),void 0!==a.encoding&&(u.encoding=a.encoding),void 0!==a.minFilter&&(u.minFilter=i(a.minFilter,hs)),void 0!==a.magFilter&&(u.magFilter=i(a.magFilter,hs)),void 0!==a.anisotropy&&(u.anisotropy=a.anisotropy),void 0!==a.flipY&&(u.flipY=a.flipY),void 0!==a.premultiplyAlpha&&(u.premultiplyAlpha=a.premultiplyAlpha),void 0!==a.unpackAlignment&&(u.unpackAlignment=a.unpackAlignment),void 0!==a.userData&&(u.userData=a.userData),n[a.uuid]=u}return n}parseObject(e,t,i,n,r){let s;function a(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function o(e){if(void 0!==e){if(Array.isArray(e)){let t=[];for(let n=0,r=e.length;n<r;n++){let s=e[n];void 0===i[s]&&console.warn("THREE.ObjectLoader: Undefined material",s),t.push(i[s])}return t}return void 0===i[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),i[e]}}function l(e){return void 0===n[e]&&console.warn("THREE.ObjectLoader: Undefined texture",e),n[e]}let u,h;switch(e.type){case"Scene":s=new aj,void 0!==e.background&&(Number.isInteger(e.background)?s.background=new iE(e.background):s.background=l(e.background)),void 0!==e.environment&&(s.environment=l(e.environment)),void 0!==e.fog&&("Fog"===e.fog.type?s.fog=new a5(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(s.fog=new a7(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":s=new rC(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(s.focus=e.focus),void 0!==e.zoom&&(s.zoom=e.zoom),void 0!==e.filmGauge&&(s.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(s.filmOffset=e.filmOffset),void 0!==e.view&&(s.view=Object.assign({},e.view));break;case"OrthographicCamera":s=new rj(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(s.zoom=e.zoom),void 0!==e.view&&(s.view=Object.assign({},e.view));break;case"AmbientLight":s=new uY(e.color,e.intensity);break;case"DirectionalLight":s=new uX(e.color,e.intensity);break;case"PointLight":s=new uq(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":s=new uZ(e.color,e.intensity,e.width,e.height);break;case"SpotLight":s=new u6(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":s=new uk(e.color,e.groundColor,e.intensity);break;case"LightProbe":s=new uK().fromJSON(e);break;case"SkinnedMesh":u=a(e.geometry),h=o(e.material),s=new ov(u,h),void 0!==e.bindMode&&(s.bindMode=e.bindMode),void 0!==e.bindMatrix&&s.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(s.skeleton=e.skeleton);break;case"Mesh":u=a(e.geometry),h=o(e.material),s=new rS(u,h);break;case"InstancedMesh":u=a(e.geometry),h=o(e.material);let c=e.count,d=e.instanceMatrix,p=e.instanceColor;(s=new o1(u,h,c)).instanceMatrix=new ow(new Float32Array(d.array),16),void 0!==p&&(s.instanceColor=new ow(new Float32Array(p.array),p.itemSize));break;case"LOD":s=new op;break;case"Line":s=new oI(a(e.geometry),o(e.material));break;case"LineLoop":s=new oO(a(e.geometry),o(e.material));break;case"LineSegments":s=new oz(a(e.geometry),o(e.material));break;case"PointCloud":case"Points":s=new ok(a(e.geometry),o(e.material));break;case"Sprite":s=new ou(o(e.material));break;case"Group":s=new a2;break;case"Bone":s=new o8;break;default:s=new nP}if(s.uuid=e.uuid,void 0!==e.name&&(s.name=e.name),void 0!==e.matrix?(s.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(s.matrixAutoUpdate=e.matrixAutoUpdate),s.matrixAutoUpdate&&s.matrix.decompose(s.position,s.quaternion,s.scale)):(void 0!==e.position&&s.position.fromArray(e.position),void 0!==e.rotation&&s.rotation.fromArray(e.rotation),void 0!==e.quaternion&&s.quaternion.fromArray(e.quaternion),void 0!==e.scale&&s.scale.fromArray(e.scale)),void 0!==e.castShadow&&(s.castShadow=e.castShadow),void 0!==e.receiveShadow&&(s.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(s.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(s.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(s.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&s.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(s.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(s.visible=e.visible),void 0!==e.frustumCulled&&(s.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(s.renderOrder=e.renderOrder),void 0!==e.userData&&(s.userData=e.userData),void 0!==e.layers&&(s.layers.mask=e.layers),void 0!==e.children){let f=e.children;for(let m=0;m<f.length;m++)s.add(this.parseObject(f[m],t,i,n,r))}if(void 0!==e.animations){let g=e.animations;for(let $=0;$<g.length;$++){let x=g[$];s.animations.push(r[x])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(s.autoUpdate=e.autoUpdate);let v=e.levels;for(let y=0;y<v.length;y++){let _=v[y],b=s.getObjectByProperty("uuid",_.object);void 0!==b&&s.addLevel(b,_.distance)}}return s}bindSkeletons(e,t){0!==Object.keys(t).length&&e.traverse(function(e){if(!0===e.isSkinnedMesh&&void 0!==e.skeleton){let i=t[e.skeleton];void 0===i?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(i,e.bindMatrix)}})}}let hn={UVMapping:ei,CubeReflectionMapping:en,CubeRefractionMapping:er,EquirectangularReflectionMapping:es,EquirectangularRefractionMapping:ea,CubeUVReflectionMapping:eo},hr={RepeatWrapping:el,ClampToEdgeWrapping:eu,MirroredRepeatWrapping:eh},hs={NearestFilter:ec,NearestMipmapNearestFilter:ed,NearestMipmapLinearFilter:ef,LinearFilter:eg,LinearMipmapNearestFilter:e$,LinearMipmapLinearFilter:ev};class ha extends uD{constructor(e){super(e),this.isImageBitmapLoader=!0,"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,i,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let r=this,s=uL.get(e);if(void 0!==s)return r.manager.itemStart(e),setTimeout(function(){t&&t(s),r.manager.itemEnd(e)},0),s;let a={};a.credentials="anonymous"===this.crossOrigin?"same-origin":"include",a.headers=this.requestHeader,fetch(e,a).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(i){uL.add(e,i),t&&t(i),r.manager.itemEnd(e)}).catch(function(t){n&&n(t),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}}let ho,hl={getContext:function(){return void 0===ho&&(ho=new(window.AudioContext||window.webkitAudioContext)),ho},setContext:function(e){ho=e}};class hu extends uD{constructor(e){super(e)}load(e,t,i,n){let r=this,s=new uF(this.manager);s.setResponseType("arraybuffer"),s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(i){try{let s=i.slice(0),a=hl.getContext();a.decodeAudioData(s,function(e){t(e)})}catch(o){n?n(o):console.error(o),r.manager.itemError(e)}},i,n)}}class hh extends uK{constructor(e,t,i=1){super(void 0,i),this.isHemisphereLightProbe=!0;let n=new iE().set(e),r=new iE().set(t),s=new iU(n.r,n.g,n.b),a=new iU(r.r,r.g,r.b),o=Math.sqrt(Math.PI);this.sh.coefficients[0].copy(s).add(a).multiplyScalar(o),this.sh.coefficients[1].copy(s).sub(a).multiplyScalar(o*Math.sqrt(.75))}}class hc extends uK{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;let i=new iE().set(e);this.sh.coefficients[0].set(i.r,i.g,i.b).multiplyScalar(2*Math.sqrt(Math.PI))}}let hd=new nh,hp=new nh,hf=new nh;class hm{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new rC,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new rC,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){let t=this._cache,i=t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep;if(i){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,hf.copy(e.projectionMatrix);let n=t.eyeSep/2,r=n*t.near/t.focus,s=t.near*Math.tan(tJ*t.fov*.5)/t.zoom,a,o;hp.elements[12]=-n,hd.elements[12]=n,a=-s*t.aspect+r,o=s*t.aspect+r,hf.elements[0]=2*t.near/(o-a),hf.elements[8]=(o+a)/(o-a),this.cameraL.projectionMatrix.copy(hf),a=-s*t.aspect-r,o=s*t.aspect-r,hf.elements[0]=2*t.near/(o-a),hf.elements[8]=(o+a)/(o-a),this.cameraR.projectionMatrix.copy(hf)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(hp),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(hd)}}class hg{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=h$(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){let t=h$();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function h$(){return("undefined"==typeof performance?Date:performance).now()}let hx=new iU,hv=new iB,h8=new iU,hy=new iU;class h_ extends nP{constructor(){super(),this.type="AudioListener",this.context=hl.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new hg}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);let t=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(hx,hv,h8),hy.set(0,0,-1).applyQuaternion(hv),t.positionX){let n=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(hx.x,n),t.positionY.linearRampToValueAtTime(hx.y,n),t.positionZ.linearRampToValueAtTime(hx.z,n),t.forwardX.linearRampToValueAtTime(hy.x,n),t.forwardY.linearRampToValueAtTime(hy.y,n),t.forwardZ.linearRampToValueAtTime(hy.z,n),t.upX.linearRampToValueAtTime(i.x,n),t.upY.linearRampToValueAtTime(i.y,n),t.upZ.linearRampToValueAtTime(i.z,n)}else t.setPosition(hx.x,hx.y,hx.z),t.setOrientation(hy.x,hy.y,hy.z,i.x,i.y,i.z)}}class hb extends nP{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying){console.warn("THREE.Audio: Audio is already playing.");return}if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;let t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}let hS=new iU,hw=new iB,hM=new iU,hT=new iU;class hE extends hb{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,i){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=i,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(hS,hw,hM),hT.set(0,0,1).applyQuaternion(hw);let t=this.panner;if(t.positionX){let i=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(hS.x,i),t.positionY.linearRampToValueAtTime(hS.y,i),t.positionZ.linearRampToValueAtTime(hS.z,i),t.orientationX.linearRampToValueAtTime(hT.x,i),t.orientationY.linearRampToValueAtTime(hT.y,i),t.orientationZ.linearRampToValueAtTime(hT.z,i)}else t.setPosition(hS.x,hS.y,hS.z),t.setOrientation(hT.x,hT.y,hT.z)}}class hA{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0,t=this.getFrequencyData();for(let i=0;i<t.length;i++)e+=t[i];return e/t.length}}class h1{constructor(e,t,i){this.binding=e,this.valueSize=i;let n,r,s;switch(t){case"quaternion":n=this._slerp,r=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*i),this._workIndex=5;break;case"string":case"bool":n=this._select,r=this._select,s=this._setAdditiveIdentityOther,this.buffer=Array(5*i);break;default:n=this._lerp,r=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*i)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=r,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){let i=this.buffer,n=this.valueSize,r=e*n+n,s=this.cumulativeWeight;if(0===s){for(let a=0;a!==n;++a)i[r+a]=i[a];s=t}else{s+=t;let o=t/s;this._mixBufferRegion(i,r,0,o,n)}this.cumulativeWeight=s}accumulateAdditive(e){let t=this.buffer,i=this.valueSize,n=i*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,n,0,e,i),this.cumulativeWeightAdditive+=e}apply(e){let t=this.valueSize,i=this.buffer,n=e*t+t,r=this.cumulativeWeight,s=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){let o=t*this._origIndex;this._mixBufferRegion(i,n,o,1-r,t)}s>0&&this._mixBufferRegionAdditive(i,n,this._addIndex*t,1,t);for(let l=t,u=t+t;l!==u;++l)if(i[l]!==i[l+t]){a.setValue(i,n);break}}saveOriginalState(){let e=this.binding,t=this.buffer,i=this.valueSize,n=i*this._origIndex;e.getValue(t,n);for(let r=i,s=n;r!==s;++r)t[r]=t[n+r%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){let e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){let e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let i=e;i<t;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){let e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[t+i]=this.buffer[e+i]}_select(e,t,i,n,r){if(n>=.5)for(let s=0;s!==r;++s)e[t+s]=e[i+s]}_slerp(e,t,i,n){iB.slerpFlat(e,t,e,t,e,i,n)}_slerpAdditive(e,t,i,n,r){let s=this._workIndex*r;iB.multiplyQuaternionsFlat(e,s,e,t,e,i),iB.slerpFlat(e,t,e,t,e,s,n)}_lerp(e,t,i,n,r){let s=1-n;for(let a=0;a!==r;++a){let o=t+a;e[o]=e[o]*s+e[i+a]*n}}_lerpAdditive(e,t,i,n,r){for(let s=0;s!==r;++s){let a=t+s;e[a]=e[a]+e[i+s]*n}}}let h0="\\[\\]\\.:\\/",hC=RegExp("["+h0+"]","g"),hL="[^"+h0+"]",hR="[^"+h0.replace("\\.","")+"]",hP=/((?:WC+[\/:])*)/.source.replace("WC",hL),hD=/(WCOD+)?/.source.replace("WCOD",hR),hI=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",hL),hN=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",hL),hF=RegExp("^"+hP+hD+hI+hN+"$"),hz=["material","materials","bones","map"];class hO{constructor(e,t,i){this.path=t,this.parsedPath=i||hO.parseTrackName(t),this.node=hO.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new hO.Composite(e,t,i):new hO(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(hC,"")}static parseTrackName(e){let t=hF.exec(e);if(null===t)throw Error("PropertyBinding: Cannot parse trackName: "+e);let i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){let r=i.nodeName.substring(n+1);-1!==hz.indexOf(r)&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=r)}if(null===i.propertyName||0===i.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){let i=e.skeleton.getBoneByName(t);if(void 0!==i)return i}if(e.children){let n=function(e){for(let i=0;i<e.length;i++){let r=e[i];if(r.name===t||r.uuid===t)return r;let s=n(r.children);if(s)return s}return null},r=n(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)e[t++]=i[n]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++]}_setValue_array_setNeedsUpdate(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){let i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node,t=this.parsedPath,i=t.objectName,n=t.propertyName,r=t.propertyIndex;if(e||(e=hO.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(i){let s=t.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let a=0;a<e.length;a++)if(e[a].name===s){s=a;break}break;case"map":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(void 0===e[i]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(void 0!==s){if(void 0===e[s]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[s]}}let o=e[n];if(void 0===o){let l=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+n+" but it wasn't found.",e);return}let u=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?u=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(u=this.Versioning.MatrixWorldNeedsUpdate);let h=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===n){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}void 0!==e.morphTargetDictionary[r]&&(r=e.morphTargetDictionary[r])}h=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else void 0!==o.fromArray&&void 0!==o.toArray?(h=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(h=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=n;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][u]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}hO.Composite=class{constructor(e,t,i){let n=i||hO.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}getValue(e,t){this.bind();let i=this._targetGroup.nCachedObjects_,n=this._bindings[i];void 0!==n&&n.getValue(e,t)}setValue(e,t){let i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,r=i.length;n!==r;++n)i[n].setValue(e,t)}bind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()}unbind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}},hO.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},hO.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},hO.prototype.GetterByBindingType=[hO.prototype._getValue_direct,hO.prototype._getValue_array,hO.prototype._getValue_arrayElement,hO.prototype._getValue_toArray,],hO.prototype.SetterByBindingTypeAndVersioning=[[hO.prototype._setValue_direct,hO.prototype._setValue_direct_setNeedsUpdate,hO.prototype._setValue_direct_setMatrixWorldNeedsUpdate,],[hO.prototype._setValue_array,hO.prototype._setValue_array_setNeedsUpdate,hO.prototype._setValue_array_setMatrixWorldNeedsUpdate,],[hO.prototype._setValue_arrayElement,hO.prototype._setValue_arrayElement_setNeedsUpdate,hO.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,],[hO.prototype._setValue_fromArray,hO.prototype._setValue_fromArray_setNeedsUpdate,hO.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,]];class hB{constructor(){this.isAnimationObjectGroup=!0,this.uuid=t9(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;let e={};this._indicesByUUID=e;for(let t=0,i=arguments.length;t!==i;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={},this.stats={objects:{get total(){return this._objects.length},get inUse(){return this.total-this.nCachedObjects_}},get bindingsPerObject(){return this._bindings.length}}}add(){let e=this._objects,t=this._indicesByUUID,i=this._paths,n=this._parsedPaths,r=this._bindings,s=r.length,a,o=e.length,l=this.nCachedObjects_;for(let u=0,h=arguments.length;u!==h;++u){let c=arguments[u],d=c.uuid,p=t[d];if(void 0===p){p=o++,t[d]=p,e.push(c);for(let f=0,m=s;f!==m;++f)r[f].push(new hO(c,i[f],n[f]))}else if(p<l){a=e[p];let g=--l,$=e[g];t[$.uuid]=p,e[p]=$,t[d]=g,e[g]=c;for(let x=0,v=s;x!==v;++x){let y=r[x],_=y[g],b=y[p];y[p]=_,void 0===b&&(b=new hO(c,i[x],n[x])),y[g]=b}}else e[p]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){let e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length,r=this.nCachedObjects_;for(let s=0,a=arguments.length;s!==a;++s){let o=arguments[s],l=o.uuid,u=t[l];if(void 0!==u&&u>=r){let h=r++,c=e[h];t[c.uuid]=u,e[u]=c,t[l]=h,e[h]=o;for(let d=0,p=n;d!==p;++d){let f=i[d],m=f[h],g=f[u];f[u]=m,f[h]=g}}}this.nCachedObjects_=r}uncache(){let e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length,r=this.nCachedObjects_,s=e.length;for(let a=0,o=arguments.length;a!==o;++a){let l=arguments[a],u=l.uuid,h=t[u];if(void 0!==h){if(delete t[u],h<r){let c=--r,d=e[c],p=--s,f=e[p];t[d.uuid]=h,e[h]=d,t[f.uuid]=c,e[c]=f,e.pop();for(let m=0,g=n;m!==g;++m){let $=i[m],x=$[c],v=$[p];$[h]=x,$[c]=v,$.pop()}}else{let y=--s,_=e[y];y>0&&(t[_.uuid]=h),e[h]=_,e.pop();for(let b=0,S=n;b!==S;++b){let w=i[b];w[h]=w[y],w.pop()}}}}this.nCachedObjects_=r}subscribe_(e,t){let i=this._bindingsIndicesByPath,n=i[e],r=this._bindings;if(void 0!==n)return r[n];let s=this._paths,a=this._parsedPaths,o=this._objects,l=o.length,u=this.nCachedObjects_,h=Array(l);n=r.length,i[e]=n,s.push(e),a.push(t),r.push(h);for(let c=u,d=o.length;c!==d;++c){let p=o[c];h[c]=new hO(p,e,t)}return h}unsubscribe_(e){let t=this._bindingsIndicesByPath,i=t[e];if(void 0!==i){let n=this._paths,r=this._parsedPaths,s=this._bindings,a=s.length-1,o=s[a],l=e[a];t[l]=i,s[i]=o,s.pop(),r[i]=r[a],r.pop(),n[i]=n[a],n.pop()}}}class hU{constructor(e,t,i=null,n=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=i,this.blendMode=n;let r=t.tracks,s=r.length,a=Array(s),o={endingStart:td,endingEnd:td};for(let l=0;l!==s;++l){let u=r[l].createInterpolant(null);a[l]=u,u.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=to,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,i){if(e.fadeOut(t),this.fadeIn(t),i){let n=this._clip.duration,r=e._clip.duration;e.warp(1,r/n,t),this.warp(n/r,1,t)}return this}crossFadeTo(e,t,i){return e.crossFadeFrom(this,t,i)}stopFading(){let e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,i){let n=this._mixer,r=n.time,s=this.timeScale,a=this._timeScaleInterpolant;null===a&&(a=n._lendControlInterpolant(),this._timeScaleInterpolant=a);let o=a.parameterPositions,l=a.sampleValues;return o[0]=r,o[1]=r+i,l[0]=e/s,l[1]=t/s,this}stopWarping(){let e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,i,n){if(!this.enabled){this._updateWeight(e);return}let r=this._startTime;if(null!==r){let s=(e-r)*i;s<0||0===i?t=0:(this._startTime=null,t=i*s)}t*=this._updateTimeScale(e);let a=this._updateTime(t),o=this._updateWeight(e);if(o>0){let l=this._interpolants,u=this._propertyBindings;if(this.blendMode===tg)for(let h=0,c=l.length;h!==c;++h)l[h].evaluate(a),u[h].accumulateAdditive(o);else for(let d=0,p=l.length;d!==p;++d)l[d].evaluate(a),u[d].accumulate(n,o)}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;let i=this._weightInterpolant;if(null!==i){let n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;let i=this._timeScaleInterpolant;if(null!==i){let n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){let t=this._clip.duration,i=this.loop,n=this.time+e,r=this._loopCount,s=i===tl;if(0===e)return -1===r?n:s&&(1&r)==1?t-n:n;if(i===ta){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));handle_stop:{if(n>=t)n=t;else if(n<0)n=0;else{this.time=n;break handle_stop}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===r&&(e>=0?(r=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),n>=t||n<0){let a=Math.floor(n/t);n-=t*a,r+=Math.abs(a);let o=this.repetitions-r;if(o<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=e>0?t:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===o){let l=e<0;this._setEndings(l,!l,s)}else this._setEndings(!1,!1,s);this._loopCount=r,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=n;if(s&&(1&r)==1)return t-n}return n}_setEndings(e,t,i){let n=this._interpolantSettings;i?(n.endingStart=tp,n.endingEnd=tp):(e?n.endingStart=this.zeroSlopeAtStart?tp:td:n.endingStart=tf,t?n.endingEnd=this.zeroSlopeAtEnd?tp:td:n.endingEnd=tf)}_scheduleFading(e,t,i){let n=this._mixer,r=n.time,s=this._weightInterpolant;null===s&&(s=n._lendControlInterpolant(),this._weightInterpolant=s);let a=s.parameterPositions,o=s.sampleValues;return a[0]=r,o[0]=t,a[1]=r+e,o[1]=i,this}}let h2=new Float32Array(1);class h3 extends tX{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){let i=e._localRoot||this._root,n=e._clip.tracks,r=n.length,s=e._propertyBindings,a=e._interpolants,o=i.uuid,l=this._bindingsByRootAndName,u=l[o];void 0===u&&(u={},l[o]=u);for(let h=0;h!==r;++h){let c=n[h],d=c.name,p=u[d];if(void 0!==p)++p.referenceCount,s[h]=p;else{if(void 0!==(p=s[h])){null===p._cacheIndex&&(++p.referenceCount,this._addInactiveBinding(p,o,d));continue}let f=t&&t._propertyBindings[h].binding.parsedPath;p=new h1(hO.create(i,d,f),c.ValueTypeName,c.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,o,d),s[h]=p}a[h].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){let t=(e._localRoot||this._root).uuid,i=e._clip.uuid,n=this._actionsByClip[i];this._bindAction(e,n&&n.knownActions[0]),this._addInactiveAction(e,i,t)}let r=e._propertyBindings;for(let s=0,a=r.length;s!==a;++s){let o=r[s];0==o.useCount++&&(this._lendBinding(o),o.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){let t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){let r=t[i];0==--r.useCount&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0,this.stats={actions:{get total(){return this._actions.length},get inUse(){return this._nActiveActions}},bindings:{get total(){return this._bindings.length},get inUse(){return this._nActiveBindings}},controlInterpolants:{get total(){return this._controlInterpolants.length},get inUse(){return this._nActiveControlInterpolants}}}}_isActiveAction(e){let t=e._cacheIndex;return null!==t&&t<this._nActiveActions}_addInactiveAction(e,t,i){let n=this._actions,r=this._actionsByClip,s=r[t];if(void 0===s)s={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=s;else{let a=s.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=n.length,n.push(e),s.actionByRoot[i]=e}_removeInactiveAction(e){let t=this._actions,i=t[t.length-1],n=e._cacheIndex;i._cacheIndex=n,t[n]=i,t.pop(),e._cacheIndex=null;let r=e._clip.uuid,s=this._actionsByClip,a=s[r],o=a.knownActions,l=o[o.length-1],u=e._byClipCacheIndex;l._byClipCacheIndex=u,o[u]=l,o.pop(),e._byClipCacheIndex=null;let h=a.actionByRoot,c=(e._localRoot||this._root).uuid;delete h[c],0===o.length&&delete s[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){let t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){let r=t[i];0==--r.referenceCount&&this._removeInactiveBinding(r)}}_lendAction(e){let t=this._actions,i=e._cacheIndex,n=this._nActiveActions++,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_takeBackAction(e){let t=this._actions,i=e._cacheIndex,n=--this._nActiveActions,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_addInactiveBinding(e,t,i){let n=this._bindingsByRootAndName,r=this._bindings,s=n[t];void 0===s&&(s={},n[t]=s),s[i]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){let t=this._bindings,i=e.binding,n=i.rootNode.uuid,r=i.path,s=this._bindingsByRootAndName,a=s[n],o=t[t.length-1],l=e._cacheIndex;o._cacheIndex=l,t[l]=o,t.pop(),delete a[r],0===Object.keys(a).length&&delete s[n]}_lendBinding(e){let t=this._bindings,i=e._cacheIndex,n=this._nActiveBindings++,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_takeBackBinding(e){let t=this._bindings,i=e._cacheIndex,n=--this._nActiveBindings,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r}_lendControlInterpolant(){let e=this._controlInterpolants,t=this._nActiveControlInterpolants++,i=e[t];return void 0===i&&((i=new uy(new Float32Array(2),new Float32Array(2),1,h2)).__cacheIndex=t,e[t]=i),i}_takeBackControlInterpolant(e){let t=this._controlInterpolants,i=e.__cacheIndex,n=--this._nActiveControlInterpolants,r=t[n];e.__cacheIndex=n,t[n]=e,r.__cacheIndex=i,t[i]=r}clipAction(e,t,i){let n=t||this._root,r=n.uuid,s="string"==typeof e?u0.findByName(n,e):e,a=null!==s?s.uuid:e,o=this._actionsByClip[a],l=null;if(void 0===i&&(i=null!==s?s.blendMode:tm),void 0!==o){let u=o.actionByRoot[r];if(void 0!==u&&u.blendMode===i)return u;l=o.knownActions[0],null===s&&(s=l._clip)}if(null===s)return null;let h=new hU(this,s,t,i);return this._bindAction(h,l),this._addInactiveAction(h,a,r),h}existingAction(e,t){let i=t||this._root,n=i.uuid,r="string"==typeof e?u0.findByName(i,e):e,s=r?r.uuid:e,a=this._actionsByClip[s];return void 0!==a&&a.actionByRoot[n]||null}stopAllAction(){let e=this._actions,t=this._nActiveActions;for(let i=t-1;i>=0;--i)e[i].stop();return this}update(e){e*=this.timeScale;let t=this._actions,i=this._nActiveActions,n=this.time+=e,r=Math.sign(e),s=this._accuIndex^=1;for(let a=0;a!==i;++a){let o=t[a];o._update(n,e,r,s)}let l=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)l[h].apply(s);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){let t=this._actions,i=e.uuid,n=this._actionsByClip,r=n[i];if(void 0!==r){let s=r.knownActions;for(let a=0,o=s.length;a!==o;++a){let l=s[a];this._deactivateAction(l);let u=l._cacheIndex,h=t[t.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,h._cacheIndex=u,t[u]=h,t.pop(),this._removeInactiveBindingsForAction(l)}delete n[i]}}uncacheRoot(e){let t=e.uuid,i=this._actionsByClip;for(let n in i){let r=i[n].actionByRoot,s=r[t];void 0!==s&&(this._deactivateAction(s),this._removeInactiveAction(s))}let a=this._bindingsByRootAndName,o=a[t];if(void 0!==o)for(let l in o){let u=o[l];u.restoreOriginalState(),this._removeInactiveBinding(u)}}uncacheAction(e,t){let i=this.existingAction(e,t);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}}class hG{constructor(e){this.value=e}clone(){return new hG(void 0===this.value.clone?this.value:this.value.clone())}}let hk=0;class hV extends tX{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:hk++}),this.name="",this.usage=t3,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){let t=this.uniforms.indexOf(e);return -1!==t&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;let t=e.uniforms;this.uniforms.length=0;for(let i=0,n=t.length;i<n;i++)this.uniforms.push(t[i].clone());return this}clone(){return new this.constructor().copy(this)}}class hH extends aq{constructor(e,t,i=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){let t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){let t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class h4{constructor(e,t,i,n,r){this.isGLBufferAttribute=!0,this.buffer=e,this.type=t,this.itemSize=i,this.elementSize=n,this.count=r,this.version=0}set needsUpdate(e){!0===e&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class hW{constructor(e,t,i=0,n=1/0){this.ray=new nu(e,t),this.near=i,this.far=n,this.camera=null,this.layers=new ny,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,i=[]){return h7(e,this,i,t),i.sort(h6),i}intersectObjects(e,t=!0,i=[]){for(let n=0,r=e.length;n<r;n++)h7(e[n],this,i,t);return i.sort(h6),i}}function h6(e,t){return e.distance-t.distance}function h7(e,t,i,n){if(e.layers.test(t.layers)&&e.raycast(t,i),!0===n){let r=e.children;for(let s=0,a=r.length;s<a;s++)h7(r[s],t,i,!0)}}class h5{constructor(e=1,t=0,i=0){return this.radius=e,this.phi=t,this.theta=i,this}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(tQ(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class hj{constructor(e=1,t=0,i=0){return this.radius=e,this.theta=t,this.y=i,this}set(e,t,i){return this.radius=e,this.theta=t,this.y=i,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+i*i),this.theta=Math.atan2(e,i),this.y=t,this}clone(){return new this.constructor().copy(this)}}let hq=new ic;class hX{constructor(e=new ic(Infinity,Infinity),t=new ic(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let i=hq.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=Infinity,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x)&&!(e.x>this.max.x)&&!(e.y<this.min.y)&&!(e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x)&&!(e.min.x>this.max.x)&&!(e.max.y<this.min.y)&&!(e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){let t=hq.copy(e).clamp(this.min,this.max);return t.sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}let hY=new iU,hZ=new iU;class hJ{constructor(e=new iU,t=new iU){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){hY.subVectors(e,this.start),hZ.subVectors(this.end,this.start);let i=hZ.dot(hZ),n=hZ.dot(hY),r=n/i;return t&&(r=tQ(r,0,1)),r}closestPointToPoint(e,t,i){let n=this.closestPointToPointParameter(e,t);return this.delta(i).multiplyScalar(n).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}let hK=new iU;class h9 extends nP{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;let i=new ra,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let r=0,s=1;r<32;r++,s++){let a=r/32*Math.PI*2,o=s/32*Math.PI*2;n.push(Math.cos(a),Math.sin(a),1,Math.cos(o),Math.sin(o),1)}i.setAttribute("position",new nK(n,3));let l=new o0({fog:!1,toneMapped:!1});this.cone=new oz(i,l),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();let e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),hK.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(hK),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}let hQ=new iU,ce=new nh,ct=new nh;class ci extends oz{constructor(e){let t=function e(t){let i=[];!0===t.isBone&&i.push(t);for(let n=0;n<t.children.length;n++)i.push.apply(i,e(t.children[n]));return i}(e),i=new ra,n=[],r=[],s=new iE(0,0,1),a=new iE(0,1,0);for(let o=0;o<t.length;o++){let l=t[o];l.parent&&l.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),r.push(s.r,s.g,s.b),r.push(a.r,a.g,a.b))}i.setAttribute("position",new nK(n,3)),i.setAttribute("color",new nK(r,3));let u=new o0({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){let t=this.bones,i=this.geometry,n=i.getAttribute("position");ct.copy(this.root.matrixWorld).invert();for(let r=0,s=0;r<t.length;r++){let a=t[r];a.parent&&a.parent.isBone&&(ce.multiplyMatrices(ct,a.matrixWorld),hQ.setFromMatrixPosition(ce),n.setXYZ(s,hQ.x,hQ.y,hQ.z),ce.multiplyMatrices(ct,a.parent.matrixWorld),hQ.setFromMatrixPosition(ce),n.setXYZ(s+1,hQ.x,hQ.y,hQ.z),s+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}class cn extends rS{constructor(e,t,i){let n=new lY(t,4,2),r=new nH({wireframe:!0,fog:!1,toneMapped:!1});super(n,r),this.light=e,this.light.updateMatrixWorld(),this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}let cr=new iU,cs=new iE,ca=new iE;class co extends nP{constructor(e,t,i){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;let n=new lj(t);n.rotateY(.5*Math.PI),this.material=new nH({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);let r=n.getAttribute("position"),s=new Float32Array(3*r.count);n.setAttribute("color",new n6(s,3)),this.add(new rS(n,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){let e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{let t=e.geometry.getAttribute("color");cs.copy(this.light.color),ca.copy(this.light.groundColor);for(let i=0,n=t.count;i<n;i++){let r=i<n/2?cs:ca;t.setXYZ(i,r.r,r.g,r.b)}t.needsUpdate=!0}e.lookAt(cr.setFromMatrixPosition(this.light.matrixWorld).negate())}}class cl extends oz{constructor(e=10,t=10,i=4473924,n=8947848){i=new iE(i),n=new iE(n);let r=t/2,s=e/t,a=e/2,o=[],l=[];for(let u=0,h=0,c=-a;u<=t;u++,c+=s){o.push(-a,0,c,a,0,c),o.push(c,0,-a,c,0,a);let d=u===r?i:n;d.toArray(l,h),h+=3,d.toArray(l,h),h+=3,d.toArray(l,h),h+=3,d.toArray(l,h),h+=3}let p=new ra;p.setAttribute("position",new nK(o,3)),p.setAttribute("color",new nK(l,3));let f=new o0({vertexColors:!0,toneMapped:!1});super(p,f),this.type="GridHelper"}}class cu extends oz{constructor(e=10,t=16,i=8,n=64,r=4473924,s=8947848){r=new iE(r),s=new iE(s);let a=[],o=[];if(t>1)for(let l=0;l<t;l++){let u=l/t*(2*Math.PI),h=Math.sin(u)*e,c=Math.cos(u)*e;a.push(0,0,0),a.push(h,0,c);let d=1&l?r:s;o.push(d.r,d.g,d.b),o.push(d.r,d.g,d.b)}for(let p=0;p<i;p++){let f=1&p?r:s,m=e-e/i*p;for(let g=0;g<n;g++){let $=g/n*(2*Math.PI),x=Math.sin($)*m,v=Math.cos($)*m;a.push(x,0,v),o.push(f.r,f.g,f.b),x=Math.sin($=(g+1)/n*(2*Math.PI))*m,v=Math.cos($)*m,a.push(x,0,v),o.push(f.r,f.g,f.b)}}let y=new ra;y.setAttribute("position",new nK(a,3)),y.setAttribute("color",new nK(o,3));let _=new o0({vertexColors:!0,toneMapped:!1});super(y,_),this.type="PolarGridHelper"}}let ch=new iU,cc=new iU,cd=new iU;class cp extends nP{constructor(e,t,i){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,void 0===t&&(t=1);let n=new ra;n.setAttribute("position",new nK([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));let r=new o0({fog:!1,toneMapped:!1});this.lightPlane=new oI(n,r),this.add(this.lightPlane),(n=new ra).setAttribute("position",new nK([0,0,0,0,0,1],3)),this.targetLine=new oI(n,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){ch.setFromMatrixPosition(this.light.matrixWorld),cc.setFromMatrixPosition(this.light.target.matrixWorld),cd.subVectors(cc,ch),this.lightPlane.lookAt(cc),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(cc),this.targetLine.scale.z=cd.length()}}let cf=new iU,cm=new r0;class cg extends oz{constructor(e){let t=new ra,i=new o0({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],r=[],s={};function a(e,t){o(e),o(t)}function o(e){n.push(0,0,0),r.push(0,0,0),void 0===s[e]&&(s[e]=[]),s[e].push(n.length/3-1)}a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4"),t.setAttribute("position",new nK(n,3)),t.setAttribute("color",new nK(r,3)),super(t,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update();let l=new iE(16755200),u=new iE(16711680),h=new iE(43775),c=new iE(16777215),d=new iE(3355443);this.setColors(l,u,h,c,d)}setColors(e,t,i,n,r){let s=this.geometry,a=s.getAttribute("color");a.setXYZ(0,e.r,e.g,e.b),a.setXYZ(1,e.r,e.g,e.b),a.setXYZ(2,e.r,e.g,e.b),a.setXYZ(3,e.r,e.g,e.b),a.setXYZ(4,e.r,e.g,e.b),a.setXYZ(5,e.r,e.g,e.b),a.setXYZ(6,e.r,e.g,e.b),a.setXYZ(7,e.r,e.g,e.b),a.setXYZ(8,e.r,e.g,e.b),a.setXYZ(9,e.r,e.g,e.b),a.setXYZ(10,e.r,e.g,e.b),a.setXYZ(11,e.r,e.g,e.b),a.setXYZ(12,e.r,e.g,e.b),a.setXYZ(13,e.r,e.g,e.b),a.setXYZ(14,e.r,e.g,e.b),a.setXYZ(15,e.r,e.g,e.b),a.setXYZ(16,e.r,e.g,e.b),a.setXYZ(17,e.r,e.g,e.b),a.setXYZ(18,e.r,e.g,e.b),a.setXYZ(19,e.r,e.g,e.b),a.setXYZ(20,e.r,e.g,e.b),a.setXYZ(21,e.r,e.g,e.b),a.setXYZ(22,e.r,e.g,e.b),a.setXYZ(23,e.r,e.g,e.b),a.setXYZ(24,t.r,t.g,t.b),a.setXYZ(25,t.r,t.g,t.b),a.setXYZ(26,t.r,t.g,t.b),a.setXYZ(27,t.r,t.g,t.b),a.setXYZ(28,t.r,t.g,t.b),a.setXYZ(29,t.r,t.g,t.b),a.setXYZ(30,t.r,t.g,t.b),a.setXYZ(31,t.r,t.g,t.b),a.setXYZ(32,i.r,i.g,i.b),a.setXYZ(33,i.r,i.g,i.b),a.setXYZ(34,i.r,i.g,i.b),a.setXYZ(35,i.r,i.g,i.b),a.setXYZ(36,i.r,i.g,i.b),a.setXYZ(37,i.r,i.g,i.b),a.setXYZ(38,n.r,n.g,n.b),a.setXYZ(39,n.r,n.g,n.b),a.setXYZ(40,r.r,r.g,r.b),a.setXYZ(41,r.r,r.g,r.b),a.setXYZ(42,r.r,r.g,r.b),a.setXYZ(43,r.r,r.g,r.b),a.setXYZ(44,r.r,r.g,r.b),a.setXYZ(45,r.r,r.g,r.b),a.setXYZ(46,r.r,r.g,r.b),a.setXYZ(47,r.r,r.g,r.b),a.setXYZ(48,r.r,r.g,r.b),a.setXYZ(49,r.r,r.g,r.b),a.needsUpdate=!0}update(){let e=this.geometry,t=this.pointMap;cm.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),c$("c",t,e,cm,0,0,-1),c$("t",t,e,cm,0,0,1),c$("n1",t,e,cm,-1,-1,-1),c$("n2",t,e,cm,1,-1,-1),c$("n3",t,e,cm,-1,1,-1),c$("n4",t,e,cm,1,1,-1),c$("f1",t,e,cm,-1,-1,1),c$("f2",t,e,cm,1,-1,1),c$("f3",t,e,cm,-1,1,1),c$("f4",t,e,cm,1,1,1),c$("u1",t,e,cm,.7,1.1,-1),c$("u2",t,e,cm,-.7,1.1,-1),c$("u3",t,e,cm,0,2,-1),c$("cf1",t,e,cm,-1,0,1),c$("cf2",t,e,cm,1,0,1),c$("cf3",t,e,cm,0,-1,1),c$("cf4",t,e,cm,0,1,1),c$("cn1",t,e,cm,-1,0,-1),c$("cn2",t,e,cm,1,0,-1),c$("cn3",t,e,cm,0,-1,-1),c$("cn4",t,e,cm,0,1,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function c$(e,t,i,n,r,s,a){cf.set(r,s,a).unproject(n);let o=t[e];if(void 0!==o){let l=i.getAttribute("position");for(let u=0,h=o.length;u<h;u++)l.setXYZ(o[u],cf.x,cf.y,cf.z)}}let cx=new iG;class cv extends oz{constructor(e,t=16776960){let i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),r=new ra;r.setIndex(new n6(i,1)),r.setAttribute("position",new n6(n,3)),super(r,new o0({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&cx.setFromObject(this.object),cx.isEmpty())return;let t=cx.min,i=cx.max,n=this.geometry.attributes.position,r=n.array;r[0]=i.x,r[1]=i.y,r[2]=i.z,r[3]=t.x,r[4]=i.y,r[5]=i.z,r[6]=t.x,r[7]=t.y,r[8]=i.z,r[9]=i.x,r[10]=t.y,r[11]=i.z,r[12]=i.x,r[13]=i.y,r[14]=t.z,r[15]=t.x,r[16]=i.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=i.x,r[22]=t.y,r[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}}class c8 extends oz{constructor(e,t=16776960){let i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new ra;n.setIndex(new n6(i,1)),n.setAttribute("position",new nK([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(n,new o0({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){let t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class cy extends oI{constructor(e,t=1,i=16776960){let n=i,r=new ra;r.setAttribute("position",new nK([1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),r.computeBoundingSphere(),super(r,new o0({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;let s=new ra;s.setAttribute("position",new nK([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),s.computeBoundingSphere(),this.add(new rS(s,new nH({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}}let c_=new iU,cb,cS;class cw extends nP{constructor(e=new iU(0,0,1),t=new iU(0,0,0),i=1,n=16776960,r=.2*i,s=.2*r){super(),this.type="ArrowHelper",void 0===cb&&((cb=new ra).setAttribute("position",new nK([0,0,0,0,1,0],3)),(cS=new lf(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(t),this.line=new oI(cb,new o0({color:n,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new rS(cS,new nH({color:n,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,r,s)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{c_.set(e.z,0,-e.x).normalize();let t=Math.acos(e.y);this.quaternion.setFromAxisAngle(c_,t)}}setLength(e,t=.2*e,i=.2*t){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(i,t,i),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class cM extends oz{constructor(e=1){let t=new ra;t.setAttribute("position",new nK([0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],3)),t.setAttribute("color",new nK([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));let i=new o0({vertexColors:!0,toneMapped:!1});super(t,i),this.type="AxesHelper"}setColors(e,t,i){let n=new iE,r=this.geometry.attributes.color.array;return n.set(e),n.toArray(r,0),n.toArray(r,3),n.set(t),n.toArray(r,6),n.toArray(r,9),n.set(i),n.toArray(r,12),n.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class cT{constructor(){this.type="ShapePath",this.color=new iE,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new lh,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,i,n){return this.currentPath.quadraticCurveTo(e,t,i,n),this}bezierCurveTo(e,t,i,n,r,s){return this.currentPath.bezierCurveTo(e,t,i,n,r,s),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(e,t){let i=t.length,n=!1;for(let r=i-1,s=0;s<i;r=s++){let a=t[r],o=t[s],l=o.x-a.x,u=o.y-a.y;if(Math.abs(u)>Number.EPSILON){if(u<0&&(a=t[s],l=-l,o=t[r],u=-u),e.y<a.y||e.y>o.y)continue;if(e.y===a.y){if(e.x===a.x)return!0}else{let h=u*(e.x-a.x)-l*(e.y-a.y);if(0===h)return!0;if(h<0)continue;n=!n}}else{if(e.y!==a.y)continue;if(o.x<=e.x&&e.x<=a.x||a.x<=e.x&&e.x<=o.x)return!0}}return n}let i=lH.isClockWise,n=this.subPaths;if(0===n.length)return[];let r,s,a,o=[];if(1===n.length)return s=n[0],(a=new lb).curves=s.curves,o.push(a),o;let l=!i(n[0].getPoints());l=e?!l:l;let u=[],h=[],c=[],d=0,p;h[d]=void 0,c[d]=[];for(let f=0,m=n.length;f<m;f++)r=i(p=(s=n[f]).getPoints()),(r=e?!r:r)?(!l&&h[d]&&d++,h[d]={s:new lb,p:p},h[d].s.curves=s.curves,l&&d++,c[d]=[]):c[d].push({h:s,p:p[0]});if(!h[0])return function(e){let t=[];for(let i=0,n=e.length;i<n;i++){let r=e[i],s=new lb;s.curves=r.curves,t.push(s)}return t}(n);if(h.length>1){let g=!1,$=0;for(let x=0,v=h.length;x<v;x++)u[x]=[];for(let y=0,_=h.length;y<_;y++){let b=c[y];for(let S=0;S<b.length;S++){let w=b[S],M=!0;for(let T=0;T<h.length;T++)t(w.p,h[T].p)&&(y!==T&&$++,M?(M=!1,u[T].push(w)):g=!0);M&&u[y].push(w)}}$>0&&!1===g&&(c=u)}let E;for(let A=0,C=h.length;A<C;A++){a=h[A].s,o.push(a),E=c[A];for(let L=0,R=E.length;L<R;L++)a.holes.push(E[L].h)}return o}}let cE=function(){let e=new ArrayBuffer(4),t=new Float32Array(e),i=new Uint32Array(e),n=new Uint32Array(512),r=new Uint32Array(512);for(let s=0;s<256;++s){let a=s-127;a<-27?(n[s]=0,n[256|s]=32768,r[s]=24,r[256|s]=24):a<-14?(n[s]=1024>>-a-14,n[256|s]=1024>>-a-14|32768,r[s]=-a-1,r[256|s]=-a-1):a<=15?(n[s]=a+15<<10,n[256|s]=a+15<<10|32768,r[s]=13,r[256|s]=13):a<128?(n[s]=31744,n[256|s]=64512,r[s]=24,r[256|s]=24):(n[s]=31744,n[256|s]=64512,r[s]=13,r[256|s]=13)}let o=new Uint32Array(2048),l=new Uint32Array(64),u=new Uint32Array(64);for(let h=1;h<1024;++h){let c=h<<13,d=0;for(;(8388608&c)==0;)c<<=1,d-=8388608;c&=-8388609,d+=947912704,o[h]=c|d}for(let p=1024;p<2048;++p)o[p]=939524096+(p-1024<<13);for(let f=1;f<31;++f)l[f]=f<<23;l[31]=1199570944,l[32]=2147483648;for(let m=33;m<63;++m)l[m]=2147483648+(m-32<<23);l[63]=3347054592;for(let g=1;g<64;++g)32!==g&&(u[g]=1024);return{floatView:t,uint32View:i,baseTable:n,shiftTable:r,mantissaTable:o,exponentTable:l,offsetTable:u}}();var cA=Object.freeze({__proto__:null,toHalfFloat:function(e){Math.abs(e)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),e=tQ(e,-65504,65504),cE.floatView[0]=e;let t=cE.uint32View[0],i=t>>23&511;return cE.baseTable[i]+((8388607&t)>>cE.shiftTable[i])},fromHalfFloat:function(e){let t=e>>10;return cE.uint32View[0]=cE.mantissaTable[cE.offsetTable[t]+(1023&e)]+cE.exponentTable[t],cE.floatView[0]}});function c1(){console.error("THREE.ImmediateRenderObject has been removed.")}class c0 extends iD{constructor(e,t,i){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(e,t,i),this.samples=4}}class cC extends iI{constructor(e,t,i,n){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),super(e,t,i,n)}}class cL extends iF{constructor(e,t,i,n){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(e,t,i,n)}}class cR extends rM{constructor(e,t,i,n,r,s){console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."),super(e,t,i,n,r,s)}}class cP extends ld{constructor(e,t,i,n){console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."),super(e,t,i,n)}}class cD extends lp{constructor(e,t,i,n){console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."),super(e,t,i,n)}}class cI extends lm{constructor(e,t,i,n,r,s,a){console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."),super(e,t,i,n,r,s,a)}}class cN extends lf{constructor(e,t,i,n,r,s,a,o){console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."),super(e,t,i,n,r,s,a,o)}}class cF extends l${constructor(e,t){console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."),super(e,t)}}class cz extends l6{constructor(e,t){console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."),super(e,t)}}class cO extends l5{constructor(e,t){console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."),super(e,t)}}class cB extends lc{constructor(e,t,i,n){console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."),super(e,t,i,n)}}class cU extends lj{constructor(e,t){console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."),super(e,t)}}class c2 extends r3{constructor(e,t,i,n){console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."),super(e,t,i,n)}}class c3 extends lg{constructor(e,t,i,n){console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."),super(e,t,i,n)}}class cG extends lq{constructor(e,t,i,n,r,s){console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."),super(e,t,i,n,r,s)}}class ck extends lX{constructor(e,t){console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."),super(e,t)}}class cV extends lY{constructor(e,t,i,n,r,s,a){console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."),super(e,t,i,n,r,s,a)}}class cH extends lZ{constructor(e,t){console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."),super(e,t)}}class c4 extends lJ{constructor(e,t,i,n,r){console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."),super(e,t,i,n,r)}}class cW extends lK{constructor(e,t,i,n,r,s){console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."),super(e,t,i,n,r,s)}}class c6 extends l9{constructor(e,t,i,n,r){console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."),super(e,t,i,n,r)}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:n}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=n)}}]);